/***********************************************************/
/*               BY - Static class                       */
/***********************************************************/

/*
    return types:
        status - connected, disconnected, unauthorized, unsupported
        session - 
/*

/* Main BumpYard sdk class - static */
function BY_isMobile() {
    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
        return true;
    }
    return false;
}

var BY_isSafari = false;
var ua = navigator.userAgent.toLowerCase();
if (ua.indexOf('safari') != -1) {
    if (ua.indexOf('chrome') > -1) {
        BY_isSafari = false;
    } else {
        BY_isSafari = true;
    }
}

function BY_isNullOrEmpty(obj) {
    return (obj == undefined || obj == null || obj == 'undefined' || (typeof (obj) == "string" && obj.trim().length == 0));
}


var BY = (function () {

    //************ Private methods and variables ********** //
    var private1 = function () { };

    var execJqueryCode =  function () {
        /*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org/license */
        !function (e, t) { "use strict"; "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function (e) { if (!e.document) throw new Error("jQuery requires a window with a document"); return t(e) } : t(e) }("undefined" != typeof window ? window : this, function (e, t) { "use strict"; var n = [], r = e.document, i = Object.getPrototypeOf, o = n.slice, a = n.concat, s = n.push, u = n.indexOf, l = {}, c = l.toString, f = l.hasOwnProperty, p = f.toString, d = p.call(Object), h = {}, g = function e(t) { return "function" == typeof t && "number" != typeof t.nodeType }, y = function e(t) { return null != t && t === t.window }, v = { type: !0, src: !0, noModule: !0 }; function m(e, t, n) { var i, o = (t = t || r).createElement("script"); if (o.text = e, n) for (i in v) n[i] && (o[i] = n[i]); t.head.appendChild(o).parentNode.removeChild(o) } function x(e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? l[c.call(e)] || "object" : typeof e } var b = "3.3.1", w = function (e, t) { return new w.fn.init(e, t) }, T = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; w.fn = w.prototype = { jquery: "3.3.1", constructor: w, length: 0, toArray: function () { return o.call(this) }, get: function (e) { return null == e ? o.call(this) : e < 0 ? this[e + this.length] : this[e] }, pushStack: function (e) { var t = w.merge(this.constructor(), e); return t.prevObject = this, t }, each: function (e) { return w.each(this, e) }, map: function (e) { return this.pushStack(w.map(this, function (t, n) { return e.call(t, n, t) })) }, slice: function () { return this.pushStack(o.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (e) { var t = this.length, n = +e + (e < 0 ? t : 0); return this.pushStack(n >= 0 && n < t ? [this[n]] : []) }, end: function () { return this.prevObject || this.constructor() }, push: s, sort: n.sort, splice: n.splice }, w.extend = w.fn.extend = function () { var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1; for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || g(a) || (a = {}), s === u && (a = this, s--) ; s < u; s++) if (null != (e = arguments[s])) for (t in e) n = a[t], a !== (r = e[t]) && (l && r && (w.isPlainObject(r) || (i = Array.isArray(r))) ? (i ? (i = !1, o = n && Array.isArray(n) ? n : []) : o = n && w.isPlainObject(n) ? n : {}, a[t] = w.extend(l, o, r)) : void 0 !== r && (a[t] = r)); return a }, w.extend({ expando: "jQuery" + ("3.3.1" + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (e) { throw new Error(e) }, noop: function () { }, isPlainObject: function (e) { var t, n; return !(!e || "[object Object]" !== c.call(e)) && (!(t = i(e)) || "function" == typeof (n = f.call(t, "constructor") && t.constructor) && p.call(n) === d) }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, globalEval: function (e) { m(e) }, each: function (e, t) { var n, r = 0; if (C(e)) { for (n = e.length; r < n; r++) if (!1 === t.call(e[r], r, e[r])) break } else for (r in e) if (!1 === t.call(e[r], r, e[r])) break; return e }, trim: function (e) { return null == e ? "" : (e + "").replace(T, "") }, makeArray: function (e, t) { var n = t || []; return null != e && (C(Object(e)) ? w.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)), n }, inArray: function (e, t, n) { return null == t ? -1 : u.call(t, e, n) }, merge: function (e, t) { for (var n = +t.length, r = 0, i = e.length; r < n; r++) e[i++] = t[r]; return e.length = i, e }, grep: function (e, t, n) { for (var r, i = [], o = 0, a = e.length, s = !n; o < a; o++) (r = !t(e[o], o)) !== s && i.push(e[o]); return i }, map: function (e, t, n) { var r, i, o = 0, s = []; if (C(e)) for (r = e.length; o < r; o++) null != (i = t(e[o], o, n)) && s.push(i); else for (o in e) null != (i = t(e[o], o, n)) && s.push(i); return a.apply([], s) }, guid: 1, support: h }), "function" == typeof Symbol && (w.fn[Symbol.iterator] = n[Symbol.iterator]), w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) { l["[object " + t + "]"] = t.toLowerCase() }); function C(e) { var t = !!e && "length" in e && e.length, n = x(e); return !g(e) && !y(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e) } var E = function (e) { var t, n, r, i, o, a, s, u, l, c, f, p, d, h, g, y, v, m, x, b = "sizzle" + 1 * new Date, w = e.document, T = 0, C = 0, E = ae(), k = ae(), S = ae(), D = function (e, t) { return e === t && (f = !0), 0 }, N = {}.hasOwnProperty, A = [], j = A.pop, q = A.push, L = A.push, H = A.slice, O = function (e, t) { for (var n = 0, r = e.length; n < r; n++) if (e[n] === t) return n; return -1 }, P = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", R = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", I = "\\[" + M + "*(" + R + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + R + "))|)" + M + "*\\]", W = ":(" + R + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + I + ")*)|.*)\\)|)", $ = new RegExp(M + "+", "g"), B = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"), F = new RegExp("^" + M + "*," + M + "*"), _ = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), z = new RegExp("=" + M + "*([^\\]'\"]*?)" + M + "*\\]", "g"), X = new RegExp(W), U = new RegExp("^" + R + "$"), V = { ID: new RegExp("^#(" + R + ")"), CLASS: new RegExp("^\\.(" + R + ")"), TAG: new RegExp("^(" + R + "|[*])"), ATTR: new RegExp("^" + I), PSEUDO: new RegExp("^" + W), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"), bool: new RegExp("^(?:" + P + ")$", "i"), needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i") }, G = /^(?:input|select|textarea|button)$/i, Y = /^h\d$/i, Q = /^[^{]+\{\s*\[native \w/, J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, K = /[+~]/, Z = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"), ee = function (e, t, n) { var r = "0x" + t - 65536; return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320) }, te = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ne = function (e, t) { return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e }, re = function () { p() }, ie = me(function (e) { return !0 === e.disabled && ("form" in e || "label" in e) }, { dir: "parentNode", next: "legend" }); try { L.apply(A = H.call(w.childNodes), w.childNodes), A[w.childNodes.length].nodeType } catch (e) { L = { apply: A.length ? function (e, t) { q.apply(e, H.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function oe(e, t, r, i) { var o, s, l, c, f, h, v, m = t && t.ownerDocument, T = t ? t.nodeType : 9; if (r = r || [], "string" != typeof e || !e || 1 !== T && 9 !== T && 11 !== T) return r; if (!i && ((t ? t.ownerDocument || t : w) !== d && p(t), t = t || d, g)) { if (11 !== T && (f = J.exec(e))) if (o = f[1]) { if (9 === T) { if (!(l = t.getElementById(o))) return r; if (l.id === o) return r.push(l), r } else if (m && (l = m.getElementById(o)) && x(t, l) && l.id === o) return r.push(l), r } else { if (f[2]) return L.apply(r, t.getElementsByTagName(e)), r; if ((o = f[3]) && n.getElementsByClassName && t.getElementsByClassName) return L.apply(r, t.getElementsByClassName(o)), r } if (n.qsa && !S[e + " "] && (!y || !y.test(e))) { if (1 !== T) m = t, v = e; else if ("object" !== t.nodeName.toLowerCase()) { (c = t.getAttribute("id")) ? c = c.replace(te, ne) : t.setAttribute("id", c = b), s = (h = a(e)).length; while (s--) h[s] = "#" + c + " " + ve(h[s]); v = h.join(","), m = K.test(e) && ge(t.parentNode) || t } if (v) try { return L.apply(r, m.querySelectorAll(v)), r } catch (e) { } finally { c === b && t.removeAttribute("id") } } } return u(e.replace(B, "$1"), t, r, i) } function ae() { var e = []; function t(n, i) { return e.push(n + " ") > r.cacheLength && delete t[e.shift()], t[n + " "] = i } return t } function se(e) { return e[b] = !0, e } function ue(e) { var t = d.createElement("fieldset"); try { return !!e(t) } catch (e) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function le(e, t) { var n = e.split("|"), i = n.length; while (i--) r.attrHandle[n[i]] = t } function ce(e, t) { var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex; if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function fe(e) { return function (t) { return "input" === t.nodeName.toLowerCase() && t.type === e } } function pe(e) { return function (t) { var n = t.nodeName.toLowerCase(); return ("input" === n || "button" === n) && t.type === e } } function de(e) { return function (t) { return "form" in t ? t.parentNode && !1 === t.disabled ? "label" in t ? "label" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ie(t) === e : t.disabled === e : "label" in t && t.disabled === e } } function he(e) { return se(function (t) { return t = +t, se(function (n, r) { var i, o = e([], n.length, t), a = o.length; while (a--) n[i = o[a]] && (n[i] = !(r[i] = n[i])) }) }) } function ge(e) { return e && "undefined" != typeof e.getElementsByTagName && e } n = oe.support = {}, o = oe.isXML = function (e) { var t = e && (e.ownerDocument || e).documentElement; return !!t && "HTML" !== t.nodeName }, p = oe.setDocument = function (e) { var t, i, a = e ? e.ownerDocument || e : w; return a !== d && 9 === a.nodeType && a.documentElement ? (d = a, h = d.documentElement, g = !o(d), w !== d && (i = d.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", re, !1) : i.attachEvent && i.attachEvent("onunload", re)), n.attributes = ue(function (e) { return e.className = "i", !e.getAttribute("className") }), n.getElementsByTagName = ue(function (e) { return e.appendChild(d.createComment("")), !e.getElementsByTagName("*").length }), n.getElementsByClassName = Q.test(d.getElementsByClassName), n.getById = ue(function (e) { return h.appendChild(e).id = b, !d.getElementsByName || !d.getElementsByName(b).length }), n.getById ? (r.filter.ID = function (e) { var t = e.replace(Z, ee); return function (e) { return e.getAttribute("id") === t } }, r.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && g) { var n = t.getElementById(e); return n ? [n] : [] } }) : (r.filter.ID = function (e) { var t = e.replace(Z, ee); return function (e) { var n = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id"); return n && n.value === t } }, r.find.ID = function (e, t) { if ("undefined" != typeof t.getElementById && g) { var n, r, i, o = t.getElementById(e); if (o) { if ((n = o.getAttributeNode("id")) && n.value === e) return [o]; i = t.getElementsByName(e), r = 0; while (o = i[r++]) if ((n = o.getAttributeNode("id")) && n.value === e) return [o] } return [] } }), r.find.TAG = n.getElementsByTagName ? function (e, t) { return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : n.qsa ? t.querySelectorAll(e) : void 0 } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, r.find.CLASS = n.getElementsByClassName && function (e, t) { if ("undefined" != typeof t.getElementsByClassName && g) return t.getElementsByClassName(e) }, v = [], y = [], (n.qsa = Q.test(d.querySelectorAll)) && (ue(function (e) { h.appendChild(e).innerHTML = "<a id='" + b + "'></a><select id='" + b + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && y.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || y.push("\\[" + M + "*(?:value|" + P + ")"), e.querySelectorAll("[id~=" + b + "-]").length || y.push("~="), e.querySelectorAll(":checked").length || y.push(":checked"), e.querySelectorAll("a#" + b + "+*").length || y.push(".#.+[+~]") }), ue(function (e) { e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>"; var t = d.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && y.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && y.push(":enabled", ":disabled"), h.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && y.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), y.push(",.*:") })), (n.matchesSelector = Q.test(m = h.matches || h.webkitMatchesSelector || h.mozMatchesSelector || h.oMatchesSelector || h.msMatchesSelector)) && ue(function (e) { n.disconnectedMatch = m.call(e, "*"), m.call(e, "[s!='']:x"), v.push("!=", W) }), y = y.length && new RegExp(y.join("|")), v = v.length && new RegExp(v.join("|")), t = Q.test(h.compareDocumentPosition), x = t || Q.test(h.contains) ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, D = t ? function (e, t) { if (e === t) return f = !0, 0; var r = !e.compareDocumentPosition - !t.compareDocumentPosition; return r || (1 & (r = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !n.sortDetached && t.compareDocumentPosition(e) === r ? e === d || e.ownerDocument === w && x(w, e) ? -1 : t === d || t.ownerDocument === w && x(w, t) ? 1 : c ? O(c, e) - O(c, t) : 0 : 4 & r ? -1 : 1) } : function (e, t) { if (e === t) return f = !0, 0; var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], s = [t]; if (!i || !o) return e === d ? -1 : t === d ? 1 : i ? -1 : o ? 1 : c ? O(c, e) - O(c, t) : 0; if (i === o) return ce(e, t); n = e; while (n = n.parentNode) a.unshift(n); n = t; while (n = n.parentNode) s.unshift(n); while (a[r] === s[r]) r++; return r ? ce(a[r], s[r]) : a[r] === w ? -1 : s[r] === w ? 1 : 0 }, d) : d }, oe.matches = function (e, t) { return oe(e, null, null, t) }, oe.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== d && p(e), t = t.replace(z, "='$1']"), n.matchesSelector && g && !S[t + " "] && (!v || !v.test(t)) && (!y || !y.test(t))) try { var r = m.call(e, t); if (r || n.disconnectedMatch || e.document && 11 !== e.document.nodeType) return r } catch (e) { } return oe(t, d, null, [e]).length > 0 }, oe.contains = function (e, t) { return (e.ownerDocument || e) !== d && p(e), x(e, t) }, oe.attr = function (e, t) { (e.ownerDocument || e) !== d && p(e); var i = r.attrHandle[t.toLowerCase()], o = i && N.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !g) : void 0; return void 0 !== o ? o : n.attributes || !g ? e.getAttribute(t) : (o = e.getAttributeNode(t)) && o.specified ? o.value : null }, oe.escape = function (e) { return (e + "").replace(te, ne) }, oe.error = function (e) { throw new Error("Syntax error, unrecognized expression: " + e) }, oe.uniqueSort = function (e) { var t, r = [], i = 0, o = 0; if (f = !n.detectDuplicates, c = !n.sortStable && e.slice(0), e.sort(D), f) { while (t = e[o++]) t === e[o] && (i = r.push(o)); while (i--) e.splice(r[i], 1) } return c = null, e }, i = oe.getText = function (e) { var t, n = "", r = 0, o = e.nodeType; if (o) { if (1 === o || 9 === o || 11 === o) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling) n += i(e) } else if (3 === o || 4 === o) return e.nodeValue } else while (t = e[r++]) n += i(t); return n }, (r = oe.selectors = { cacheLength: 50, createPseudo: se, match: V, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(Z, ee), e[3] = (e[3] || e[4] || e[5] || "").replace(Z, ee), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || oe.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && oe.error(e[0]), e }, PSEUDO: function (e) { var t, n = !e[6] && e[2]; return V.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = a(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(Z, ee).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = E[e + " "]; return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && E(e, function (e) { return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "") }) }, ATTR: function (e, t, n) { return function (r) { var i = oe.attr(r, e); return null == i ? "!=" === t : !t || (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i.replace($, " ") + " ").indexOf(n) > -1 : "|=" === t && (i === n || i.slice(0, n.length + 1) === n + "-")) } }, CHILD: function (e, t, n, r, i) { var o = "nth" !== e.slice(0, 3), a = "last" !== e.slice(-4), s = "of-type" === t; return 1 === r && 0 === i ? function (e) { return !!e.parentNode } : function (t, n, u) { var l, c, f, p, d, h, g = o !== a ? "nextSibling" : "previousSibling", y = t.parentNode, v = s && t.nodeName.toLowerCase(), m = !u && !s, x = !1; if (y) { if (o) { while (g) { p = t; while (p = p[g]) if (s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType) return !1; h = g = "only" === e && !h && "nextSibling" } return !0 } if (h = [a ? y.firstChild : y.lastChild], a && m) { x = (d = (l = (c = (f = (p = y)[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] || [])[0] === T && l[1]) && l[2], p = d && y.childNodes[d]; while (p = ++d && p && p[g] || (x = d = 0) || h.pop()) if (1 === p.nodeType && ++x && p === t) { c[e] = [T, d, x]; break } } else if (m && (x = d = (l = (c = (f = (p = t)[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] || [])[0] === T && l[1]), !1 === x) while (p = ++d && p && p[g] || (x = d = 0) || h.pop()) if ((s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType) && ++x && (m && ((c = (f = p[b] || (p[b] = {}))[p.uniqueID] || (f[p.uniqueID] = {}))[e] = [T, x]), p === t)) break; return (x -= i) === r || x % r == 0 && x / r >= 0 } } }, PSEUDO: function (e, t) { var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || oe.error("unsupported pseudo: " + e); return i[b] ? i(t) : i.length > 1 ? (n = [e, e, "", t], r.setFilters.hasOwnProperty(e.toLowerCase()) ? se(function (e, n) { var r, o = i(e, t), a = o.length; while (a--) e[r = O(e, o[a])] = !(n[r] = o[a]) }) : function (e) { return i(e, 0, n) }) : i } }, pseudos: { not: se(function (e) { var t = [], n = [], r = s(e.replace(B, "$1")); return r[b] ? se(function (e, t, n, i) { var o, a = r(e, null, i, []), s = e.length; while (s--) (o = a[s]) && (e[s] = !(t[s] = o)) }) : function (e, i, o) { return t[0] = e, r(t, null, o, n), t[0] = null, !n.pop() } }), has: se(function (e) { return function (t) { return oe(e, t).length > 0 } }), contains: se(function (e) { return e = e.replace(Z, ee), function (t) { return (t.textContent || t.innerText || i(t)).indexOf(e) > -1 } }), lang: se(function (e) { return U.test(e || "") || oe.error("unsupported lang: " + e), e = e.replace(Z, ee).toLowerCase(), function (t) { var n; do { if (n = g ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-") } while ((t = t.parentNode) && 1 === t.nodeType); return !1 } }), target: function (t) { var n = e.location && e.location.hash; return n && n.slice(1) === t.id }, root: function (e) { return e === h }, focus: function (e) { return e === d.activeElement && (!d.hasFocus || d.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: de(!1), disabled: de(!0), checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1; return !0 }, parent: function (e) { return !r.pseudos.empty(e) }, header: function (e) { return Y.test(e.nodeName) }, input: function (e) { return G.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase()) }, first: he(function () { return [0] }), last: he(function (e, t) { return [t - 1] }), eq: he(function (e, t, n) { return [n < 0 ? n + t : n] }), even: he(function (e, t) { for (var n = 0; n < t; n += 2) e.push(n); return e }), odd: he(function (e, t) { for (var n = 1; n < t; n += 2) e.push(n); return e }), lt: he(function (e, t, n) { for (var r = n < 0 ? n + t : n; --r >= 0;) e.push(r); return e }), gt: he(function (e, t, n) { for (var r = n < 0 ? n + t : n; ++r < t;) e.push(r); return e }) } }).pseudos.nth = r.pseudos.eq; for (t in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) r.pseudos[t] = fe(t); for (t in { submit: !0, reset: !0 }) r.pseudos[t] = pe(t); function ye() { } ye.prototype = r.filters = r.pseudos, r.setFilters = new ye, a = oe.tokenize = function (e, t) { var n, i, o, a, s, u, l, c = k[e + " "]; if (c) return t ? 0 : c.slice(0); s = e, u = [], l = r.preFilter; while (s) { n && !(i = F.exec(s)) || (i && (s = s.slice(i[0].length) || s), u.push(o = [])), n = !1, (i = _.exec(s)) && (n = i.shift(), o.push({ value: n, type: i[0].replace(B, " ") }), s = s.slice(n.length)); for (a in r.filter) !(i = V[a].exec(s)) || l[a] && !(i = l[a](i)) || (n = i.shift(), o.push({ value: n, type: a, matches: i }), s = s.slice(n.length)); if (!n) break } return t ? s.length : s ? oe.error(e) : k(e, u).slice(0) }; function ve(e) { for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value; return r } function me(e, t, n) { var r = t.dir, i = t.next, o = i || r, a = n && "parentNode" === o, s = C++; return t.first ? function (t, n, i) { while (t = t[r]) if (1 === t.nodeType || a) return e(t, n, i); return !1 } : function (t, n, u) { var l, c, f, p = [T, s]; if (u) { while (t = t[r]) if ((1 === t.nodeType || a) && e(t, n, u)) return !0 } else while (t = t[r]) if (1 === t.nodeType || a) if (f = t[b] || (t[b] = {}), c = f[t.uniqueID] || (f[t.uniqueID] = {}), i && i === t.nodeName.toLowerCase()) t = t[r] || t; else { if ((l = c[o]) && l[0] === T && l[1] === s) return p[2] = l[2]; if (c[o] = p, p[2] = e(t, n, u)) return !0 } return !1 } } function xe(e) { return e.length > 1 ? function (t, n, r) { var i = e.length; while (i--) if (!e[i](t, n, r)) return !1; return !0 } : e[0] } function be(e, t, n) { for (var r = 0, i = t.length; r < i; r++) oe(e, t[r], n); return n } function we(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++) (o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a } function Te(e, t, n, r, i, o) { return r && !r[b] && (r = Te(r)), i && !i[b] && (i = Te(i, o)), se(function (o, a, s, u) { var l, c, f, p = [], d = [], h = a.length, g = o || be(t || "*", s.nodeType ? [s] : s, []), y = !e || !o && t ? g : we(g, p, e, s, u), v = n ? i || (o ? e : h || r) ? [] : a : y; if (n && n(y, v, s, u), r) { l = we(v, d), r(l, [], s, u), c = l.length; while (c--) (f = l[c]) && (v[d[c]] = !(y[d[c]] = f)) } if (o) { if (i || e) { if (i) { l = [], c = v.length; while (c--) (f = v[c]) && l.push(y[c] = f); i(null, v = [], l, u) } c = v.length; while (c--) (f = v[c]) && (l = i ? O(o, f) : p[c]) > -1 && (o[l] = !(a[l] = f)) } } else v = we(v === a ? v.splice(h, v.length) : v), i ? i(null, a, v, u) : L.apply(a, v) }) } function Ce(e) { for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[" "], u = a ? 1 : 0, c = me(function (e) { return e === t }, s, !0), f = me(function (e) { return O(t, e) > -1 }, s, !0), p = [function (e, n, r) { var i = !a && (r || n !== l) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)); return t = null, i }]; u < o; u++) if (n = r.relative[e[u].type]) p = [me(xe(p), n)]; else { if ((n = r.filter[e[u].type].apply(null, e[u].matches))[b]) { for (i = ++u; i < o; i++) if (r.relative[e[i].type]) break; return Te(u > 1 && xe(p), u > 1 && ve(e.slice(0, u - 1).concat({ value: " " === e[u - 2].type ? "*" : "" })).replace(B, "$1"), n, u < i && Ce(e.slice(u, i)), i < o && Ce(e = e.slice(i)), i < o && ve(e)) } p.push(n) } return xe(p) } function Ee(e, t) { var n = t.length > 0, i = e.length > 0, o = function (o, a, s, u, c) { var f, h, y, v = 0, m = "0", x = o && [], b = [], w = l, C = o || i && r.find.TAG("*", c), E = T += null == w ? 1 : Math.random() || .1, k = C.length; for (c && (l = a === d || a || c) ; m !== k && null != (f = C[m]) ; m++) { if (i && f) { h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++]) if (y(f, a || d, s)) { u.push(f); break } c && (T = E) } n && ((f = !y && f) && v--, o && x.push(f)) } if (v += m, n && m !== v) { h = 0; while (y = t[h++]) y(x, b, a, s); if (o) { if (v > 0) while (m--) x[m] || b[m] || (b[m] = j.call(u)); b = we(b) } L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u) } return c && (T = E, l = w), x }; return n ? se(o) : o } return s = oe.compile = function (e, t) { var n, r = [], i = [], o = S[e + " "]; if (!o) { t || (t = a(e)), n = t.length; while (n--) (o = Ce(t[n]))[b] ? r.push(o) : i.push(o); (o = S(e, Ee(i, r))).selector = e } return o }, u = oe.select = function (e, t, n, i) { var o, u, l, c, f, p = "function" == typeof e && e, d = !i && a(e = p.selector || e); if (n = n || [], 1 === d.length) { if ((u = d[0] = d[0].slice(0)).length > 2 && "ID" === (l = u[0]).type && 9 === t.nodeType && g && r.relative[u[1].type]) { if (!(t = (r.find.ID(l.matches[0].replace(Z, ee), t) || [])[0])) return n; p && (t = t.parentNode), e = e.slice(u.shift().value.length) } o = V.needsContext.test(e) ? 0 : u.length; while (o--) { if (l = u[o], r.relative[c = l.type]) break; if ((f = r.find[c]) && (i = f(l.matches[0].replace(Z, ee), K.test(u[0].type) && ge(t.parentNode) || t))) { if (u.splice(o, 1), !(e = i.length && ve(u))) return L.apply(n, i), n; break } } } return (p || s(e, d))(i, t, !g, n, !t || K.test(e) && ge(t.parentNode) || t), n }, n.sortStable = b.split("").sort(D).join("") === b, n.detectDuplicates = !!f, p(), n.sortDetached = ue(function (e) { return 1 & e.compareDocumentPosition(d.createElement("fieldset")) }), ue(function (e) { return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href") }) || le("type|href|height|width", function (e, t, n) { if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2) }), n.attributes && ue(function (e) { return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value") }) || le("value", function (e, t, n) { if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue }), ue(function (e) { return null == e.getAttribute("disabled") }) || le(P, function (e, t, n) { var r; if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null }), oe }(e); w.find = E, w.expr = E.selectors, w.expr[":"] = w.expr.pseudos, w.uniqueSort = w.unique = E.uniqueSort, w.text = E.getText, w.isXMLDoc = E.isXML, w.contains = E.contains, w.escapeSelector = E.escape; var k = function (e, t, n) { var r = [], i = void 0 !== n; while ((e = e[t]) && 9 !== e.nodeType) if (1 === e.nodeType) { if (i && w(e).is(n)) break; r.push(e) } return r }, S = function (e, t) { for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e); return n }, D = w.expr.match.needsContext; function N(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() } var A = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; function j(e, t, n) { return g(t) ? w.grep(e, function (e, r) { return !!t.call(e, r, e) !== n }) : t.nodeType ? w.grep(e, function (e) { return e === t !== n }) : "string" != typeof t ? w.grep(e, function (e) { return u.call(t, e) > -1 !== n }) : w.filter(t, e, n) } w.filter = function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? w.find.matchesSelector(r, e) ? [r] : [] : w.find.matches(e, w.grep(t, function (e) { return 1 === e.nodeType })) }, w.fn.extend({ find: function (e) { var t, n, r = this.length, i = this; if ("string" != typeof e) return this.pushStack(w(e).filter(function () { for (t = 0; t < r; t++) if (w.contains(i[t], this)) return !0 })); for (n = this.pushStack([]), t = 0; t < r; t++) w.find(e, i[t], n); return r > 1 ? w.uniqueSort(n) : n }, filter: function (e) { return this.pushStack(j(this, e || [], !1)) }, not: function (e) { return this.pushStack(j(this, e || [], !0)) }, is: function (e) { return !!j(this, "string" == typeof e && D.test(e) ? w(e) : e || [], !1).length } }); var q, L = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/; (w.fn.init = function (e, t, n) { var i, o; if (!e) return this; if (n = n || q, "string" == typeof e) { if (!(i = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : L.exec(e)) || !i[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e); if (i[1]) { if (t = t instanceof w ? t[0] : t, w.merge(this, w.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : r, !0)), A.test(i[1]) && w.isPlainObject(t)) for (i in t) g(this[i]) ? this[i](t[i]) : this.attr(i, t[i]); return this } return (o = r.getElementById(i[2])) && (this[0] = o, this.length = 1), this } return e.nodeType ? (this[0] = e, this.length = 1, this) : g(e) ? void 0 !== n.ready ? n.ready(e) : e(w) : w.makeArray(e, this) }).prototype = w.fn, q = w(r); var H = /^(?:parents|prev(?:Until|All))/, O = { children: !0, contents: !0, next: !0, prev: !0 }; w.fn.extend({ has: function (e) { var t = w(e, this), n = t.length; return this.filter(function () { for (var e = 0; e < n; e++) if (w.contains(this, t[e])) return !0 }) }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], a = "string" != typeof e && w(e); if (!D.test(e)) for (; r < i; r++) for (n = this[r]; n && n !== t; n = n.parentNode) if (n.nodeType < 11 && (a ? a.index(n) > -1 : 1 === n.nodeType && w.find.matchesSelector(n, e))) { o.push(n); break } return this.pushStack(o.length > 1 ? w.uniqueSort(o) : o) }, index: function (e) { return e ? "string" == typeof e ? u.call(w(e), this[0]) : u.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { return this.pushStack(w.uniqueSort(w.merge(this.get(), w(e, t)))) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }); function P(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e } w.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return k(e, "parentNode") }, parentsUntil: function (e, t, n) { return k(e, "parentNode", n) }, next: function (e) { return P(e, "nextSibling") }, prev: function (e) { return P(e, "previousSibling") }, nextAll: function (e) { return k(e, "nextSibling") }, prevAll: function (e) { return k(e, "previousSibling") }, nextUntil: function (e, t, n) { return k(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return k(e, "previousSibling", n) }, siblings: function (e) { return S((e.parentNode || {}).firstChild, e) }, children: function (e) { return S(e.firstChild) }, contents: function (e) { return N(e, "iframe") ? e.contentDocument : (N(e, "template") && (e = e.content || e), w.merge([], e.childNodes)) } }, function (e, t) { w.fn[e] = function (n, r) { var i = w.map(this, t, n); return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = w.filter(r, i)), this.length > 1 && (O[e] || w.uniqueSort(i), H.test(e) && i.reverse()), this.pushStack(i) } }); var M = /[^\x20\t\r\n\f]+/g; function R(e) { var t = {}; return w.each(e.match(M) || [], function (e, n) { t[n] = !0 }), t } w.Callbacks = function (e) { e = "string" == typeof e ? R(e) : w.extend({}, e); var t, n, r, i, o = [], a = [], s = -1, u = function () { for (i = i || e.once, r = t = !0; a.length; s = -1) { n = a.shift(); while (++s < o.length) !1 === o[s].apply(n[0], n[1]) && e.stopOnFalse && (s = o.length, n = !1) } e.memory || (n = !1), t = !1, i && (o = n ? [] : "") }, l = { add: function () { return o && (n && !t && (s = o.length - 1, a.push(n)), function t(n) { w.each(n, function (n, r) { g(r) ? e.unique && l.has(r) || o.push(r) : r && r.length && "string" !== x(r) && t(r) }) }(arguments), n && !t && u()), this }, remove: function () { return w.each(arguments, function (e, t) { var n; while ((n = w.inArray(t, o, n)) > -1) o.splice(n, 1), n <= s && s-- }), this }, has: function (e) { return e ? w.inArray(e, o) > -1 : o.length > 0 }, empty: function () { return o && (o = []), this }, disable: function () { return i = a = [], o = n = "", this }, disabled: function () { return !o }, lock: function () { return i = a = [], n || t || (o = n = ""), this }, locked: function () { return !!i }, fireWith: function (e, n) { return i || (n = [e, (n = n || []).slice ? n.slice() : n], a.push(n), t || u()), this }, fire: function () { return l.fireWith(this, arguments), this }, fired: function () { return !!r } }; return l }; function I(e) { return e } function W(e) { throw e } function $(e, t, n, r) { var i; try { e && g(i = e.promise) ? i.call(e).done(t).fail(n) : e && g(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)) } catch (e) { n.apply(void 0, [e]) } } w.extend({ Deferred: function (t) { var n = [["notify", "progress", w.Callbacks("memory"), w.Callbacks("memory"), 2], ["resolve", "done", w.Callbacks("once memory"), w.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", w.Callbacks("once memory"), w.Callbacks("once memory"), 1, "rejected"]], r = "pending", i = { state: function () { return r }, always: function () { return o.done(arguments).fail(arguments), this }, "catch": function (e) { return i.then(null, e) }, pipe: function () { var e = arguments; return w.Deferred(function (t) { w.each(n, function (n, r) { var i = g(e[r[4]]) && e[r[4]]; o[r[1]](function () { var e = i && i.apply(this, arguments); e && g(e.promise) ? e.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[r[0] + "With"](this, i ? [e] : arguments) }) }), e = null }).promise() }, then: function (t, r, i) { var o = 0; function a(t, n, r, i) { return function () { var s = this, u = arguments, l = function () { var e, l; if (!(t < o)) { if ((e = r.apply(s, u)) === n.promise()) throw new TypeError("Thenable self-resolution"); l = e && ("object" == typeof e || "function" == typeof e) && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u)) } }, c = i ? l : function () { try { l() } catch (e) { w.Deferred.exceptionHook && w.Deferred.exceptionHook(e, c.stackTrace), t + 1 >= o && (r !== W && (s = void 0, u = [e]), n.rejectWith(s, u)) } }; t ? c() : (w.Deferred.getStackHook && (c.stackTrace = w.Deferred.getStackHook()), e.setTimeout(c)) } } return w.Deferred(function (e) { n[0][3].add(a(0, e, g(i) ? i : I, e.notifyWith)), n[1][3].add(a(0, e, g(t) ? t : I)), n[2][3].add(a(0, e, g(r) ? r : W)) }).promise() }, promise: function (e) { return null != e ? w.extend(e, i) : i } }, o = {}; return w.each(n, function (e, t) { var a = t[2], s = t[5]; i[t[1]] = a.add, s && a.add(function () { r = s }, n[3 - e][2].disable, n[3 - e][3].disable, n[0][2].lock, n[0][3].lock), a.add(t[3].fire), o[t[0]] = function () { return o[t[0] + "With"](this === o ? void 0 : this, arguments), this }, o[t[0] + "With"] = a.fireWith }), i.promise(o), t && t.call(o, o), o }, when: function (e) { var t = arguments.length, n = t, r = Array(n), i = o.call(arguments), a = w.Deferred(), s = function (e) { return function (n) { r[e] = this, i[e] = arguments.length > 1 ? o.call(arguments) : n, --t || a.resolveWith(r, i) } }; if (t <= 1 && ($(e, a.done(s(n)).resolve, a.reject, !t), "pending" === a.state() || g(i[n] && i[n].then))) return a.then(); while (n--) $(i[n], s(n), a.reject); return a.promise() } }); var B = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/; w.Deferred.exceptionHook = function (t, n) { e.console && e.console.warn && t && B.test(t.name) && e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, n) }, w.readyException = function (t) { e.setTimeout(function () { throw t }) }; var F = w.Deferred(); w.fn.ready = function (e) { return F.then(e)["catch"](function (e) { w.readyException(e) }), this }, w.extend({ isReady: !1, readyWait: 1, ready: function (e) { (!0 === e ? --w.readyWait : w.isReady) || (w.isReady = !0, !0 !== e && --w.readyWait > 0 || F.resolveWith(r, [w])) } }), w.ready.then = F.then; function _() { r.removeEventListener("DOMContentLoaded", _), e.removeEventListener("load", _), w.ready() } "complete" === r.readyState || "loading" !== r.readyState && !r.documentElement.doScroll ? e.setTimeout(w.ready) : (r.addEventListener("DOMContentLoaded", _), e.addEventListener("load", _)); var z = function (e, t, n, r, i, o, a) { var s = 0, u = e.length, l = null == n; if ("object" === x(n)) { i = !0; for (s in n) z(e, t, s, n[s], !0, o, a) } else if (void 0 !== r && (i = !0, g(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(w(e), n) })), t)) for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }, X = /^-ms-/, U = /-([a-z])/g; function V(e, t) { return t.toUpperCase() } function G(e) { return e.replace(X, "ms-").replace(U, V) } var Y = function (e) { return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType }; function Q() { this.expando = w.expando + Q.uid++ } Q.uid = 1, Q.prototype = { cache: function (e) { var t = e[this.expando]; return t || (t = {}, Y(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, { value: t, configurable: !0 }))), t }, set: function (e, t, n) { var r, i = this.cache(e); if ("string" == typeof t) i[G(t)] = n; else for (r in t) i[G(r)] = t[r]; return i }, get: function (e, t) { return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][G(t)] }, access: function (e, t, n) { return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t) }, remove: function (e, t) { var n, r = e[this.expando]; if (void 0 !== r) { if (void 0 !== t) { n = (t = Array.isArray(t) ? t.map(G) : (t = G(t)) in r ? [t] : t.match(M) || []).length; while (n--) delete r[t[n]] } (void 0 === t || w.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]) } }, hasData: function (e) { var t = e[this.expando]; return void 0 !== t && !w.isEmptyObject(t) } }; var J = new Q, K = new Q, Z = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, ee = /[A-Z]/g; function te(e) { return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : Z.test(e) ? JSON.parse(e) : e) } function ne(e, t, n) { var r; if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(ee, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) { try { n = te(n) } catch (e) { } K.set(e, t, n) } else n = void 0; return n } w.extend({ hasData: function (e) { return K.hasData(e) || J.hasData(e) }, data: function (e, t, n) { return K.access(e, t, n) }, removeData: function (e, t) { K.remove(e, t) }, _data: function (e, t, n) { return J.access(e, t, n) }, _removeData: function (e, t) { J.remove(e, t) } }), w.fn.extend({ data: function (e, t) { var n, r, i, o = this[0], a = o && o.attributes; if (void 0 === e) { if (this.length && (i = K.get(o), 1 === o.nodeType && !J.get(o, "hasDataAttrs"))) { n = a.length; while (n--) a[n] && 0 === (r = a[n].name).indexOf("data-") && (r = G(r.slice(5)), ne(o, r, i[r])); J.set(o, "hasDataAttrs", !0) } return i } return "object" == typeof e ? this.each(function () { K.set(this, e) }) : z(this, function (t) { var n; if (o && void 0 === t) { if (void 0 !== (n = K.get(o, e))) return n; if (void 0 !== (n = ne(o, e))) return n } else this.each(function () { K.set(this, e, t) }) }, null, t, arguments.length > 1, null, !0) }, removeData: function (e) { return this.each(function () { K.remove(this, e) }) } }), w.extend({ queue: function (e, t, n) { var r; if (e) return t = (t || "fx") + "queue", r = J.get(e, t), n && (!r || Array.isArray(n) ? r = J.access(e, t, w.makeArray(n)) : r.push(n)), r || [] }, dequeue: function (e, t) { t = t || "fx"; var n = w.queue(e, t), r = n.length, i = n.shift(), o = w._queueHooks(e, t), a = function () { w.dequeue(e, t) }; "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, a, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return J.get(e, n) || J.access(e, n, { empty: w.Callbacks("once memory").add(function () { J.remove(e, [t + "queue", n]) }) }) } }), w.fn.extend({ queue: function (e, t) { var n = 2; return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? w.queue(this[0], e) : void 0 === t ? this : this.each(function () { var n = w.queue(this, e, t); w._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && w.dequeue(this, e) }) }, dequeue: function (e) { return this.each(function () { w.dequeue(this, e) }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, t) { var n, r = 1, i = w.Deferred(), o = this, a = this.length, s = function () { --r || i.resolveWith(o, [o]) }; "string" != typeof e && (t = e, e = void 0), e = e || "fx"; while (a--) (n = J.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s)); return s(), i.promise(t) } }); var re = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, ie = new RegExp("^(?:([+-])=|)(" + re + ")([a-z%]*)$", "i"), oe = ["Top", "Right", "Bottom", "Left"], ae = function (e, t) { return "none" === (e = t || e).style.display || "" === e.style.display && w.contains(e.ownerDocument, e) && "none" === w.css(e, "display") }, se = function (e, t, n, r) { var i, o, a = {}; for (o in t) a[o] = e.style[o], e.style[o] = t[o]; i = n.apply(e, r || []); for (o in t) e.style[o] = a[o]; return i }; function ue(e, t, n, r) { var i, o, a = 20, s = r ? function () { return r.cur() } : function () { return w.css(e, t, "") }, u = s(), l = n && n[3] || (w.cssNumber[t] ? "" : "px"), c = (w.cssNumber[t] || "px" !== l && +u) && ie.exec(w.css(e, t)); if (c && c[3] !== l) { u /= 2, l = l || c[3], c = +u || 1; while (a--) w.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o; c *= 2, w.style(e, t, c + l), n = n || [] } return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i } var le = {}; function ce(e) { var t, n = e.ownerDocument, r = e.nodeName, i = le[r]; return i || (t = n.body.appendChild(n.createElement(r)), i = w.css(t, "display"), t.parentNode.removeChild(t), "none" === i && (i = "block"), le[r] = i, i) } function fe(e, t) { for (var n, r, i = [], o = 0, a = e.length; o < a; o++) (r = e[o]).style && (n = r.style.display, t ? ("none" === n && (i[o] = J.get(r, "display") || null, i[o] || (r.style.display = "")), "" === r.style.display && ae(r) && (i[o] = ce(r))) : "none" !== n && (i[o] = "none", J.set(r, "display", n))); for (o = 0; o < a; o++) null != i[o] && (e[o].style.display = i[o]); return e } w.fn.extend({ show: function () { return fe(this, !0) }, hide: function () { return fe(this) }, toggle: function (e) { return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () { ae(this) ? w(this).show() : w(this).hide() }) } }); var pe = /^(?:checkbox|radio)$/i, de = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i, he = /^$|^module$|\/(?:java|ecma)script/i, ge = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; ge.optgroup = ge.option, ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td; function ye(e, t) { var n; return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && N(e, t) ? w.merge([e], n) : n } function ve(e, t) { for (var n = 0, r = e.length; n < r; n++) J.set(e[n], "globalEval", !t || J.get(t[n], "globalEval")) } var me = /<|&#?\w+;/; function xe(e, t, n, r, i) { for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++) if ((o = e[d]) || 0 === o) if ("object" === x(o)) w.merge(p, o.nodeType ? [o] : o); else if (me.test(o)) { a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || ["", ""])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + w.htmlPrefilter(o) + u[2], c = u[0]; while (c--) a = a.lastChild; w.merge(p, a.childNodes), (a = f.firstChild).textContent = "" } else p.push(t.createTextNode(o)); f.textContent = "", d = 0; while (o = p[d++]) if (r && w.inArray(o, r) > -1) i && i.push(o); else if (l = w.contains(o.ownerDocument, o), a = ye(f.appendChild(o), "script"), l && ve(a), n) { c = 0; while (o = a[c++]) he.test(o.type || "") && n.push(o) } return f } !function () { var e = r.createDocumentFragment().appendChild(r.createElement("div")), t = r.createElement("input"); t.setAttribute("type", "radio"), t.setAttribute("checked", "checked"), t.setAttribute("name", "t"), e.appendChild(t), h.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked, e.innerHTML = "<textarea>x</textarea>", h.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue }(); var be = r.documentElement, we = /^key/, Te = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Ce = /^([^.]*)(?:\.(.+)|)/; function Ee() { return !0 } function ke() { return !1 } function Se() { try { return r.activeElement } catch (e) { } } function De(e, t, n, r, i, o) { var a, s; if ("object" == typeof t) { "string" != typeof n && (r = r || n, n = void 0); for (s in t) De(e, s, n, r, t[s], o); return e } if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = ke; else if (!i) return e; return 1 === o && (a = i, (i = function (e) { return w().off(e), a.apply(this, arguments) }).guid = a.guid || (a.guid = w.guid++)), e.each(function () { w.event.add(this, t, i, r, n) }) } w.event = { global: {}, add: function (e, t, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, y = J.get(e); if (y) { n.handler && (n = (o = n).handler, i = o.selector), i && w.find.matchesSelector(be, i), n.guid || (n.guid = w.guid++), (u = y.events) || (u = y.events = {}), (a = y.handle) || (a = y.handle = function (t) { return "undefined" != typeof w && w.event.triggered !== t.type ? w.event.dispatch.apply(e, arguments) : void 0 }), l = (t = (t || "").match(M) || [""]).length; while (l--) d = g = (s = Ce.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = w.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = w.event.special[d] || {}, c = w.extend({ type: d, origType: g, data: r, handler: n, guid: n.guid, selector: i, needsContext: i && w.expr.match.needsContext.test(i), namespace: h.join(".") }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(e, r, h, a) || e.addEventListener && e.addEventListener(d, a)), f.add && (f.add.call(e, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), w.event.global[d] = !0) } }, remove: function (e, t, n, r, i) { var o, a, s, u, l, c, f, p, d, h, g, y = J.hasData(e) && J.get(e); if (y && (u = y.events)) { l = (t = (t || "").match(M) || [""]).length; while (l--) if (s = Ce.exec(t[l]) || [], d = g = s[1], h = (s[2] || "").split(".").sort(), d) { f = w.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length; while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c)); a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, y.handle) || w.removeEvent(e, d, y.handle), delete u[d]) } else for (d in u) w.event.remove(e, d + t[l], n, r, !0); w.isEmptyObject(u) && J.remove(e, "handle events") } }, dispatch: function (e) { var t = w.event.fix(e), n, r, i, o, a, s, u = new Array(arguments.length), l = (J.get(this, "events") || {})[t.type] || [], c = w.event.special[t.type] || {}; for (u[0] = t, n = 1; n < arguments.length; n++) u[n] = arguments[n]; if (t.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, t)) { s = w.event.handlers.call(this, t, l), n = 0; while ((o = s[n++]) && !t.isPropagationStopped()) { t.currentTarget = o.elem, r = 0; while ((a = o.handlers[r++]) && !t.isImmediatePropagationStopped()) t.rnamespace && !t.rnamespace.test(a.namespace) || (t.handleObj = a, t.data = a.data, void 0 !== (i = ((w.event.special[a.origType] || {}).handle || a.handler).apply(o.elem, u)) && !1 === (t.result = i) && (t.preventDefault(), t.stopPropagation())) } return c.postDispatch && c.postDispatch.call(this, t), t.result } }, handlers: function (e, t) { var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target; if (u && l.nodeType && !("click" === e.type && e.button >= 1)) for (; l !== this; l = l.parentNode || this) if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) { for (o = [], a = {}, n = 0; n < u; n++) void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? w(i, this).index(l) > -1 : w.find(i, this, null, [l]).length), a[i] && o.push(r); o.length && s.push({ elem: l, handlers: o }) } return l = this, u < t.length && s.push({ elem: l, handlers: t.slice(u) }), s }, addProp: function (e, t) { Object.defineProperty(w.Event.prototype, e, { enumerable: !0, configurable: !0, get: g(t) ? function () { if (this.originalEvent) return t(this.originalEvent) } : function () { if (this.originalEvent) return this.originalEvent[e] }, set: function (t) { Object.defineProperty(this, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) } }) }, fix: function (e) { return e[w.expando] ? e : new w.Event(e) }, special: { load: { noBubble: !0 }, focus: { trigger: function () { if (this !== Se() && this.focus) return this.focus(), !1 }, delegateType: "focusin" }, blur: { trigger: function () { if (this === Se() && this.blur) return this.blur(), !1 }, delegateType: "focusout" }, click: { trigger: function () { if ("checkbox" === this.type && this.click && N(this, "input")) return this.click(), !1 }, _default: function (e) { return N(e.target, "a") } }, beforeunload: { postDispatch: function (e) { void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result) } } } }, w.removeEvent = function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n) }, w.Event = function (e, t) { if (!(this instanceof w.Event)) return new w.Event(e, t); e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ee : ke, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && w.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[w.expando] = !0 }, w.Event.prototype = { constructor: w.Event, isDefaultPrevented: ke, isPropagationStopped: ke, isImmediatePropagationStopped: ke, isSimulated: !1, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = Ee, e && !this.isSimulated && e.preventDefault() }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = Ee, e && !this.isSimulated && e.stopPropagation() }, stopImmediatePropagation: function () { var e = this.originalEvent; this.isImmediatePropagationStopped = Ee, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation() } }, w.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function (e) { var t = e.button; return null == e.which && we.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Te.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which } }, w.event.addProp), w.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (e, t) { w.event.special[e] = { delegateType: t, bindType: t, handle: function (e) { var n, r = this, i = e.relatedTarget, o = e.handleObj; return i && (i === r || w.contains(r, i)) || (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n } } }), w.fn.extend({ on: function (e, t, n, r) { return De(this, e, t, n, r) }, one: function (e, t, n, r) { return De(this, e, t, n, r, 1) }, off: function (e, t, n) { var r, i; if (e && e.preventDefault && e.handleObj) return r = e.handleObj, w(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this; if ("object" == typeof e) { for (i in e) this.off(i, t, e[i]); return this } return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = ke), this.each(function () { w.event.remove(this, e, n, t) }) } }); var Ne = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, Ae = /<script|<style|<link/i, je = /checked\s*(?:[^=]|=\s*.checked.)/i, qe = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; function Le(e, t) { return N(e, "table") && N(11 !== t.nodeType ? t : t.firstChild, "tr") ? w(e).children("tbody")[0] || e : e } function He(e) { return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e } function Oe(e) { return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e } function Pe(e, t) { var n, r, i, o, a, s, u, l; if (1 === t.nodeType) { if (J.hasData(e) && (o = J.access(e), a = J.set(t, o), l = o.events)) { delete a.handle, a.events = {}; for (i in l) for (n = 0, r = l[i].length; n < r; n++) w.event.add(t, i, l[i][n]) } K.hasData(e) && (s = K.access(e), u = w.extend({}, s), K.set(t, u)) } } function Me(e, t) { var n = t.nodeName.toLowerCase(); "input" === n && pe.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue) } function Re(e, t, n, r) { t = a.apply([], t); var i, o, s, u, l, c, f = 0, p = e.length, d = p - 1, y = t[0], v = g(y); if (v || p > 1 && "string" == typeof y && !h.checkClone && je.test(y)) return e.each(function (i) { var o = e.eq(i); v && (t[0] = y.call(this, i, o.html())), Re(o, t, n, r) }); if (p && (i = xe(t, e[0].ownerDocument, !1, e, r), o = i.firstChild, 1 === i.childNodes.length && (i = o), o || r)) { for (u = (s = w.map(ye(i, "script"), He)).length; f < p; f++) l = i, f !== d && (l = w.clone(l, !0, !0), u && w.merge(s, ye(l, "script"))), n.call(e[f], l, f); if (u) for (c = s[s.length - 1].ownerDocument, w.map(s, Oe), f = 0; f < u; f++) l = s[f], he.test(l.type || "") && !J.access(l, "globalEval") && w.contains(c, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? w._evalUrl && w._evalUrl(l.src) : m(l.textContent.replace(qe, ""), c, l)) } return e } function Ie(e, t, n) { for (var r, i = t ? w.filter(t, e) : e, o = 0; null != (r = i[o]) ; o++) n || 1 !== r.nodeType || w.cleanData(ye(r)), r.parentNode && (n && w.contains(r.ownerDocument, r) && ve(ye(r, "script")), r.parentNode.removeChild(r)); return e } w.extend({ htmlPrefilter: function (e) { return e.replace(Ne, "<$1></$2>") }, clone: function (e, t, n) { var r, i, o, a, s = e.cloneNode(!0), u = w.contains(e.ownerDocument, e); if (!(h.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || w.isXMLDoc(e))) for (a = ye(s), r = 0, i = (o = ye(e)).length; r < i; r++) Me(o[r], a[r]); if (t) if (n) for (o = o || ye(e), a = a || ye(s), r = 0, i = o.length; r < i; r++) Pe(o[r], a[r]); else Pe(e, s); return (a = ye(s, "script")).length > 0 && ve(a, !u && ye(e, "script")), s }, cleanData: function (e) { for (var t, n, r, i = w.event.special, o = 0; void 0 !== (n = e[o]) ; o++) if (Y(n)) { if (t = n[J.expando]) { if (t.events) for (r in t.events) i[r] ? w.event.remove(n, r) : w.removeEvent(n, r, t.handle); n[J.expando] = void 0 } n[K.expando] && (n[K.expando] = void 0) } } }), w.fn.extend({ detach: function (e) { return Ie(this, e, !0) }, remove: function (e) { return Ie(this, e) }, text: function (e) { return z(this, function (e) { return void 0 === e ? w.text(this) : this.empty().each(function () { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e) }) }, null, e, arguments.length) }, append: function () { return Re(this, arguments, function (e) { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Le(this, e).appendChild(e) }) }, prepend: function () { return Re(this, arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = Le(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return Re(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return Re(this, arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, empty: function () { for (var e, t = 0; null != (e = this[t]) ; t++) 1 === e.nodeType && (w.cleanData(ye(e, !1)), e.textContent = ""); return this }, clone: function (e, t) { return e = null != e && e, t = null == t ? e : t, this.map(function () { return w.clone(this, e, t) }) }, html: function (e) { return z(this, function (e) { var t = this[0] || {}, n = 0, r = this.length; if (void 0 === e && 1 === t.nodeType) return t.innerHTML; if ("string" == typeof e && !Ae.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) { e = w.htmlPrefilter(e); try { for (; n < r; n++) 1 === (t = this[n] || {}).nodeType && (w.cleanData(ye(t, !1)), t.innerHTML = e); t = 0 } catch (e) { } } t && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var e = []; return Re(this, arguments, function (t) { var n = this.parentNode; w.inArray(this, e) < 0 && (w.cleanData(ye(this)), n && n.replaceChild(t, this)) }, e) } }), w.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, t) { w.fn[e] = function (e) { for (var n, r = [], i = w(e), o = i.length - 1, a = 0; a <= o; a++) n = a === o ? this : this.clone(!0), w(i[a])[t](n), s.apply(r, n.get()); return this.pushStack(r) } }); var We = new RegExp("^(" + re + ")(?!px)[a-z%]+$", "i"), $e = function (t) { var n = t.ownerDocument.defaultView; return n && n.opener || (n = e), n.getComputedStyle(t) }, Be = new RegExp(oe.join("|"), "i"); !function () { function t() { if (c) { l.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", c.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", be.appendChild(l).appendChild(c); var t = e.getComputedStyle(c); i = "1%" !== t.top, u = 12 === n(t.marginLeft), c.style.right = "60%", s = 36 === n(t.right), o = 36 === n(t.width), c.style.position = "absolute", a = 36 === c.offsetWidth || "absolute", be.removeChild(l), c = null } } function n(e) { return Math.round(parseFloat(e)) } var i, o, a, s, u, l = r.createElement("div"), c = r.createElement("div"); c.style && (c.style.backgroundClip = "content-box", c.cloneNode(!0).style.backgroundClip = "", h.clearCloneStyle = "content-box" === c.style.backgroundClip, w.extend(h, { boxSizingReliable: function () { return t(), o }, pixelBoxStyles: function () { return t(), s }, pixelPosition: function () { return t(), i }, reliableMarginLeft: function () { return t(), u }, scrollboxSize: function () { return t(), a } })) }(); function Fe(e, t, n) { var r, i, o, a, s = e.style; return (n = n || $e(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || w.contains(e.ownerDocument, e) || (a = w.style(e, t)), !h.pixelBoxStyles() && We.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a } function _e(e, t) { return { get: function () { if (!e()) return (this.get = t).apply(this, arguments); delete this.get } } } var ze = /^(none|table(?!-c[ea]).+)/, Xe = /^--/, Ue = { position: "absolute", visibility: "hidden", display: "block" }, Ve = { letterSpacing: "0", fontWeight: "400" }, Ge = ["Webkit", "Moz", "ms"], Ye = r.createElement("div").style; function Qe(e) { if (e in Ye) return e; var t = e[0].toUpperCase() + e.slice(1), n = Ge.length; while (n--) if ((e = Ge[n] + t) in Ye) return e } function Je(e) { var t = w.cssProps[e]; return t || (t = w.cssProps[e] = Qe(e) || e), t } function Ke(e, t, n) { var r = ie.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t } function Ze(e, t, n, r, i, o) { var a = "width" === t ? 1 : 0, s = 0, u = 0; if (n === (r ? "border" : "content")) return 0; for (; a < 4; a += 2) "margin" === n && (u += w.css(e, n + oe[a], !0, i)), r ? ("content" === n && (u -= w.css(e, "padding" + oe[a], !0, i)), "margin" !== n && (u -= w.css(e, "border" + oe[a] + "Width", !0, i))) : (u += w.css(e, "padding" + oe[a], !0, i), "padding" !== n ? u += w.css(e, "border" + oe[a] + "Width", !0, i) : s += w.css(e, "border" + oe[a] + "Width", !0, i)); return !r && o >= 0 && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5))), u } function et(e, t, n) { var r = $e(e), i = Fe(e, t, r), o = "border-box" === w.css(e, "boxSizing", !1, r), a = o; if (We.test(i)) { if (!n) return i; i = "auto" } return a = a && (h.boxSizingReliable() || i === e.style[t]), ("auto" === i || !parseFloat(i) && "inline" === w.css(e, "display", !1, r)) && (i = e["offset" + t[0].toUpperCase() + t.slice(1)], a = !0), (i = parseFloat(i) || 0) + Ze(e, t, n || (o ? "border" : "content"), a, r, i) + "px" } w.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = Fe(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: {}, style: function (e, t, n, r) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var i, o, a, s = G(t), u = Xe.test(t), l = e.style; if (u || (t = Je(s)), a = w.cssHooks[t] || w.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t]; "string" == (o = typeof n) && (i = ie.exec(n)) && i[1] && (n = ue(e, t, i), o = "number"), null != n && n === n && ("number" === o && (n += i && i[3] || (w.cssNumber[s] ? "" : "px")), h.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n)) } }, css: function (e, t, n, r) { var i, o, a, s = G(t); return Xe.test(t) || (t = Je(s)), (a = w.cssHooks[t] || w.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = Fe(e, t, r)), "normal" === i && t in Ve && (i = Ve[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i } }), w.each(["height", "width"], function (e, t) { w.cssHooks[t] = { get: function (e, n, r) { if (n) return !ze.test(w.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? et(e, t, r) : se(e, Ue, function () { return et(e, t, r) }) }, set: function (e, n, r) { var i, o = $e(e), a = "border-box" === w.css(e, "boxSizing", !1, o), s = r && Ze(e, t, r, a, o); return a && h.scrollboxSize() === o.position && (s -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(o[t]) - Ze(e, t, "border", !1, o) - .5)), s && (i = ie.exec(n)) && "px" !== (i[3] || "px") && (e.style[t] = n, n = w.css(e, t)), Ke(e, n, s) } } }), w.cssHooks.marginLeft = _e(h.reliableMarginLeft, function (e, t) { if (t) return (parseFloat(Fe(e, "marginLeft")) || e.getBoundingClientRect().left - se(e, { marginLeft: 0 }, function () { return e.getBoundingClientRect().left })) + "px" }), w.each({ margin: "", padding: "", border: "Width" }, function (e, t) { w.cssHooks[e + t] = { expand: function (n) { for (var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; r < 4; r++) i[e + oe[r] + t] = o[r] || o[r - 2] || o[0]; return i } }, "margin" !== e && (w.cssHooks[e + t].set = Ke) }), w.fn.extend({ css: function (e, t) { return z(this, function (e, t, n) { var r, i, o = {}, a = 0; if (Array.isArray(t)) { for (r = $e(e), i = t.length; a < i; a++) o[t[a]] = w.css(e, t[a], !1, r); return o } return void 0 !== n ? w.style(e, t, n) : w.css(e, t) }, e, t, arguments.length > 1) } }); function tt(e, t, n, r, i) { return new tt.prototype.init(e, t, n, r, i) } w.Tween = tt, tt.prototype = { constructor: tt, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || w.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (w.cssNumber[n] ? "" : "px") }, cur: function () { var e = tt.propHooks[this.prop]; return e && e.get ? e.get(this) : tt.propHooks._default.get(this) }, run: function (e) { var t, n = tt.propHooks[this.prop]; return this.options.duration ? this.pos = t = w.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : tt.propHooks._default.set(this), this } }, tt.prototype.init.prototype = tt.prototype, tt.propHooks = { _default: { get: function (e) { var t; return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = w.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0 }, set: function (e) { w.fx.step[e.prop] ? w.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[w.cssProps[e.prop]] && !w.cssHooks[e.prop] ? e.elem[e.prop] = e.now : w.style(e.elem, e.prop, e.now + e.unit) } } }, tt.propHooks.scrollTop = tt.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, w.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 }, _default: "swing" }, w.fx = tt.prototype.init, w.fx.step = {}; var nt, rt, it = /^(?:toggle|show|hide)$/, ot = /queueHooks$/; function at() { rt && (!1 === r.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(at) : e.setTimeout(at, w.fx.interval), w.fx.tick()) } function st() { return e.setTimeout(function () { nt = void 0 }), nt = Date.now() } function ut(e, t) { var n, r = 0, i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t) i["margin" + (n = oe[r])] = i["padding" + n] = e; return t && (i.opacity = i.width = e), i } function lt(e, t, n) { for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners["*"]), o = 0, a = i.length; o < a; o++) if (r = i[o].call(n, t, e)) return r } function ct(e, t, n) { var r, i, o, a, s, u, l, c, f = "width" in t || "height" in t, p = this, d = {}, h = e.style, g = e.nodeType && ae(e), y = J.get(e, "fxshow"); n.queue || (null == (a = w._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () { a.unqueued || s() }), a.unqueued++, p.always(function () { p.always(function () { a.unqueued--, w.queue(e, "fx").length || a.empty.fire() }) })); for (r in t) if (i = t[r], it.test(i)) { if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) { if ("show" !== i || !y || void 0 === y[r]) continue; g = !0 } d[r] = y && y[r] || w.style(e, r) } if ((u = !w.isEmptyObject(t)) || !w.isEmptyObject(d)) { f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = y && y.display) && (l = J.get(e, "display")), "none" === (c = w.css(e, "display")) && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = w.css(e, "display"), fe([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === w.css(e, "float") && (u || (p.done(function () { h.display = l }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), u = !1; for (r in d) u || (y ? "hidden" in y && (g = y.hidden) : y = J.access(e, "fxshow", { display: l }), o && (y.hidden = !g), g && fe([e], !0), p.done(function () { g || fe([e]), J.remove(e, "fxshow"); for (r in d) w.style(e, r, d[r]) })), u = lt(g ? y[r] : 0, r, p), r in y || (y[r] = u.start, g && (u.end = u.start, u.start = 0)) } } function ft(e, t) { var n, r, i, o, a; for (n in e) if (r = G(n), i = t[r], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = w.cssHooks[r]) && "expand" in a) { o = a.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i) } else t[r] = i } function pt(e, t, n) { var r, i, o = 0, a = pt.prefilters.length, s = w.Deferred().always(function () { delete u.elem }), u = function () { if (i) return !1; for (var t = nt || st(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++) l.tweens[o].run(r); return s.notifyWith(e, [l, r, n]), r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l]), !1) }, l = s.promise({ elem: e, props: w.extend({}, t), opts: w.extend(!0, { specialEasing: {}, easing: w.easing._default }, n), originalProperties: t, originalOptions: n, startTime: nt || st(), duration: n.duration, tweens: [], createTween: function (t, n) { var r = w.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r }, stop: function (t) { var n = 0, r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; n < r; n++) l.tweens[n].run(1); return t ? (s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]), this } }), c = l.props; for (ft(c, l.opts.specialEasing) ; o < a; o++) if (r = pt.prefilters[o].call(l, e, c, l.opts)) return g(r.stop) && (w._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)), r; return w.map(c, lt, l), g(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), w.fx.timer(w.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l } w.Animation = w.extend(pt, { tweeners: { "*": [function (e, t) { var n = this.createTween(e, t); return ue(n.elem, e, ie.exec(t), n), n }] }, tweener: function (e, t) { g(e) ? (t = e, e = ["*"]) : e = e.match(M); for (var n, r = 0, i = e.length; r < i; r++) n = e[r], pt.tweeners[n] = pt.tweeners[n] || [], pt.tweeners[n].unshift(t) }, prefilters: [ct], prefilter: function (e, t) { t ? pt.prefilters.unshift(e) : pt.prefilters.push(e) } }), w.speed = function (e, t, n) { var r = e && "object" == typeof e ? w.extend({}, e) : { complete: n || !n && t || g(e) && e, duration: e, easing: n && t || t && !g(t) && t }; return w.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in w.fx.speeds ? r.duration = w.fx.speeds[r.duration] : r.duration = w.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () { g(r.old) && r.old.call(this), r.queue && w.dequeue(this, r.queue) }, r }, w.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(ae).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (e, t, n, r) { var i = w.isEmptyObject(e), o = w.speed(t, n, r), a = function () { var t = pt(this, w.extend({}, e), o); (i || J.get(this, "finish")) && t.stop(!0) }; return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a) }, stop: function (e, t, n) { var r = function (e) { var t = e.stop; delete e.stop, t(n) }; return "string" != typeof e && (n = t, t = e, e = void 0), t && !1 !== e && this.queue(e || "fx", []), this.each(function () { var t = !0, i = null != e && e + "queueHooks", o = w.timers, a = J.get(this); if (i) a[i] && a[i].stop && r(a[i]); else for (i in a) a[i] && a[i].stop && ot.test(i) && r(a[i]); for (i = o.length; i--;) o[i].elem !== this || null != e && o[i].queue !== e || (o[i].anim.stop(n), t = !1, o.splice(i, 1)); !t && n || w.dequeue(this, e) }) }, finish: function (e) { return !1 !== e && (e = e || "fx"), this.each(function () { var t, n = J.get(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = w.timers, a = r ? r.length : 0; for (n.finish = !0, w.queue(this, e, []), i && i.stop && i.stop.call(this, !0), t = o.length; t--;) o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1)); for (t = 0; t < a; t++) r[t] && r[t].finish && r[t].finish.call(this); delete n.finish }) } }), w.each(["toggle", "show", "hide"], function (e, t) { var n = w.fn[t]; w.fn[t] = function (e, r, i) { return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(ut(t, !0), e, r, i) } }), w.each({ slideDown: ut("show"), slideUp: ut("hide"), slideToggle: ut("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, t) { w.fn[e] = function (e, n, r) { return this.animate(t, e, n, r) } }), w.timers = [], w.fx.tick = function () { var e, t = 0, n = w.timers; for (nt = Date.now() ; t < n.length; t++) (e = n[t])() || n[t] !== e || n.splice(t--, 1); n.length || w.fx.stop(), nt = void 0 }, w.fx.timer = function (e) { w.timers.push(e), w.fx.start() }, w.fx.interval = 13, w.fx.start = function () { rt || (rt = !0, at()) }, w.fx.stop = function () { rt = null }, w.fx.speeds = { slow: 600, fast: 200, _default: 400 }, w.fn.delay = function (t, n) { return t = w.fx ? w.fx.speeds[t] || t : t, n = n || "fx", this.queue(n, function (n, r) { var i = e.setTimeout(n, t); r.stop = function () { e.clearTimeout(i) } }) }, function () { var e = r.createElement("input"), t = r.createElement("select").appendChild(r.createElement("option")); e.type = "checkbox", h.checkOn = "" !== e.value, h.optSelected = t.selected, (e = r.createElement("input")).value = "t", e.type = "radio", h.radioValue = "t" === e.value }(); var dt, ht = w.expr.attrHandle; w.fn.extend({ attr: function (e, t) { return z(this, w.attr, e, t, arguments.length > 1) }, removeAttr: function (e) { return this.each(function () { w.removeAttr(this, e) }) } }), w.extend({ attr: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? w.prop(e, t, n) : (1 === o && w.isXMLDoc(e) || (i = w.attrHooks[t.toLowerCase()] || (w.expr.match.bool.test(t) ? dt : void 0)), void 0 !== n ? null === n ? void w.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = w.find.attr(e, t)) ? void 0 : r) }, attrHooks: { type: { set: function (e, t) { if (!h.radioValue && "radio" === t && N(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, removeAttr: function (e, t) { var n, r = 0, i = t && t.match(M); if (i && 1 === e.nodeType) while (n = i[r++]) e.removeAttribute(n) } }), dt = { set: function (e, t, n) { return !1 === t ? w.removeAttr(e, n) : e.setAttribute(n, n), n } }, w.each(w.expr.match.bool.source.match(/\w+/g), function (e, t) { var n = ht[t] || w.find.attr; ht[t] = function (e, t, r) { var i, o, a = t.toLowerCase(); return r || (o = ht[a], ht[a] = i, i = null != n(e, t, r) ? a : null, ht[a] = o), i } }); var gt = /^(?:input|select|textarea|button)$/i, yt = /^(?:a|area)$/i; w.fn.extend({ prop: function (e, t) { return z(this, w.prop, e, t, arguments.length > 1) }, removeProp: function (e) { return this.each(function () { delete this[w.propFix[e] || e] }) } }), w.extend({ prop: function (e, t, n) { var r, i, o = e.nodeType; if (3 !== o && 8 !== o && 2 !== o) return 1 === o && w.isXMLDoc(e) || (t = w.propFix[t] || t, i = w.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t] }, propHooks: { tabIndex: { get: function (e) { var t = w.find.attr(e, "tabindex"); return t ? parseInt(t, 10) : gt.test(e.nodeName) || yt.test(e.nodeName) && e.href ? 0 : -1 } } }, propFix: { "for": "htmlFor", "class": "className" } }), h.optSelected || (w.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && t.parentNode && t.parentNode.selectedIndex, null }, set: function (e) { var t = e.parentNode; t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex) } }), w.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { w.propFix[this.toLowerCase()] = this }); function vt(e) { return (e.match(M) || []).join(" ") } function mt(e) { return e.getAttribute && e.getAttribute("class") || "" } function xt(e) { return Array.isArray(e) ? e : "string" == typeof e ? e.match(M) || [] : [] } w.fn.extend({ addClass: function (e) { var t, n, r, i, o, a, s, u = 0; if (g(e)) return this.each(function (t) { w(this).addClass(e.call(this, t, mt(this))) }); if ((t = xt(e)).length) while (n = this[u++]) if (i = mt(n), r = 1 === n.nodeType && " " + vt(i) + " ") { a = 0; while (o = t[a++]) r.indexOf(" " + o + " ") < 0 && (r += o + " "); i !== (s = vt(r)) && n.setAttribute("class", s) } return this }, removeClass: function (e) { var t, n, r, i, o, a, s, u = 0; if (g(e)) return this.each(function (t) { w(this).removeClass(e.call(this, t, mt(this))) }); if (!arguments.length) return this.attr("class", ""); if ((t = xt(e)).length) while (n = this[u++]) if (i = mt(n), r = 1 === n.nodeType && " " + vt(i) + " ") { a = 0; while (o = t[a++]) while (r.indexOf(" " + o + " ") > -1) r = r.replace(" " + o + " ", " "); i !== (s = vt(r)) && n.setAttribute("class", s) } return this }, toggleClass: function (e, t) { var n = typeof e, r = "string" === n || Array.isArray(e); return "boolean" == typeof t && r ? t ? this.addClass(e) : this.removeClass(e) : g(e) ? this.each(function (n) { w(this).toggleClass(e.call(this, n, mt(this), t), t) }) : this.each(function () { var t, i, o, a; if (r) { i = 0, o = w(this), a = xt(e); while (t = a[i++]) o.hasClass(t) ? o.removeClass(t) : o.addClass(t) } else void 0 !== e && "boolean" !== n || ((t = mt(this)) && J.set(this, "__className__", t), this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : J.get(this, "__className__") || "")) }) }, hasClass: function (e) { var t, n, r = 0; t = " " + e + " "; while (n = this[r++]) if (1 === n.nodeType && (" " + vt(mt(n)) + " ").indexOf(t) > -1) return !0; return !1 } }); var bt = /\r/g; w.fn.extend({ val: function (e) { var t, n, r, i = this[0]; { if (arguments.length) return r = g(e), this.each(function (n) { var i; 1 === this.nodeType && (null == (i = r ? e.call(this, n, w(this).val()) : e) ? i = "" : "number" == typeof i ? i += "" : Array.isArray(i) && (i = w.map(i, function (e) { return null == e ? "" : e + "" })), (t = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()]) && "set" in t && void 0 !== t.set(this, i, "value") || (this.value = i)) }); if (i) return (t = w.valHooks[i.type] || w.valHooks[i.nodeName.toLowerCase()]) && "get" in t && void 0 !== (n = t.get(i, "value")) ? n : "string" == typeof (n = i.value) ? n.replace(bt, "") : null == n ? "" : n } } }), w.extend({ valHooks: { option: { get: function (e) { var t = w.find.attr(e, "value"); return null != t ? t : vt(w.text(e)) } }, select: { get: function (e) { var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length; for (r = o < 0 ? u : a ? o : 0; r < u; r++) if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !N(n.parentNode, "optgroup"))) { if (t = w(n).val(), a) return t; s.push(t) } return s }, set: function (e, t) { var n, r, i = e.options, o = w.makeArray(t), a = i.length; while (a--) ((r = i[a]).selected = w.inArray(w.valHooks.option.get(r), o) > -1) && (n = !0); return n || (e.selectedIndex = -1), o } } } }), w.each(["radio", "checkbox"], function () { w.valHooks[this] = { set: function (e, t) { if (Array.isArray(t)) return e.checked = w.inArray(w(e).val(), t) > -1 } }, h.checkOn || (w.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }), h.focusin = "onfocusin" in e; var wt = /^(?:focusinfocus|focusoutblur)$/, Tt = function (e) { e.stopPropagation() }; w.extend(w.event, { trigger: function (t, n, i, o) { var a, s, u, l, c, p, d, h, v = [i || r], m = f.call(t, "type") ? t.type : t, x = f.call(t, "namespace") ? t.namespace.split(".") : []; if (s = h = u = i = i || r, 3 !== i.nodeType && 8 !== i.nodeType && !wt.test(m + w.event.triggered) && (m.indexOf(".") > -1 && (m = (x = m.split(".")).shift(), x.sort()), c = m.indexOf(":") < 0 && "on" + m, t = t[w.expando] ? t : new w.Event(m, "object" == typeof t && t), t.isTrigger = o ? 2 : 3, t.namespace = x.join("."), t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + x.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = void 0, t.target || (t.target = i), n = null == n ? [t] : w.makeArray(n, [t]), d = w.event.special[m] || {}, o || !d.trigger || !1 !== d.trigger.apply(i, n))) { if (!o && !d.noBubble && !y(i)) { for (l = d.delegateType || m, wt.test(l + m) || (s = s.parentNode) ; s; s = s.parentNode) v.push(s), u = s; u === (i.ownerDocument || r) && v.push(u.defaultView || u.parentWindow || e) } a = 0; while ((s = v[a++]) && !t.isPropagationStopped()) h = s, t.type = a > 1 ? l : d.bindType || m, (p = (J.get(s, "events") || {})[t.type] && J.get(s, "handle")) && p.apply(s, n), (p = c && s[c]) && p.apply && Y(s) && (t.result = p.apply(s, n), !1 === t.result && t.preventDefault()); return t.type = m, o || t.isDefaultPrevented() || d._default && !1 !== d._default.apply(v.pop(), n) || !Y(i) || c && g(i[m]) && !y(i) && ((u = i[c]) && (i[c] = null), w.event.triggered = m, t.isPropagationStopped() && h.addEventListener(m, Tt), i[m](), t.isPropagationStopped() && h.removeEventListener(m, Tt), w.event.triggered = void 0, u && (i[c] = u)), t.result } }, simulate: function (e, t, n) { var r = w.extend(new w.Event, n, { type: e, isSimulated: !0 }); w.event.trigger(r, null, t) } }), w.fn.extend({ trigger: function (e, t) { return this.each(function () { w.event.trigger(e, t, this) }) }, triggerHandler: function (e, t) { var n = this[0]; if (n) return w.event.trigger(e, t, n, !0) } }), h.focusin || w.each({ focus: "focusin", blur: "focusout" }, function (e, t) { var n = function (e) { w.event.simulate(t, e.target, w.event.fix(e)) }; w.event.special[t] = { setup: function () { var r = this.ownerDocument || this, i = J.access(r, t); i || r.addEventListener(e, n, !0), J.access(r, t, (i || 0) + 1) }, teardown: function () { var r = this.ownerDocument || this, i = J.access(r, t) - 1; i ? J.access(r, t, i) : (r.removeEventListener(e, n, !0), J.remove(r, t)) } } }); var Ct = e.location, Et = Date.now(), kt = /\?/; w.parseXML = function (t) { var n; if (!t || "string" != typeof t) return null; try { n = (new e.DOMParser).parseFromString(t, "text/xml") } catch (e) { n = void 0 } return n && !n.getElementsByTagName("parsererror").length || w.error("Invalid XML: " + t), n }; var St = /\[\]$/, Dt = /\r?\n/g, Nt = /^(?:submit|button|image|reset|file)$/i, At = /^(?:input|select|textarea|keygen)/i; function jt(e, t, n, r) { var i; if (Array.isArray(t)) w.each(t, function (t, i) { n || St.test(e) ? r(e, i) : jt(e + "[" + ("object" == typeof i && null != i ? t : "") + "]", i, n, r) }); else if (n || "object" !== x(t)) r(e, t); else for (i in t) jt(e + "[" + i + "]", t[i], n, r) } w.param = function (e, t) { var n, r = [], i = function (e, t) { var n = g(t) ? t() : t; r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n) }; if (Array.isArray(e) || e.jquery && !w.isPlainObject(e)) w.each(e, function () { i(this.name, this.value) }); else for (n in e) jt(n, e[n], t, i); return r.join("&") }, w.fn.extend({ serialize: function () { return w.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = w.prop(this, "elements"); return e ? w.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !w(this).is(":disabled") && At.test(this.nodeName) && !Nt.test(e) && (this.checked || !pe.test(e)) }).map(function (e, t) { var n = w(this).val(); return null == n ? null : Array.isArray(n) ? w.map(n, function (e) { return { name: t.name, value: e.replace(Dt, "\r\n") } }) : { name: t.name, value: n.replace(Dt, "\r\n") } }).get() } }); var qt = /%20/g, Lt = /#.*$/, Ht = /([?&])_=[^&]*/, Ot = /^(.*?):[ \t]*([^\r\n]*)$/gm, Pt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Mt = /^(?:GET|HEAD)$/, Rt = /^\/\//, It = {}, Wt = {}, $t = "*/".concat("*"), Bt = r.createElement("a"); Bt.href = Ct.href; function Ft(e) { return function (t, n) { "string" != typeof t && (n = t, t = "*"); var r, i = 0, o = t.toLowerCase().match(M) || []; if (g(n)) while (r = o[i++]) "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n) } } function _t(e, t, n, r) { var i = {}, o = e === Wt; function a(s) { var u; return i[s] = !0, w.each(e[s] || [], function (e, s) { var l = s(t, n, r); return "string" != typeof l || o || i[l] ? o ? !(u = l) : void 0 : (t.dataTypes.unshift(l), a(l), !1) }), u } return a(t.dataTypes[0]) || !i["*"] && a("*") } function zt(e, t) { var n, r, i = w.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && w.extend(!0, e, r), e } function Xt(e, t, n) { var r, i, o, a, s = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type")); if (r) for (i in s) if (s[i] && s[i].test(r)) { u.unshift(i); break } if (u[0] in n) o = u[0]; else { for (i in n) { if (!u[0] || e.converters[i + " " + u[0]]) { o = i; break } a || (a = i) } o = o || a } if (o) return o !== u[0] && u.unshift(o), n[o] } function Ut(e, t, n, r) { var i, o, a, s, u, l = {}, c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) { if (!(a = l[u + " " + o] || l["* " + o])) for (i in l) if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) { !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break } if (!0 !== a) if (a && e["throws"]) t = a(t); else try { t = a(t) } catch (e) { return { state: "parsererror", error: a ? e : "No conversion from " + u + " to " + o } } } return { state: "success", data: t } } w.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Ct.href, type: "GET", isLocal: Pt.test(Ct.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": $t, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": w.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? zt(zt(e, w.ajaxSettings), t) : zt(w.ajaxSettings, e) }, ajaxPrefilter: Ft(It), ajaxTransport: Ft(Wt), ajax: function (t, n) { "object" == typeof t && (n = t, t = void 0), n = n || {}; var i, o, a, s, u, l, c, f, p, d, h = w.ajaxSetup({}, n), g = h.context || h, y = h.context && (g.nodeType || g.jquery) ? w(g) : w.event, v = w.Deferred(), m = w.Callbacks("once memory"), x = h.statusCode || {}, b = {}, T = {}, C = "canceled", E = { readyState: 0, getResponseHeader: function (e) { var t; if (c) { if (!s) { s = {}; while (t = Ot.exec(a)) s[t[1].toLowerCase()] = t[2] } t = s[e.toLowerCase()] } return null == t ? null : t }, getAllResponseHeaders: function () { return c ? a : null }, setRequestHeader: function (e, t) { return null == c && (e = T[e.toLowerCase()] = T[e.toLowerCase()] || e, b[e] = t), this }, overrideMimeType: function (e) { return null == c && (h.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (c) E.always(e[E.status]); else for (t in e) x[t] = [x[t], e[t]]; return this }, abort: function (e) { var t = e || C; return i && i.abort(t), k(0, t), this } }; if (v.promise(E), h.url = ((t || h.url || Ct.href) + "").replace(Rt, Ct.protocol + "//"), h.type = n.method || n.type || h.method || h.type, h.dataTypes = (h.dataType || "*").toLowerCase().match(M) || [""], null == h.crossDomain) { l = r.createElement("a"); try { l.href = h.url, l.href = l.href, h.crossDomain = Bt.protocol + "//" + Bt.host != l.protocol + "//" + l.host } catch (e) { h.crossDomain = !0 } } if (h.data && h.processData && "string" != typeof h.data && (h.data = w.param(h.data, h.traditional)), _t(It, h, n, E), c) return E; (f = w.event && h.global) && 0 == w.active++ && w.event.trigger("ajaxStart"), h.type = h.type.toUpperCase(), h.hasContent = !Mt.test(h.type), o = h.url.replace(Lt, ""), h.hasContent ? h.data && h.processData && 0 === (h.contentType || "").indexOf("application/x-www-form-urlencoded") && (h.data = h.data.replace(qt, "+")) : (d = h.url.slice(o.length), h.data && (h.processData || "string" == typeof h.data) && (o += (kt.test(o) ? "&" : "?") + h.data, delete h.data), !1 === h.cache && (o = o.replace(Ht, "$1"), d = (kt.test(o) ? "&" : "?") + "_=" + Et++ + d), h.url = o + d), h.ifModified && (w.lastModified[o] && E.setRequestHeader("If-Modified-Since", w.lastModified[o]), w.etag[o] && E.setRequestHeader("If-None-Match", w.etag[o])), (h.data && h.hasContent && !1 !== h.contentType || n.contentType) && E.setRequestHeader("Content-Type", h.contentType), E.setRequestHeader("Accept", h.dataTypes[0] && h.accepts[h.dataTypes[0]] ? h.accepts[h.dataTypes[0]] + ("*" !== h.dataTypes[0] ? ", " + $t + "; q=0.01" : "") : h.accepts["*"]); for (p in h.headers) E.setRequestHeader(p, h.headers[p]); if (h.beforeSend && (!1 === h.beforeSend.call(g, E, h) || c)) return E.abort(); if (C = "abort", m.add(h.complete), E.done(h.success), E.fail(h.error), i = _t(Wt, h, n, E)) { if (E.readyState = 1, f && y.trigger("ajaxSend", [E, h]), c) return E; h.async && h.timeout > 0 && (u = e.setTimeout(function () { E.abort("timeout") }, h.timeout)); try { c = !1, i.send(b, k) } catch (e) { if (c) throw e; k(-1, e) } } else k(-1, "No Transport"); function k(t, n, r, s) { var l, p, d, b, T, C = n; c || (c = !0, u && e.clearTimeout(u), i = void 0, a = s || "", E.readyState = t > 0 ? 4 : 0, l = t >= 200 && t < 300 || 304 === t, r && (b = Xt(h, E, r)), b = Ut(h, b, E, l), l ? (h.ifModified && ((T = E.getResponseHeader("Last-Modified")) && (w.lastModified[o] = T), (T = E.getResponseHeader("etag")) && (w.etag[o] = T)), 204 === t || "HEAD" === h.type ? C = "nocontent" : 304 === t ? C = "notmodified" : (C = b.state, p = b.data, l = !(d = b.error))) : (d = C, !t && C || (C = "error", t < 0 && (t = 0))), E.status = t, E.statusText = (n || C) + "", l ? v.resolveWith(g, [p, C, E]) : v.rejectWith(g, [E, C, d]), E.statusCode(x), x = void 0, f && y.trigger(l ? "ajaxSuccess" : "ajaxError", [E, h, l ? p : d]), m.fireWith(g, [E, C]), f && (y.trigger("ajaxComplete", [E, h]), --w.active || w.event.trigger("ajaxStop"))) } return E }, getJSON: function (e, t, n) { return w.get(e, t, n, "json") }, getScript: function (e, t) { return w.get(e, void 0, t, "script") } }), w.each(["get", "post"], function (e, t) { w[t] = function (e, n, r, i) { return g(n) && (i = i || r, r = n, n = void 0), w.ajax(w.extend({ url: e, type: t, dataType: i, data: n, success: r }, w.isPlainObject(e) && e)) } }), w._evalUrl = function (e) { return w.ajax({ url: e, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, "throws": !0 }) }, w.fn.extend({ wrapAll: function (e) { var t; return this[0] && (g(e) && (e = e.call(this[0])), t = w(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstElementChild) e = e.firstElementChild; return e }).append(this)), this }, wrapInner: function (e) { return g(e) ? this.each(function (t) { w(this).wrapInner(e.call(this, t)) }) : this.each(function () { var t = w(this), n = t.contents(); n.length ? n.wrapAll(e) : t.append(e) }) }, wrap: function (e) { var t = g(e); return this.each(function (n) { w(this).wrapAll(t ? e.call(this, n) : e) }) }, unwrap: function (e) { return this.parent(e).not("body").each(function () { w(this).replaceWith(this.childNodes) }), this } }), w.expr.pseudos.hidden = function (e) { return !w.expr.pseudos.visible(e) }, w.expr.pseudos.visible = function (e) { return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length) }, w.ajaxSettings.xhr = function () { try { return new e.XMLHttpRequest } catch (e) { } }; var Vt = { 0: 200, 1223: 204 }, Gt = w.ajaxSettings.xhr(); h.cors = !!Gt && "withCredentials" in Gt, h.ajax = Gt = !!Gt, w.ajaxTransport(function (t) { var n, r; if (h.cors || Gt && !t.crossDomain) return { send: function (i, o) { var a, s = t.xhr(); if (s.open(t.type, t.url, t.async, t.username, t.password), t.xhrFields) for (a in t.xhrFields) s[a] = t.xhrFields[a]; t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType), t.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"); for (a in i) s.setRequestHeader(a, i[a]); n = function (e) { return function () { n && (n = r = s.onload = s.onerror = s.onabort = s.ontimeout = s.onreadystatechange = null, "abort" === e ? s.abort() : "error" === e ? "number" != typeof s.status ? o(0, "error") : o(s.status, s.statusText) : o(Vt[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? { binary: s.response } : { text: s.responseText }, s.getAllResponseHeaders())) } }, s.onload = n(), r = s.onerror = s.ontimeout = n("error"), void 0 !== s.onabort ? s.onabort = r : s.onreadystatechange = function () { 4 === s.readyState && e.setTimeout(function () { n && r() }) }, n = n("abort"); try { s.send(t.hasContent && t.data || null) } catch (e) { if (n) throw e } }, abort: function () { n && n() } } }), w.ajaxPrefilter(function (e) { e.crossDomain && (e.contents.script = !1) }), w.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function (e) { return w.globalEval(e), e } } }), w.ajaxPrefilter("script", function (e) { void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET") }), w.ajaxTransport("script", function (e) { if (e.crossDomain) { var t, n; return { send: function (i, o) { t = w("<script>").prop({ charset: e.scriptCharset, src: e.url }).on("load error", n = function (e) { t.remove(), n = null, e && o("error" === e.type ? 404 : 200, e.type) }), r.head.appendChild(t[0]) }, abort: function () { n && n() } } } }); var Yt = [], Qt = /(=)\?(?=&|$)|\?\?/; w.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = Yt.pop() || w.expando + "_" + Et++; return this[e] = !0, e } }), w.ajaxPrefilter("json jsonp", function (t, n, r) { var i, o, a, s = !1 !== t.jsonp && (Qt.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Qt.test(t.data) && "data"); if (s || "jsonp" === t.dataTypes[0]) return i = t.jsonpCallback = g(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, s ? t[s] = t[s].replace(Qt, "$1" + i) : !1 !== t.jsonp && (t.url += (kt.test(t.url) ? "&" : "?") + t.jsonp + "=" + i), t.converters["script json"] = function () { return a || w.error(i + " was not called"), a[0] }, t.dataTypes[0] = "json", o = e[i], e[i] = function () { a = arguments }, r.always(function () { void 0 === o ? w(e).removeProp(i) : e[i] = o, t[i] && (t.jsonpCallback = n.jsonpCallback, Yt.push(i)), a && g(o) && o(a[0]), a = o = void 0 }), "script" }), h.createHTMLDocument = function () { var e = r.implementation.createHTMLDocument("").body; return e.innerHTML = "<form></form><form></form>", 2 === e.childNodes.length }(), w.parseHTML = function (e, t, n) { if ("string" != typeof e) return []; "boolean" == typeof t && (n = t, t = !1); var i, o, a; return t || (h.createHTMLDocument ? ((i = (t = r.implementation.createHTMLDocument("")).createElement("base")).href = r.location.href, t.head.appendChild(i)) : t = r), o = A.exec(e), a = !n && [], o ? [t.createElement(o[1])] : (o = xe([e], t, a), a && a.length && w(a).remove(), w.merge([], o.childNodes)) }, w.fn.load = function (e, t, n) { var r, i, o, a = this, s = e.indexOf(" "); return s > -1 && (r = vt(e.slice(s)), e = e.slice(0, s)), g(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), a.length > 0 && w.ajax({ url: e, type: i || "GET", dataType: "html", data: t }).done(function (e) { o = arguments, a.html(r ? w("<div>").append(w.parseHTML(e)).find(r) : e) }).always(n && function (e, t) { a.each(function () { n.apply(this, o || [e.responseText, t, e]) }) }), this }, w.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { w.fn[t] = function (e) { return this.on(t, e) } }), w.expr.pseudos.animated = function (e) { return w.grep(w.timers, function (t) { return e === t.elem }).length }, w.offset = { setOffset: function (e, t, n) { var r, i, o, a, s, u, l, c = w.css(e, "position"), f = w(e), p = {}; "static" === c && (e.style.position = "relative"), s = f.offset(), o = w.css(e, "top"), u = w.css(e, "left"), (l = ("absolute" === c || "fixed" === c) && (o + u).indexOf("auto") > -1) ? (a = (r = f.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), g(t) && (t = t.call(e, n, w.extend({}, s))), null != t.top && (p.top = t.top - s.top + a), null != t.left && (p.left = t.left - s.left + i), "using" in t ? t.using.call(e, p) : f.css(p) } }, w.fn.extend({ offset: function (e) { if (arguments.length) return void 0 === e ? this : this.each(function (t) { w.offset.setOffset(this, e, t) }); var t, n, r = this[0]; if (r) return r.getClientRects().length ? (t = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, { top: t.top + n.pageYOffset, left: t.left + n.pageXOffset }) : { top: 0, left: 0 } }, position: function () { if (this[0]) { var e, t, n, r = this[0], i = { top: 0, left: 0 }; if ("fixed" === w.css(r, "position")) t = r.getBoundingClientRect(); else { t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement; while (e && (e === n.body || e === n.documentElement) && "static" === w.css(e, "position")) e = e.parentNode; e && e !== r && 1 === e.nodeType && ((i = w(e).offset()).top += w.css(e, "borderTopWidth", !0), i.left += w.css(e, "borderLeftWidth", !0)) } return { top: t.top - i.top - w.css(r, "marginTop", !0), left: t.left - i.left - w.css(r, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent; while (e && "static" === w.css(e, "position")) e = e.offsetParent; return e || be }) } }), w.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (e, t) { var n = "pageYOffset" === t; w.fn[e] = function (r) { return z(this, function (e, r, i) { var o; if (y(e) ? o = e : 9 === e.nodeType && (o = e.defaultView), void 0 === i) return o ? o[t] : e[r]; o ? o.scrollTo(n ? o.pageXOffset : i, n ? i : o.pageYOffset) : e[r] = i }, e, r, arguments.length) } }), w.each(["top", "left"], function (e, t) { w.cssHooks[t] = _e(h.pixelPosition, function (e, n) { if (n) return n = Fe(e, t), We.test(n) ? w(e).position()[t] + "px" : n }) }), w.each({ Height: "height", Width: "width" }, function (e, t) { w.each({ padding: "inner" + e, content: t, "": "outer" + e }, function (n, r) { w.fn[r] = function (i, o) { var a = arguments.length && (n || "boolean" != typeof i), s = n || (!0 === i || !0 === o ? "margin" : "border"); return z(this, function (t, n, i) { var o; return y(t) ? 0 === r.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (o = t.documentElement, Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e])) : void 0 === i ? w.css(t, n, s) : w.style(t, n, i, s) }, t, a ? i : void 0, a) } }) }), w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, t) { w.fn[t] = function (e, n) { return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t) } }), w.fn.extend({ hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) } }), w.fn.extend({ bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) } }), w.proxy = function (e, t) { var n, r, i; if ("string" == typeof t && (n = e[t], t = e, e = n), g(e)) return r = o.call(arguments, 2), i = function () { return e.apply(t || this, r.concat(o.call(arguments))) }, i.guid = e.guid = e.guid || w.guid++, i }, w.holdReady = function (e) { e ? w.readyWait++ : w.ready(!0) }, w.isArray = Array.isArray, w.parseJSON = JSON.parse, w.nodeName = N, w.isFunction = g, w.isWindow = y, w.camelCase = G, w.type = x, w.now = Date.now, w.isNumeric = function (e) { var t = w.type(e); return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e)) }, "function" == typeof define && define.amd && define("jquery", [], function () { return w }); var Jt = e.jQuery, Kt = e.$; return w.noConflict = function (t) { return e.$ === w && (e.$ = Kt), t && e.jQuery === w && (e.jQuery = Jt), w }, t || (e.jQuery = e.$ = w), w });
    }

    var jQuery;

    //************ End of private methods and variables ********** //




    //************ Public methods and variables ********** //
    return {
        consts: {
            originUrl: "originurl"
        },

        /* public */
        brand: undefined,
        user: null,
        streamProviderType: {
            None: -1,
            General: 0,
            Facebook: 1
        },
        streamId: "",
        forceSilenceLogin: false,
        forceLoginWithCaptcha: false,
        isBusy: false,
        isOpen: false,
        launcher: "",
        options: "",
        /* privates */
        _baseDomain: '//apps.commbox.io/',
        _appsSubDomain: 'apps',
        _supportedProviders: ["google", "twitter", "facebook", "bumpyard"],
        /* sorted by login priority */
        _counterProviders: 0,
        _loginCallback: null,
        _facebook: null,
        _initializedProvidersBooleanArray: [], //hash array that hold providers initialized, when all providers initialized we callback to init app function
        _triggers: [],
        _urlTypesEnum: Object.freeze({
            "matches": 1,
            "contains": 2,
            "regex": 3
        }),
        _streamState: "",
        _intervalHandler: null,
        _instanceId: null,
        _appLoadTime: new Date(),
        //the cookie name of the host-cookie
        hostCookieName: null,

        _loadScript: function (url, method, callback) {
            var xhr = new XMLHttpRequest();
            xhr.onload = callback;
            if ("withCredentials" in xhr) {
                // Check if the XMLHttpRequest object has a "withCredentials" property.
                // "withCredentials" only exists on XMLHTTPRequest2 objects.
                xhr.open(method, url, true);

            } else if (typeof XDomainRequest != "undefined") {

                // Otherwise, check if XDomainRequest.
                // XDomainRequest only exists in IE, and is IE's way of making CORS requests.
                xhr = new XDomainRequest();
                xhr.open(method, url);

            } else {
                // Otherwise, CORS is not supported by the browser.
                xhr = null;
                throw new Error('CORS not supported');
            }
            xhr.send();
        },
        initByJqueryFromApps: function() {
            if (typeof window.jQuery !== 'undefined') {
                jQuery = window.jQuery; //update BY priveate jquery
            }
        },
        initJquery: function (options, callback) {
            if (typeof window.jQuery !== 'undefined') {
                jQuery = window.jQuery; //update BY priveate jquery
                callback();
            }
            else if (typeof jQuery !== 'undefined') {
                //jquery already init
                callback();
            }
            else {
                var windowWasContainJquery = window.jQuery ? true : false;
                var tempDollarSign = null;

                function _backupDollarSign() {
                    tempDollarSign = window.$; // save dolar variable/function in temp 
                }
                function _afterJqueryScript() {

                    window.$ = tempDollarSign;
                    var temp = window.jQuery;
                    if (!windowWasContainJquery) {
                        delete window.jQuery;
                    }
                    //update private jQuery
                    jQuery = temp;

                    callback();
                }


                var jqueryLink = null;
                if (options && !BY_isNullOrEmpty(options.jqueryLink)) {
                    jqueryLink = options.jqueryLink;
                }

                if (!jqueryLink) {
                    //load jquery private from siste
                    //run jquery from connect.js");
                    _backupDollarSign();
                    execJqueryCode(); // run jquery code 3.3.1
                    //jQuery = null;
                    _afterJqueryScript();
                }
                else {
                    //byJqueryVersion parameter can be like "3.3.1"
                    BY._loadScript(jqueryLink, "GET", function (e) {
                        //load from link
                        //encapsulate jquery dollar sign
                        if (e && e.srcElement && e.srcElement.responseText) {
                            _backupDollarSign();
                            eval(e.srcElement.responseText);
                            _afterJqueryScript();
                        }
                        else {
                            console.log("failed to load jquery", e);
                        }
                    });
                }
            }
        },

        //the method which handles error messages
        handleErrorMessage: function (errorMessage, errorType) {
            console.error("[error " + errorType + "]:  " + errorMessage);
        },

        /* constructor */
        init: function (options, callback) {
            var that = this;

            BY.initJquery(options, function () {

                if (options.supportRealtime) {
                    BY.Now.init(callback);
                }

                if (options.forceLoginWithCaptcha && options.forceLoginWithCaptcha == "1") {
                    BY.forceLoginWithCaptcha = true;
                }

                if (options.streamId) {
                    that.streamId = options.streamId;
                } else {
                    throw {
                        type: "error",
                        message: "missing stream id"
                    };
                }

                if (options.supportedProviders) {
                    that._supportedProviders = options.supportedProviders;
                }
                if (options.forceSilenceLogin && options.forceSilenceLogin == "1") {
                    that.forceSilenceLogin = true;
                }

                for (var i = 0; i < that._supportedProviders.length; i++) {
                    BY._initializedProvidersBooleanArray[that._supportedProviders[i]] = false;
                }

                that._getBaseDomain(options);

                if (options.facebook && options.facebook.appId && options.facebook.appId.length > 0) {
                    //parametrs to init facebook
                    that._facebook = options.facebook;
                }

                that._counterProviders = that._supportedProviders.length;

                // call _getLoginStatus to know if the user is already logged-in on start-up and init BY.user
                function callbackProxy(res) {
                    //if isLoginPage == true. we don't call again BY._getLoginStatus because we know the user is already disconnected.
                    if (options.isLoginPage != true) {
                        BY._getLoginStatus(function (response) {
                            callback(res);
                        }, 0, { hostCookie: BY.cookieManager.getHostCookie() });
                    }
                }

                for (i = 0; i < that._supportedProviders.length; i++) {
                    switch (that._supportedProviders[i]) {
                        case "facebook":
                            {
                                BY_FacebookConnect.init(callbackProxy);
                                break;
                            }
                        case "bumpyard":
                            {
                                BY_BumpyardConnect.init(callbackProxy);
                                break;
                            }
                        case "twitter":
                            {
                                BY_TwitterConnect.init(callbackProxy);
                                break;
                            }
                        case "google":
                            {
                                BY_GoogleConnect.init(callbackProxy);
                                break;
                            }
                    }
                }

                jQuery(document).ready(function () {
                    BY.detectAppAccessibility();
                });
            });
        },


        //the method which executes the ajax calls (this method should be) for all the ajax calls in the application
        basic_ajax: function (settings) {
            if (!settings.success) {
                return;
            }

            if (settings.async == null || settings.async == undefined) {
                settings.async = true;
            }

            if (!settings.type) {
                settings.type = 'GET';
            }

            if (!settings.cache) {
                settings.cache = false;
            }

            var onSuccess = settings.success;
            settings.success = function (jsonResponseData, textStatus, ajaxResponseObject) {
                if (!BY_isNullOrEmpty(jsonResponseData) && typeof jsonResponseData === 'object' && jsonResponseData.backOffSeconds && jsonResponseData.backOffSeconds > 0) {
                    setTimeout(function () {
                        BY.basic_ajax(settings);
                    }, jsonResponseData.backOffSeconds * 1000);
                } else {
                    onSuccess(jsonResponseData);
                }
            };

            var onError = null;
            if (settings.error) {
                onError = settings.error; // saving error function
            }
            settings.error = function (responseObject) {
                if (onError) {
                    onError(responseObject);
                }
            };

            return jQuery.ajax(settings);
        },

        //the method which executes the ajax calls of type='POST' and dataType='json' with the host-cookie (this method should be) for all the ajax calls in Apps
        ajaxPost: function (settings) {
            settings.type = 'POST';
            settings.dataType = settings.dataType || 'json';

            if (!settings.url) {
                settings.url = '/apjax.axd';
            }

            //adding the host-cookie to settings.data
            var hostCookie = BY.cookieManager.getHostCookie();
            if (hostCookie) {
                settings.data[BY.cookieFieldName] = JSON.stringify(hostCookie);
            }

            var onAfterSuccess = settings.success;
            settings.success = function (jsonResponseData, textStatus, ajaxResponseObject) {
                //saving the host-cookie with the cookie-contents before calling the succes callback if there is a host-cookie in the response data and it wasn't saved on the server-side
                if (jsonResponseData && jsonResponseData.hostCookie && !jsonResponseData.isHostCookieSaved) {
                    //setting the user cookie name if it doesn't exist
                    if (!jsonResponseData.hostCookie.Name) {
                        jsonResponseData.hostCookie.Name = BY.hostCookieName;
                    }

                    //saving the host-cookie with the cookie-contents
                    BY.cookieManager.saveAppHostCookie(jsonResponseData.hostCookie, function () {
                        onAfterSuccess(jsonResponseData);
                    });
                } else {
                    onAfterSuccess(jsonResponseData);
                }
            };

            return BY.basic_ajax(settings);
        },

        //the object with calculation methods
        calc: {
            //the date-time methods
            dateTime: {

                //NOTICE:  new Date().getTime() == Date.now()

                //the method which gets the date-time now in UTC milliseconds
                nowInUtcMilliseconds: function () {
                    return Date.now();
                },

                //the method which gets the specified number of days in milliseconds
                fromDaysToMilliseconds: function (numberOfDays) {
                    return numberOfDays * 24 * 60 * 60 * 1000;
                },

                //the method which adds the specified number of days to the specified date-time and returns the date-time result
                addDaysToTime: function (numberOfDays, dateTime) {
                    dateTime = dateTime || new Date();
                    dateTime.setTime(dateTime.getTime() + BY.calc.dateTime.fromDaysToMilliseconds(numberOfDays));
                    return dateTime;
                },

                //the method which gets the date-time in the locale time of the browser by the specified UTC date-time string
                //REMARK:  UTC date-time string always ends with the char 'Z', otherwise it will be treated differently
                getLocaleByUtcString: function (utcDateTimeString) {
                    var localeString = new Date(utcDateTimeString).toLocaleString();
                    return new Date(localeString);
                },

                //the method which converts the specified locale date-time to utc date-time
                fromLocaleToUtc: function (localeDateTime) {
                    var utcDateTime = new Date(localeDateTime.toUTCString());
                    return utcDateTime;
                },

            },

            //the query string methods
            queryString: {

                //adds a new parameter with the specified param name and value to the queryParams of the specified instance
                addQueryParam: function (instance, paramName, paramValue) {
                    if (instance.queryParams.length > 0) {
                        instance.queryParams += "&";
                    }
                    instance.queryParams += paramName + "=" + paramValue;
                },

            },
        },


        getParameterByName: function (name, url) {
            name = name.replace(/[\[\]]/g, '\\$&');
            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, ' '));
        },

        //the object with validation methods
        validate: {

            //the methods to validate 'function' objects
            method: {

                //the method which validates whether the specified function has at least one parameter in its signature (true) or not (false)
                hasAtLeastOneParameter: function (methodToValidate) {
                    var isMethodValid = Boolean(methodToValidate);
                    if (isMethodValid) {
                        //validating the type of the method is function
                        isMethodValid = typeof methodToValidate === "function";

                        //validating the method has at least one parameter in its signature
                        var numberOfFunctionParameters = methodToValidate.length;
                        isMethodValid = isMethodValid && numberOfFunctionParameters > 0;
                    }
                    return isMethodValid;
                },

                //TODO:  find a way to validate that the first parameter is a function
                //the method which validates whether the first parameter of the specified function is a callback function
                hasCallbackAsFirstParameter: function (methodToValidate) {
                    //validating the specified function has at least one parameter in its signature
                    var isMethodValid = BY.validate.method.hasAtLeastOneParameter(methodToValidate);

                    if (isMethodValid) {
                        var methodString = methodToValidate.toString();
                        isMethodValid = methodString.indexOf("function") == 0;
                        if (isMethodValid) {
                            var functionSignatureStartIndex = methodString.indexOf("(") + 1;
                            var functionSignatureEndIndex = methodString.indexOf(")");
                            var functionSignatureString = methodString.substring(functionSignatureStartIndex, functionSignatureEndIndex);
                            var functionSignatureParts = functionSignatureString.split(',');
                            isMethodValid = functionSignatureParts.length > 0;// && functionSignatureParts[0].toLowerCase().indexOf("callback");
                        }
                    }

                    return isMethodValid;
                },

            },

        },

        //the object with the 'postMessage' methods
        postMessage: (function () {
            //the method which implements the exposed 'postMessage' methods and returns an error object in case of an error
            //NOTICE:  the content object that is sent by 'postMessage' cannot be or contain a function value, otherwise the 'postMessage' won't be executed and an error will be returned
            var _postMessageInOtherWindow = function (otherWindow, destinationUrl, actionName, content) {
                var errorObject = null;
                try {
                    otherWindow.postMessage({
                        name: (content.iframeId ? content.iframeId : ""),
                        action: actionName,
                        content: content
                    }, destinationUrl);
                } catch (postMessageError) {
                    errorObject = postMessageError;
                }
                return errorObject;
            };

            return {
                //the 'postMessage' method to run when posting a message from the iframe to its parent-window
                toParentWindow: function (parentUrl, actionName, content) {
                    if (BY_isNullOrEmpty(content)) {
                        content = {};
                    }
                    //posting message to the parent window
                    //try to get current iframe id 
                    try {
                        var currentIframeId = BY.getParameterByName("iframeId", window.location.href);
                        if (currentIframeId) {
                            content.iframeId = currentIframeId;
                        }
                    }
                    catch (ex) {
                        console.log(ex);
                    }

                    return _postMessageInOtherWindow(window.parent, parentUrl, actionName, content);
                },

                //the 'postMessage' method to run when posting a message from the host-site to our iframe inside it
                toIFrame: function (iframeId, iframeUrl, actionName, content) {
                    //getting the app iframe
                    var cb_iframe = jQuery("#" + iframeId).get(0);

                    var currentIframeId = null;

                    currentIframeId = (window.frameElement && window.frameElement.id ? window.frameElement.id : null);

                    if (!currentIframeId && iframeId) {
                        currentIframeId = iframeId
                    }

                    if (!content) {
                        content = {};
                    }
                    content.iframeId = currentIframeId;

                    //posting message to the app iframe
                    return _postMessageInOtherWindow(cb_iframe.contentWindow, iframeUrl, actionName, content);
                },


            };
        })(),



        googleAnalytics: {
            init: function (gaId) {
                (function (i, s, o, g, r, a, m) {
                    i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                        (i[r].q = i[r].q || []).push(arguments)
                    }, i[r].l = 1 * new Date(); a = s.createElement(o),
                    m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
                })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
                ga('create', gaId, 'auto', 'commbox_ga');
                ga('commbox_ga.send', 'pageview');
            },

            pushEventFromHost: function (content) {
                BY.googleAnalytics.pushEvent(content.hitType, content.eventCategory, content.eventAction, content.eventLabel);
            },
            pushEvent: function (hitType, eventCategory, eventAction, eventLabel) {
                if (typeof (areCookiesSavedInLauncher) !== 'undefined' && areCookiesSavedInLauncher) {
                    //this code called from apps(chat, contactUs, navigator...)
                    BY.postMessage.toParentWindow("*", "googleAnalytics", { type: 'pushEventFromHost', hitType: hitType, eventCategory: eventCategory, eventAction: eventAction, eventLabel: eventLabel });
                }
                else {
                    if (typeof (ga) != "undefined") {
                        try {
                            //ga('send', 'event', 'ContactUs', 'Send', 'Error');
                            ga('commbox_ga.send', hitType, eventCategory, eventAction, eventLabel);
                        }
                        catch (ex) {
                            console.log(ex);
                        }
                    }
                }
            }
        },

        //---------- javascript cookie getter ---------- 
        getCookie: function (cookieName) {
            var name = cookieName + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        },
        //---------- End of javascript cookie getter ---------- 

        //the cookieManager with the methods to manage the state-cookie and the host-cookie (with the rest of the cookie-contents) for the app
        //REMARK 1:  state-cookie is to manage all the cookies that relate to the launcher of the app
        //REMARK 2:  host-cookie is to manage all the cookie-contents of the app
        cookieManager: (function () {

            //---------- private members ----------
            var _innerData = {
                //the host-cookie of the iframe
                hostCookie: null,

                //the prefix for the name of our cookie
                cookiePrefix: "cb_",

                //the indication whether this page is rendered inside an iframe and the cookies are saved in the launcher website
                areCookiesSavedInLauncher: false,

                //the url of the parent-window
                parentUrl: null,

                //the callback method to call after some actions regarding the cookies
                callbacks: {
                    //the callback method to call after the cookies were loaded
                    onCookiesLoaded: null,

                    //the callback method to call after the cookies were saved
                    onCookiesSaved: null,
                }
            };
            //---------- end private members ----------

            //---------- private methods ----------

            var _setCookieByTime = function (cookieName, cookieValue, localeExpirationTime) {
                var expires = null;
                if (localeExpirationTime) {
                    expires = "expires=" + localeExpirationTime.toUTCString();
                }
                var cookieString = cookieName + "=" + cookieValue + "; path=/" + (expires != null && expires != undefined && expires.length > 0 ? "; " + expires : "");
                document.cookie = cookieString;
            };

            var _setCookie = function (cookieName, cookieValue, numberOfDaysTillExpiration) {
                var expires = null;
                if (numberOfDaysTillExpiration != null && numberOfDaysTillExpiration != undefined) {
                    var localeExpirationTime = BY.calc.dateTime.addDaysToTime(numberOfDaysTillExpiration);
                    expires = "expires=" + localeExpirationTime.toUTCString();
                }

                var cookieString = cookieName + "=" + cookieValue + "; path=/" + (expires != null && expires != undefined && expires.length > 0 ? "; " + expires : "");
                document.cookie = cookieString;
            };

            //the method which gets the cookie name with the initial state of the app
            var _getInitialStateCookieName = function (streamId) {
                return "byInitialState_" + streamId;
            };

            //the method which creates a new host-cookie with the specified parameters
            var _createNewHostCookie = function (hostCookieName, innerItems, outerItems, hostCookieExpirationTime) {
                var hostCookie = {
                    Name: hostCookieName || null,
                    InnerItems: innerItems || [],
                    OuterItems: outerItems || [],
                    Expires: hostCookieExpirationTime || null,
                };
                return hostCookie;
            };

            //the method which creates a cookie-content by the specified parameters
            var _createCookieContent = function (cookieName, cookieValue, expirationTime, options) {
                var cookieContent = {
                    Name: cookieName,
                    Value: cookieValue,
                    Expires: expirationTime,

                    //TODO:  consider to handle options with 'domain' and 'secure' values for the cookies

                    options: options,
                };
                return cookieContent;
            };

            //the method which indicates whether the specified expiration time string is valid (true) or not (false)
            //REMARK:  the specified expiration time string is in UTC
            var _isValidExpirationTime = function (utcExpirationTimeString) {
                //getting the expiration-time in locale time by the specified UTC expiration-time string
                var expirationTimeInUtcMilliseconds = BY.calc.dateTime.getLocaleByUtcString(utcExpirationTimeString);

                return expirationTimeInUtcMilliseconds >= BY.calc.dateTime.nowInUtcMilliseconds();
            };

            //the method which gets the latest expiration time among the 2 specified expiration times
            //REMARK:  the expiration times must be javascript Date objects
            var _getLatestExpirationTime = function (expirationTime1, expirationTime2) {
                var latestExpirationTime = expirationTime2;
                if (expirationTime1) {
                    if (expirationTime2 && expirationTime1 < expirationTime2) {
                        latestExpirationTime = expirationTime2;
                    }
                    else {
                        latestExpirationTime = expirationTime1;
                    }
                }
                return latestExpirationTime;
            };

            //the method which creates and returns a new copy of the specified host-cookie only with valid cookie-contents and valid expiration-time.  in case there is no valid cookie-content, then returns null
            var _getValidHostCookie = function (hostCookie) {
                //getting only the cookies that are not expired
                var validHostCookie = null;
                if (hostCookie) {
                    //initializing the indication whether there is at least one cookie-content with valid expiration-time
                    var hasOperativeCookie = false;

                    //filtering out all the outer items that are already expired
                    var operativeOuterCookieContents = {};
                    for (var itemName in hostCookie.OuterItems) {
                        if (hostCookie.OuterItems.hasOwnProperty(itemName)) {
                            var itemContent = hostCookie.OuterItems[itemName];

                            //adding the cookie-content to the operative cookie-contents only if it has a valid expiration time
                            if (_isValidExpirationTime(itemContent.Expires)) {
                                hasOperativeCookie = true;
                                operativeOuterCookieContents[itemName] = itemContent;
                            }
                        }
                    }

                    //indicating whether there is at least one inner item which is considerd a valid item
                    for (var itemName in hostCookie.InnerItems) {
                        if (hostCookie.InnerItems.hasOwnProperty(itemName)) {
                            hasOperativeCookie = true;
                            break;
                        }
                    }

                    //getting a copy of the host-cookie only with the operative cookie-contents and only in case there is at least one operative cookie-content
                    if (hasOperativeCookie) {
                        validHostCookie = {
                            Name: hostCookie.Name,
                            InnerItems: hostCookie.InnerItems,
                            OuterItems: operativeOuterCookieContents,
                            Expires: hostCookie.Expires,
                        };
                    }
                }

                return validHostCookie;
            };

            //the method which loads the http-cookie with the host-cookie content by the spcified host-cookie name
            var _loadHttpHostCookie = function (hostCookieName) {
                //loading the user's data from the cookie
                var fullHostCookieName = _innerData.cookiePrefix + hostCookieName;
                var hostCookieValue = BY.getCookie(fullHostCookieName);
                var hostCookieContent = hostCookieValue ? JSON.parse(hostCookieValue) : null;

                //creating the host-cookie with its content
                var loadedHostCookie = null;
                if (hostCookieContent) {
                    loadedHostCookie = _createNewHostCookie(hostCookieName, hostCookieContent.InnerItems, hostCookieContent.OuterItems);
                }

                //getting the host-cookie only with valid content
                var validHostCookie = _getValidHostCookie(loadedHostCookie);
                return validHostCookie;
            };

            //the method which overrides the existing inner items of the cookieManager's host-cookie by the inner items of the specified other-host-cookie with the same names
            var _overrideInnerItemsFromOtherHostCookie = function (otherHostCookie) {
                //the indication whether the inner items were overridden (true) or not (false)
                var wereInnerItemsOverridden = false;

                //overriding the inner items if the other-host-cookie exists
                if (otherHostCookie) {
                    //overriding the inner items if the cookieManager's host-cookie exists
                    if (_innerData.hostCookie) {
                        for (var itemName in otherHostCookie.InnerItems) {
                            if (otherHostCookie.InnerItems.hasOwnProperty(itemName)) {
                                //indicating whether the inner item with the current item name is missing in the cookieManager's host-cookie or different than the inner item in the specified other-host-cookie
                                var isCurrentInnerItemContentMissingOrDifferent = !_innerData.hostCookie.InnerItems.hasOwnProperty(itemName) || _innerData.hostCookie.InnerItems[itemName] != otherHostCookie.InnerItems[itemName];

                                if (isCurrentInnerItemContentMissingOrDifferent) {
                                    //setting the inner item with the current item name from the other-host-cookie
                                    _innerData.hostCookie.InnerItems[itemName] = otherHostCookie.InnerItems[itemName];
                                }

                                //indicating whether the inner items were overridden (true) or not (false)
                                wereInnerItemsOverridden = wereInnerItemsOverridden || isCurrentInnerItemContentMissingOrDifferent;
                            }
                        }
                    }
                        //otherwise, setting the other-host-cookie as the cookieManager's host-cookie
                    else {
                        var validOtherHostCookie = _getValidHostCookie(otherHostCookie);
                        _innerData.hostCookie = validOtherHostCookie;
                        wereInnerItemsOverridden = true;
                    }
                }

                return wereInnerItemsOverridden;
            };



            //the method which updates the cookie-content by the specified parameters in the host-cookie 
            //REMARK:  if the host-cookie doesn't exist, the method creates it and adds the cookie-content to it
            var _updateOuterCookieContentInHostCookie = function (cookieName, cookieValue, localeExpirationTime, options) {
                //creating the host-cookie if it doesn't exist yet
                if (!_innerData.hostCookie) {
                    _innerData.hostCookie = _createNewHostCookie();
                }

                //TODO:  handle more values for the cookie (e.g. path) that are in the 'options' object

                //getting the expiration time in UTC
                var utcExpirationTime = localeExpirationTime && BY.calc.dateTime.fromLocaleToUtc(localeExpirationTime);

                //adding/updating the cookie-content with the specified parameters in the host-cookie
                _innerData.hostCookie.OuterItems[cookieName] = _createCookieContent(cookieName, cookieValue, utcExpirationTime, options);

                //updating the expiration time of the host-cookie by the latest expiration time
                _innerData.hostCookie.Expires = _getLatestExpirationTime(new Date(_innerData.hostCookie.Expires), utcExpirationTime) || null;
            };

            //the method which sets the http-cookie with the specified host-cookie content ONLY on the client-side
            var _saveHttpHostCookieOnlyOnClient = function (hostCookie) {
                //getting the host-cookie only with valid content
                var validHostCookie = _getValidHostCookie(hostCookie);

                //setting the host-cookie on the host-site if it is valid
                if (validHostCookie) {
                    var fullHostCookieName = _innerData.cookiePrefix + validHostCookie.Name;
                    var hostCookieContent = { InnerItems: validHostCookie.InnerItems, OuterItems: validHostCookie.OuterItems };
                    var hostCookieValue = JSON.stringify(hostCookieContent);
                    var localeExpirationTime = BY.calc.dateTime.getLocaleByUtcString(validHostCookie.Expires);
                    _setCookieByTime(fullHostCookieName, hostCookieValue, localeExpirationTime);
                }

                return validHostCookie;
            };

            //the method which sets the http-cookie with the specified host-cookie content ONLY on the server-side
            var _saveHttpHostCookieOnlyOnServer = function (hostCookie, onHttpHostCookieSavedCallback) {
                if (hostCookie) {
                    BY.ajaxPost({
                        url: '/apjax.axd',
                        async: true,
                        cache: false,
                        data: {
                            ac: 20,
                            sid: BY.streamId,
                        },
                        success: function (responseData) {
                            //handling the case if the host-cookie content wasn't saved on the server-side
                            if (responseData.status != "saved") {
                                BY.handleErrorMessage(responseData.status, responseData.status);
                            }

                            if (onHttpHostCookieSavedCallback) {
                                onHttpHostCookieSavedCallback();
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            BY.handleErrorMessage("Failed to save the cookie-contents on the server-side", jqXHR.status);

                            if (onHttpHostCookieSavedCallback) {
                                onHttpHostCookieSavedCallback();
                            }
                        }
                    });
                } else {
                    if (onHttpHostCookieSavedCallback) {
                        onHttpHostCookieSavedCallback();
                    }
                }
            };

            //the method which initializes the host-cookie in the code
            var _initHostCookie = function (hostCookie) {
                //setting the host-cookie locally
                _innerData.hostCookie = hostCookie;
            };

            //---------- end private methods ----------

            //---------- public methods ----------

            var cookieManagerInstance = {

                //gets the state-cookie by the specified iframeId and streamId
                getStateCookieValue: function (streamId) {
                    var initialStateCookieName = _getInitialStateCookieName(streamId);
                    return BY.getCookie(initialStateCookieName);
                },

                //sets the state-cookie with the specified state-value and expiration time by the specified iframeId and streamId
                setStateCookie: function (streamId, stateValue, numberOfDaysTillExpiration) {
                    var initialStateCookieName = _getInitialStateCookieName(streamId);
                    _setCookie(initialStateCookieName, stateValue, numberOfDaysTillExpiration);
                },

                //gets the session cookie by session cookie name
                getSessionCookieValue: function (sessionCookieName) {
                    if (sessionCookieName !== "") {
                        return BY.getCookie(sessionCookieName);
                    }
                    return "";
                },

                //sets the session cookie with the specified session value and expiration time by session cookie name
                setSessionCookie: function (sessionCookieName, sessionValue, numberOfDaysTillExpiration) {
                    if (sessionCookieName !== "") {
                        _setCookie(sessionCookieName, sessionValue, numberOfDaysTillExpiration);
                    }
                },

                //write for aggr stats at minimal time of 15 min
                setLauncherAggrRequestCookie: function (streamId) {
                    var cookieName = "usfu_" + streamId;
                    var expirationTime = new Date(new Date().getTime() + 15 * 60000);
                    _setCookieByTime(cookieName, true, expirationTime);
                },
                getLauncherAggrRequestCookie: function (streamId) {
                    var cookieName = "usfu_" + streamId;
                    return BY.getCookie(cookieName);
                },

                //gets the host-cookie with the cookie-contents.  if it doesn't exist, returns null
                getHostCookie: function () {
                    return _innerData.hostCookie || null;
                },

                //saves the specified host-cookie
                saveAppHostCookie: function (hostCookie, onHostCookieSavedCallback) {
                    //the code to execute if the 'postMessage' shouldn't be executed or it failed to execute
                    var onDefaultCase = function () {
                        //validating the content of the host-cookie and getting it after it was saved as an http-cookie both on the client-side and on the server-side
                        var savedHostCookie = _saveHttpHostCookieOnlyOnClient(hostCookie);

                        //initializing the host-cookie
                        _initHostCookie(savedHostCookie);

                        //executing the callback method after initializing the host-cookie
                        if (onHostCookieSavedCallback) {
                            onHostCookieSavedCallback();
                        }
                    };

                    if (_innerData.areCookiesSavedInLauncher) {
                        //setting the callback method to run after the cookies were saved                    
                        //the method which sets the the 'onCookiesSaved' callback method to be executed only once                    
                        if (onHostCookieSavedCallback) {
                            _innerData.callbacks.onCookiesSaved = function () {
                                //first, resetting the variable of this method so the 'onCookiesSaved' callback method won't be used again without re-setting it
                                _innerData.callbacks.onCookiesSaved = null;

                                //then, executing the 'onCookiesSaved' callback method
                                onHostCookieSavedCallback();
                            };
                        }

                        //posting the cookie-contents to the parent-window
                        var errorObject = BY.postMessage.toParentWindow(_innerData.parentUrl, "saveCookiesOnHost", { hostCookie: hostCookie });
                        if (errorObject) {
                            //handling the 'postMessage' error
                            BY.handleErrorMessage(errorObject, "postMessage");

                            //resetting the 'onCookiesSaved' callback method so it won't be used
                            _innerData.callbacks.onCookiesSaved = null;

                            //executing the code of the default case if the 'postMessage' failed
                            onDefaultCase();
                        }
                    }
                    else {
                        onDefaultCase();
                    }
                },

                //gets the cookie-content with the specified cookie name by the host-cookie
                getCookieValue: function (cookieName) {
                    var cookieContent = _innerData.hostCookie && _innerData.hostCookie.OuterItems[cookieName];
                    var isValid = cookieContent && cookieContent.Expires && _isValidExpirationTime(cookieContent.Expires);
                    return isValid ? cookieContent.Value : null;
                },

                //updates the cookie-content with the specified parameters in the host-cookie where the expiration time is specified as a date
                //REMARK:  this method is used to update a cookie-content in the host-cookie by the code on the client-side
                updateCookieWithExpirationTime: function (cookieName, cookieValue, onCookieUpdatedCallback, localeExpirationTime, options) {
                    _updateOuterCookieContentInHostCookie(cookieName, cookieValue, localeExpirationTime, options);
                    BY.cookieManager.saveAppHostCookie(_innerData.hostCookie, function () {
                        //saving the host-cookie content as an http-cookie on the server-side after validating and saving it as an http-cookie on the client-side
                        _saveHttpHostCookieOnlyOnServer(_innerData.hostCookie, onCookieUpdatedCallback);
                    });
                },

                //updates the cookie-content with the specified parameters in the host-cookie where the expiration time is specified as the number of days till expiration
                //REMARK:  this method is used to update a cookie-content in the host-cookie by the code on the client-side
                updateCookieWithNumberOfDaysTillExpiration: function (cookieName, cookieValue, onCookieUpdatedCallback, numberOfDaysTillExpiration, options) {
                    var localeExpirationTime = BY.calc.dateTime.addDaysToTime(numberOfDaysTillExpiration);
                    BY.cookieManager.updateCookieWithExpirationTime(cookieName, cookieValue, onCookieUpdatedCallback, localeExpirationTime, options);
                },

                // This method handles the communication between the iframe to the host-site
                registerWindowMessagesEvent: function (appInstance, areCookiesSavedInLauncher, currentIframeId) {
                    // Here "addEventListener" is for standards-compliant web browsers and "attachEvent" is for IE Browsers.
                    var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
                    var eventer = window[eventMethod];
                    var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";

                    //defining the method which runs the corresponding case for the app instance on message-event by the specified action name and content
                    //REMARK:  the cases in this method are general for all apps
                    var onMessageEventByActionAndContent = function (actionName, content) {
                        //cases on the host-site (the parent-window)                    
                        if (!areCookiesSavedInLauncher) {
                            if (content && content.iframeId) {
                                appInstance = BY.instances[content.iframeId];
                            }
                            var iframeId = appInstance.iframeId;
                            var iframeUrl = appInstance.iframeUrl;

                            switch (actionName) {
                                case "loadCookiesFromHost":
                                    //loading the user's data from the host-cookie and afterwards setting it on the iframe
                                    var validHostCookie = _loadHttpHostCookie(content.hostCookieName);

                                    //posting a message to the iframe to set the host-cookie
                                    BY.postMessage.toIFrame(iframeId, iframeUrl, "initLoadedCookiesOnIFrame", { hostCookie: validHostCookie });
                                    break;

                                case "saveCookiesOnHost":
                                    //validating the content of the host-cookie and getting it after it was saved as an http-cookie
                                    var savedHostCookie = _saveHttpHostCookieOnlyOnClient(content.hostCookie);

                                    //posting a message to the iframe to set the valid host-cookie
                                    BY.postMessage.toIFrame(iframeId, iframeUrl, "initSavedCookiesOnIFrame", { hostCookie: savedHostCookie });
                                    break;

                                case "handleUnreadMessages":
                                    //showing the the notification messages with the last messages in the specified content when the chat is closed
                                    var unreadMessages = JSON.parse(localStorage.getItem("unread_messages_" + BY.streamId) || "[]");
                                    if (!Array.isArray(unreadMessages)) {
                                        unreadMessages = new Array();
                                    }
                                    if (BY.getCookie("byInitialState_" + BY.streamId) == "minimized") {
                                        if (unreadMessages.indexOf(content.encryptedId) == -1) {
                                            unreadMessages.push(content.encryptedId);
                                            localStorage.setItem("unread_messages_" + BY.streamId, JSON.stringify(unreadMessages));
                                        }
                                    }
                                    instance.showNotifications(content.message);
                                    break;
                                    
                                case "getSessionCookieName":
                                    //saving session cookie name with brand id
                                    BY.session.cookieName = content.sessionCookieName;
                                    break
                                case "googleAnalytics":
                                    // init google analytics in host
                                    switch (content.type) {
                                        case "init":
                                            BY.googleAnalytics.init(content.gaId);
                                            break;
                                        case "pushEventFromHost":
                                            BY.googleAnalytics.pushEventFromHost(content);
                                            break;
                                    }
                                    break;
                                case "changeNode":
                                    if (appInstance.changeNode && content && content.current_node_address) {
                                        appInstance.changeNode(content.current_node_address);
                                    }
                                    break;
                                default:
                                    break;
                            }
                        }
                            //cases on the iframe
                        else {
                            switch (actionName) {
                                case "initLoadedCookiesOnIFrame":
                                    //REMARK:  the host-cookie in the received content is already after validation after saving it in the host-site (the parent-window)
                                    var validHostCookie = content.hostCookie;

                                    //setting the http-cookie with the specified host-cookie content also in the iframe window
                                    //REMARK:  this is for cases when setting http-cookies in the iframe page is allowed by the browser
                                    _saveHttpHostCookieOnlyOnClient(validHostCookie);

                                    //initializing the host-cookie
                                    _initHostCookie(validHostCookie);

                                    //executing the callback method after initializing the host-cookie
                                    var onCallback = _innerData.callbacks.onCookiesLoaded;
                                    if (onCallback) {
                                        onCallback();
                                    }
                                    break;

                                case "initSavedCookiesOnIFrame":
                                    //REMARK:  the host-cookie in the received content is already after validation after saving it in the host-site (the parent-window)
                                    var validHostCookie = content.hostCookie;

                                    //setting the http-cookie with the specified host-cookie content also in the iframe window
                                    //REMARK:  this is for cases when setting http-cookies in the iframe page is allowed by the browser
                                    _saveHttpHostCookieOnlyOnClient(validHostCookie);

                                    //initializing the host-cookie
                                    _initHostCookie(validHostCookie);

                                    //executing the callback method after initializing the host-cookie
                                    var onCallback = _innerData.callbacks.onCookiesSaved;
                                    if (onCallback) {
                                        onCallback();
                                    }
                                    break;

                                case "overrideInnerDataHostCookie":
                                    BY.cookieManager.overrideInnerDataHostCookie(content.innerCookieToUpdateInAllIframe);
                                    //reload app iframe so cookie will be refresh
                                    window.location.reload();
                                    break;
                                default:
                                    break;
                            }
                        }
                    };

                    if (!BY.onMessageEventListener) {
                        BY.onMessageEventListener = {};
                    }
                    if (!BY.onMessageEventByActionAndContent) {
                        BY.onMessageEventByActionAndContent = {};
                    }

                    var uniqueCallbackName = "callback_" + (currentIframeId ? currentIframeId : "");
                    //setting the listener method to run on message-event inside the iframe of the app
                    if (areCookiesSavedInLauncher && _innerData.parentUrl) {
                        BY.onMessageEventListener[uniqueCallbackName] = onMessageEventListener = function (eventObj) {
                            //aborting if the event's domain is not the domain of the parent-window
                            if (_innerData.parentUrl.indexOf(eventObj.origin) !== 0) {
                                return;
                            }

                            //getting the action name and the content
                            var obj = eventObj.data;
                            var actionName = obj.action, content = obj.content;

                            //running the method with the general cases for the message-event
                            BY.onMessageEventByActionAndContent[uniqueCallbackName] = onMessageEventByActionAndContent(actionName, content);
                        };
                    }
                        //otherwise, setting the listener method to run on message-event in the host-site outside the iframe of the app
                    else {
                        BY.onMessageEventListener[uniqueCallbackName] = function (eventObj) {
                            //aborting if the event's domain is not the domain of the iframe
                            if (eventObj.origin !== "https:" + BY._baseDomain.replace(/\/+$/, "") &&
                                eventObj.origin !== "http:" + BY._baseDomain.replace(/\/+$/, "")) {
                                return;
                            }

                            //getting the action name and the content
                            var obj = eventObj.data;
                            var actionName = obj.action, content = obj.content;
                            //running the method with the general cases for the message-event
                            BY.onMessageEventByActionAndContent[uniqueCallbackName] = onMessageEventByActionAndContent(actionName, content);
                            //running the method with the chat cases for the message-event
                            //REMARK:  if no general case matches the action name, then it should be a chat case

                            if (BY.onMessageEvent) {
                                BY.onMessageEvent(actionName, content);
                            }
                        };
                    }

                    // Listen to message from child IFrame window
                    if (!BY.isMessageEventListenerInit) {
                        BY.isMessageEventListenerInit = true;
                        eventer(messageEvent, BY.onMessageEventListener[uniqueCallbackName], false);
                    }

                },

                //the method which creates and returns the object that can generate/add the host-cookie for an ajax request
                //PURPOSE:  used by the code in 'global.js' which uploads files to the server by its own ajax calls
                getHostCookieGeneratorForAjax: function () {
                    var dataGenerator = {
                        fieldName: BY.cookieFieldName,

                        //the object that will return the updated host-cookie as a string when the ajax call will be sent to the server-side
                        //REMARK 1:  the reason for this object (instead of just setting the host-cookie) is because the host-cookie will be updated after calling this method and before it will be sent by the ajax call
                        //REMARK 2:  each javascript object has the default 'toString' function which returns "[object Object]" by default
                        //REMARK 3:  on every ajax call, each object in the request data is modified to a string by its default 'toString' function 
                        //REMARK 4:  therefore, we define the 'toString' function so it will return the value we wish to send (the stringified host-cookie) and not the default "[object Object]" value
                        objectForAjaxRequest: {
                            toString: function () {
                                var hostCookie = BY.cookieManager.getHostCookie();
                                return JSON.stringify(hostCookie);
                            }
                        }
                    };

                    //the method which adds the object (with the updated host-cookie) to the specified request data
                    dataGenerator.addObjectToRequestData = function (jsonRequestData) {
                        jsonRequestData[dataGenerator.fieldName] = dataGenerator.objectForAjaxRequest;
                    };

                    return dataGenerator;
                },

                getInnerDataHostCookie: function () {
                    return _innerData.hostCookie;
                },

                overrideInnerDataHostCookie: function (cookieValue) {
                    _innerData.hostCookie = cookieValue;
                },

                deleteCookie: function (cookieName) {
                    if (cookieName !== "") {
                        _setCookie(cookieName, "", -1);
                    }
                }

            };

            //this method initializes the cookieManager and loads the cookie-contents of the host-cookie for the app
            cookieManagerInstance.initialize = function (hostCookieName, areCookiesSavedInLauncher, parentUrl, ticketHostCookie, onInitializedCallback, currentIframeId) {
                //the indication whether this page is rendered inside an iframe and the cookies are saved in the launcher website
                _innerData.areCookiesSavedInLauncher = areCookiesSavedInLauncher;

                //setting the url of the parent-window
                _innerData.parentUrl = parentUrl;

                //setting the specified callback method
                var onExtendedInitializedCallback = onInitializedCallback;

                //extending the specified callback method if the ticket's host-cookie is specified
                if (ticketHostCookie) {
                    onExtendedInitializedCallback = function () {
                        //overriding the inner items by the ticket's host-cookie and indicating if the cookieManager's host-cookie was overridden
                        var wereInnerItemsOverridden = _overrideInnerItemsFromOtherHostCookie(ticketHostCookie);

                        //saving the host-cookie if inner items were overridden
                        if (wereInnerItemsOverridden) {
                            BY.cookieManager.saveAppHostCookie(_innerData.hostCookie, onInitializedCallback);
                        }
                            //otherwise
                        else {
                            //executing the specified callback method after initializing the host-cookie and adding inner items to it from the specified ticket host-cookie
                            if (onInitializedCallback) {
                                onInitializedCallback();
                            }
                        }

                    }
                }

                //the code to execute if the 'postMessage' shouldn't be executed or it failed to execute
                var onDefaultCase = function () {
                    //loading the user's data from the host-cookie with the valid cookie-contents (that are not expired) and setting it in the iframe
                    var hostCookie = _loadHttpHostCookie(hostCookieName);

                    //validating the content of the host-cookie and getting it after it was saved as an http-cookie both on the client-side and on the server-side
                    var savedHostCookie = _saveHttpHostCookieOnlyOnClient(hostCookie);

                    //initializing the host-cookie
                    _initHostCookie(savedHostCookie);

                    //executing the callback method after initializing the host-cookie
                    if (onExtendedInitializedCallback) {
                        onExtendedInitializedCallback();
                    }
                };

                //loading the cookies from the host-site if the chat is rendered inside an iframe
                if (_innerData.areCookiesSavedInLauncher) {
                    //setting the callback method to run after the cookies were loaded
                    _innerData.callbacks.onCookiesLoaded = onExtendedInitializedCallback;
                    //registering to the message-event listener of 'connect.js'                
                    BY.cookieManager.registerWindowMessagesEvent(null, true, currentIframeId);

                    //posting-message to the parent-window in order to get the user's data
                    var errorObject = BY.postMessage.toParentWindow(_innerData.parentUrl, "loadCookiesFromHost", { hostCookieName: hostCookieName });
                    if (errorObject) {
                        //handling the 'postMessage' error
                        BY.handleErrorMessage(errorObject, "postMessage");

                        //resetting the 'onCookiesLoaded' callback method so it won't be used
                        _innerData.callbacks.onCookiesLoaded = null;

                        //executing the code of the default case if the 'postMessage' failed
                        onDefaultCase();
                    }
                }
                    //otherwise, the cookies were already loaded
                else {
                    onDefaultCase();
                }
            };

            //---------- end public methods ----------

            return cookieManagerInstance;

        })(),

        /* public methods */
        /* "appParams" is object that can be: 
           {streamdId: "aaad%3d%3d",appName: "navigator", nodeId: "n_44"}  OR 
           {xxx: "23", yyy: "test"} OR
           {appUrl: "https:...."} url to open different page
           all the paramters except "streamId" and "appName" will be sent via query paramters(/navigator/<ENCRYPTED_STREAM_ID>?nodeId=123&xxx=23)
           "appName" can be: "chat", "navigator", "contactUs"
       */
        show: function (appParams) {
            var instance = null;
            if (appParams && appParams.appId) {
                //if more than on script install we need to get appId to get the current instance
                instance = BY.instances[appParams.appId]; // appId can be "ifrChat", "ifrChat_1", "ifrContactUs"
            }
            else {
                //take last instance as default
                instance = BY.instances[BY._instanceId];
            }

            var appUrl = null;
            if (appParams && appParams.streamId && appParams.streamId.length > 0 && appParams.appName && appParams.appName.length > 0) {
                // check if BY.show recived app and streamId to open.
                appParams.appName = BY.getModuleNameByAppName(appParams.appName); // navigator => interactive_navigator
                // build new link for requested App/StreamId
                appUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + appParams.appName + "/" + appParams.streamId; //chat//<ENCRYPTED_STREAM_ID>

                /* Ticket */
                //check if new ticket recived in appParams
                if (appParams["ta"] && appParams["ta"].length > 0) {
                    //set ticket from app params
                    if (appUrl.indexOf("?") == -1) {
                        appUrl += "?ta=" + appParams["ta"];
                    }
                    else {
                        appUrl += "&ta=" + appParams["ta"];
                    }
                } else {
                    // check if original app source code initialized with ticket.               
                    if (instance.ta && instance.ta.length > 5 && appUrl.indexOf("ta=") == -1) {
                        // set the ticket from the original app source code to the requested App/StreamId
                        if (appUrl.indexOf("?") == -1) {
                            appUrl += "?ta=" + instance.ta;
                        }
                        else {
                            appUrl += "&ta=" + instance.ta;
                        }
                    }
                }
                //check if another paramters sent in app params for example nodeId.  {streamdId: "aaad%3d%3d",appName: "navigator", nodeId: "n_44"}
                for (var propertyName in appParams) {
                    if (propertyName == "streamId" || propertyName == "appName" || propertyName == "ta") {
                        continue;
                    }
                    if (appUrl.indexOf(propertyName + "=") == -1) {
                        //this parameter not exist in url
                        var paramAdded = "";
                        if (appUrl.indexOf("?") == -1) {
                            paramAdded = "?" + propertyName + "=" + appParams[propertyName];
                        } else {
                            if (instance.queryParams.length > 0) {
                                paramAdded = "&";
                            }
                            paramAdded += propertyName + "=" + appParams[propertyName];
                        }
                        appUrl += paramAdded;
                    }
                }
            } else if (appParams && appParams.appUrl && appParams.appUrl.length > 0) {
                //check if full url recived from appParams
                appUrl = appParams.appUrl;
            } else {
                //check if another paramters sent in app params for example nodeId.  {streamdId: "aaad%3d%3d",appName: "navigator", nodeId: "n_44"}
                appUrl = instance.iframeUrl;
                var isIframeUrlChanged = false; //check if new paramter recived from appParams
                for (var propertyName in appParams) {
                    if (propertyName == "ta") {
                        //check if new ticket recived in appParams
                        if (appParams["ta"] && appParams["ta"].length > 5 && appUrl.indexOf("ta=") == -1) {
                            // append the ticket from the original app source code to the requested App/StreamId
                            if (appUrl.indexOf("?") == -1) {
                                appUrl += "?ta=" + appParams["ta"];
                            }
                            else {
                                appUrl += "&ta=" + appParams["ta"];
                            }
                            isIframeUrlChanged = true;
                        }
                        else if (instance.ta && instance.ta.length > 5 && appUrl.indexOf("ta=") == -1) {
                            // append the ticket from the original app source code to the requested App/StreamId
                            if (appUrl.indexOf("?") == -1) {
                                appUrl += "?ta=" + instance.ta;
                            }
                            else {
                                appUrl += "&ta=" + instance.ta;
                            }
                            isIframeUrlChanged = true;
                        }
                        continue;
                    }

                    if (appUrl.indexOf(propertyName + "=") == -1) {
                        //this parameter not exist in url
                        var paramAdded = "";
                        if (appUrl.indexOf("?") == -1) {
                            paramAdded = "?" + propertyName + "=" + appParams[propertyName];
                        } else {
                            if (instance.queryParams.length > 0) {
                                paramAdded = "&";
                            }
                            paramAdded += propertyName + "=" + appParams[propertyName];
                        }
                        appUrl += paramAdded;
                        isIframeUrlChanged = true;
                    }
                }
                if (isIframeUrlChanged == false) {
                    appUrl = null;
                }
            }

            if (appUrl && appUrl.length > 0) {
                // BY.show called with new url.
                // backup old iframe url for original embeded stream code. we will restore iframe url when the user will click on luncher button
                instance.originalEmbededAppUrl = instance.iframeUrl;
                instance.iframeUrl = appUrl; // change the original app iframeUrl from the url that supplied 
                _openApp(function () {
                    if (instance && instance.originalEmbededAppUrl && instance.originalEmbededAppUrl.length > 0) {
                        //if BY.show was previously called from external btn and "appUrl" paramter sent, we restore original iframe url
                        instance.iframeUrl = instance.originalEmbededAppUrl;
                        instance.originalEmbededAppUrl = null;
                    }
                });
                return;
            } else {
                _openApp();
            }

            function _openApp(onAppLoaded) {
                instance.isOpen = false;
                if (instance.onclickFunction && instance.onclickFunction.toString().indexOf("window.open") > -1) {
                    window.open(instance.iframeUrl, instance.urlUniqueName, "_blank", "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width='" + instance.w + "',height='" + instance.h + "',top='" + instance.top + "',left='" + instance.left + "'").focus();
                    if (onAppLoaded) {
                        onAppLoaded();
                    }
                } else {
                    BY._slideOutPreButton(instance.id, onAppLoaded);
                }
            }
        },

        // you can register to registerToWindowUnloadEvent event by calling BY.registerToWindowUnloadEvent(onDisconnectionMethodWithCallback) where 'onDisconnectionMethodWithCallback' is a function which gets a callback function as its first parameter. 
        //REMARK:  the callback function MUST be called no matter what happens inside the method
        registerToWindowUnloadEvent: function (onDisconnectionMethodWithCallback) {
            //realtime event disconnect
            if (BY.arrOnDisconnect == undefined || BY.arrOnDisconnect == null) {
                BY.arrOnDisconnect = [];
                BY.isOnDisconnectTrigger = false;

                //user close window/tab/refresh
                window.onunload = function () {
                    if (BY.isOnDisconnectTrigger == false) {
                        BY._onWindowUnload();
                        BY.isOnDisconnectTrigger = true;
                    }
                }

                //user close window/tab/refresh
                window.onbeforeunload = function () {
                    if (BY.isOnDisconnectTrigger == false) {
                        BY._onWindowUnload();
                        BY.isOnDisconnectTrigger = true;
                    }
                }
            }

            //validating the specified method has a callback function as its first parameter
            var isDisconnectionMethodValid = BY.validate.method.hasCallbackAsFirstParameter(onDisconnectionMethodWithCallback);

            //pushing the 'onDisconnectionMethodWithCallback' method to the array of disconnection methods
            if (isDisconnectionMethodValid) {
                BY.arrOnDisconnect.push(onDisconnectionMethodWithCallback);
            }
        },

        inIframe: function () {
            try {
                return window.self !== window.top;
            } catch (ex) {
                return true;
            }
        },

        // this function roll out to parent page(iframe) and check if app is in Accessibility mode.
        // after function end roll out we will start to drill down and change the Accessibility mode in all pages(iframes).
        detectAppAccessibility: function (elem, isAccessabilityVisible) {
            if (jQuery('#accessibilityIcon').hasClass('accessibilityIconActive')) {
                isAccessabilityVisible = true;
            }

            if (isAccessabilityVisible == true) {
                // change current window to accessibility mode
                jQuery(elem).contents().find('.accessibilityView').show();
                jQuery(elem).contents().find('body').addClass('accessibilityMode');
                // drill down iframes and change to accessibility mode
                var foundVisibleIframe = false;

                function _onVisibleIframeFound() {
                    for (var i = 0; i < childIframes.length; i++) {
                        var iframeSrc = childIframes[i].src;
                        if (iframeSrc && iframeSrc.indexOf(BY._baseDomain) > -1 && jQuery(childIframes[i]).is(":visible")) {
                            //check if current iframe is in the same baseDomain bumpyard(and from facebook or other iframe).
                            BY.detectAppAccessibility(childIframes[i], true);
                            foundVisibleIframe = true;
                        }
                    }
                }
                var childIframes = jQuery(elem).contents().find("[name='by_iframe']");
                if (childIframes.length > 0) {
                    _onVisibleIframeFound();
                }
                if (foundVisibleIframe == false) {
                    childIframes = jQuery(elem).contents().find("[name='by_iframe_login']");
                    if (childIframes.length > 0) {
                        _onVisibleIframeFound();
                    }
                }

            } else {

                //roll up iframes to check if parent iframe is in accessabilty mode
                try {
                    if (!BY.inIframe())
                        return;

                    //var parentIframes = jQuery("[name='by_iframe']", window.parent.document);
                    var parentIframe = window.parent;
                    if (!parentIframe) {
                        if (jQuery('#accessibilityIcon').hasClass('accessibilityIconActive')) {
                            BY.detectAppAccessibility(elem, true);
                        }
                    } else {

                        if (jQuery(parentIframe.parent()).is(":visible")) {
                            var isAccessibilityMode = false;
                            if (jQuery('#accessibilityIcon').hasClass('accessibilityIconActive')) {
                                isAccessibilityMode = true;
                            }
                            parent.BY.detectAppAccessibility(jQuery("[name='by_iframe']", window.parent.document)[i], isAccessibilityMode);
                        }
                    }

                } catch (ex) {
                    if (jQuery('#accessibilityIcon').hasClass('accessibilityIconActive')) {
                        BY.detectAppAccessibility(elem, true);
                    }
                }
            }
        },

        getLoginStatus: function (callback, options) {
            this._getLoginStatus(callback, 0, options);
        },

        //REMARK:  using the specified 'onLogoutCallback' to synchronize between the actions when logging-out
        logout: function (streamId, objectId, onLogoutCallback) {
            var currObjectId = BY.objectId;
            var currStreamId = BY.streamId;

            BY_app.isAlreadyConnected = false;
            BY.cookieManager.deleteCookie(BY.session.cookieName);
            var callback = function () {
                //first logout from BY provider
                BY_FacebookConnect.logout(function (response) {
                    BY_BumpyardConnect.logout(function (response) {
                        if (onLogoutCallback) {
                            onLogoutCallback();
                        } else {
                            // on logout: postMessage to parent host.
                            // parent host will check if there is another CB apps open and will clear the apps cookies or refresh the apps page
                            var cookieToUpdateInAllIframe = null;
                            if (BY.cookieManager && BY.cookieManager.getInnerDataHostCookie) {
                                cookieToUpdateInAllIframe = BY.cookieManager.getInnerDataHostCookie();
                            }
                            BY.postMessage.toParentWindow("*", "logout", { iframeId: currentIframeId, innerCookieToUpdateInAllIframe: cookieToUpdateInAllIframe });

                            // customer service app doesn't have a stream id in the location.href property, so we concatinate the stream id to preform reload
                            if (typeof (CS) != "undefined" && window.location.href.slice(-1) == "/") {
                                window.location = window.location.href + "/" + BY.streamId;
                            }
                            else {
                                location.reload();
                            }
                        }
                    });
                });
            };

            if (objectId && streamId) {
                currObjectId = objectId;
                currStreamId = streamId;
            }

            //trigger window unload functions events
            BY._onWindowUnload(function () {
                if (BY.streamId && BY.objectId && BY.notifyUser.isConnected) {
                    BY.notifyUser.connect(currStreamId, currObjectId, false, callback);
                } else {
                    callback();
                }
            });
        },

        _toggleClass: function (jQueryElm, className) {
            var strClasses = jQueryElm.attr("class");
            if (strClasses && strClasses.length > 0) {
                var arrClasses = strClasses.split(" ");
                for (var i = 0; i < arrClasses.length; i++) {
                    if (arrClasses[i] == className) {
                        jQueryElm[0].setAttribute("class", strClasses.replace("cb_clicked", ""));
                        return;
                    }
                }
            }
            jQueryElm[0].setAttribute("class", strClasses + " cb_clicked");
        },

        addClassToBody: function (cssClassText) {
            if (BY.isCssStyleAdded == undefined) {
                BY.isCssStyleAdded = true;
                var style = document.createElement('style');
                style.type = 'text/css';
                style.id = 'BY_classes';
                style.innerHTML = '\n\r' + cssClassText;
                document.getElementsByTagName('head')[0].appendChild(style);
            } else {
                document.getElementById("BY_classes").innerHTML += '\n\r' + cssClassText;
            }
        },

        ieVersion: function () {
            try {
                var ua = window.navigator.userAgent;
                var msie = ua.indexOf("MSIE ");
                if (msie > 0) {
                    // IE 10 or older => return version number
                    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
                }

                var trident = ua.indexOf('Trident/');
                if (trident > 0) {
                    // IE 11 => return version number
                    var rv = ua.indexOf('rv:');
                    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
                }
                var edge = ua.indexOf('Edge/');
                if (edge > 0) {
                    // Edge (IE 12+) => return version number
                    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
                }
                // other browser
                return false;
            } catch (ex) {
                console.log(ex);
                return false;
            }
        },

        // this function allows customers to create events from the hosts sites, do not remove it.
        write_gaqEvent: function (type, instanceId) {
            var instance = BY.instances[instanceId];
            try {
                switch (type.toString()) {
                    case "preButtonClick":
                        {
                            BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Pre button click', 'OK');
                            console.log(instance.urlUniqueName, "Pre button click")
                            break;
                        }
                    case "close":
                        {
                            BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Close', 'OK');
                            console.log(instance.urlUniqueName, "Close")
                            break;
                        }
                    case "minimize":
                        {
                            BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Minimize', 'OK');
                            console.log(instance.urlUniqueName, "Minimize")
                            break;
                        }
                }

            } catch (ex) {
                console.log(ex);
            }
        },

        //Support for users that already used old messenger install
        messenger: function (options, callback) {
            BY.chat(options, callback)
        },

        _getAppInstanceRunId: function (appInstanceId) {
            var instanceId = appInstanceId;
            if (BY_isNullOrEmpty(BY[appInstanceId])) {
                BY[appInstanceId] = 0;
                return "";
            }
            else {
                return "_" + ++BY[appInstanceId];
            }
        },

        chat: function (options, onChatInitializedCallback) {
            var that = this;
            BY.initJquery(options, function () {
                var instance = {};
                instance.urlUniqueName = 'chat';
                var appScriptRunId = BY._getAppInstanceRunId("ifrChat");

                instance.id = instance.iframeId = "ifrChat" + appScriptRunId;
                instance.panelIdToHide = "divPreChatButton" + appScriptRunId;
                instance.panelIdToShow = "cb_divChatIframe" + appScriptRunId;
                instance.panelClass = "cb_divChatIframe";
                instance.iframeName = "by_iframe_chat" + appScriptRunId;
                instance.supportConfirmClose = true;
                instance.closeIconsColor = "#fff";
                instance.keepAppOpen = true;
                instance.launcherType = "icon";
                instance.icon = "commbox";
                instance.supportNotificationBadge = true;
                instance.onclickFunction = function () {
                    BY._slideOutPreButton(instance.id);
                }
                if (options.changeNode) {
                    instance.changeNode = options.changeNode;
                }
                if (options.subStreamId && options.subStreamId > 0) {
                    BY.subStreamId = options.subStreamId;
                }

                if (options.language) {
                    // language(for messages/ accessability...) override by install code
                    instance.language = options.language;
                    BY.defaultLanguage = options.language;
                }

                if (options.supportConfirmClose != null && options.supportConfirmClose != undefined) {
                    //override close confirm window
                    instance.supportConfirmClose = options.supportConfirmClose;
                }
                instance.isStateSupported = function (state) {
                    return (BY.launcher && BY.launcher.forceHideOfChatPreButton && BY.launcher.forceHideOfChatPreButton == "0")
                }

                //defining the method which shows the notification messages when the chat is closed
                instance.showNotifications = function (messageContent) {
                    // new child has been added, notify the user
                    var unreadMessages = JSON.parse(localStorage.getItem("unread_messages_" + instance.streamId));
                    if (unreadMessages != null && unreadMessages.length > 0) {
                        var preButton = jQuery('#btnImgPreButton_' + instance.id);
                        if (instance.supportNotificationBadge && preButton.find('.cb_nodification_badge').length == 0) {
                            preButton.append('<span class="cb_nodification_badge cb_bounce" data-messages="' + unreadMessages.length + '" data-dock="' + instance.dock + '"></span>');
                        } else {
                            var elm = preButton.find('.cb_nodification_badge');
                            jQuery(elm).replaceWith(jQuery(elm).clone(true).attr("data-messages", unreadMessages.length).show());
                        }

                        // if the chat window isn't open, a message preview will be shown above tha launcher
                        if (messageContent && messageContent.length > 0) {
                            if (!instance.isOpen) {
                                if (messageContent && messageContent != "") {
                                    if (!Array.isArray(instance.bubbleMessages)) {
                                        instance.bubbleMessages = [];
                                    }
                                    instance.bubbleMessagesInterval = 0;
                                    instance.bubbleMessages.push(messageContent);
                                    //jQuery('.divPreBtnMessage').remove();
                                    var message = BY.bubbles.renderBubbleMessages(instance);
                                    jQuery('#cb_divLauncherMessages_' + instance.id).append(message);
                                    instance.bubbleMessages = [];
                                }
                            }
                        }
                    }
                };

                //defining the method which runs the corresponding case for the chat instance on message-event by the specified action name and content
                //REMARK:  the cases in this method are only for the chat app
                instance.onMessageEvent = function (actionName, content) {
                    var panel = jQuery('#' + instance.panelIdToShow);

                    switch (actionName) {
                        case "logout":
                            //handle iframe logout, for now we reload all iframe to update cookies
                            if (content && content.iframeId) {
                                jQuery.each(BY.instances, function () {
                                    if (!BY_isNullOrEmpty(content.iframeId) && !BY_isNullOrEmpty(this.iframeId)) {
                                        if (this.iframeId != content.iframeId && content && content.innerCookieToUpdateInAllIframe) {
                                            var appIframe = jQuery("#" + this.iframeId);
                                            if (appIframe.length > 0 && appIframe[0] && appIframe[0].contentWindow) {
                                                //&& appIframe[0].contentWindow.BY && appIframe[0].contentWindow.BY.cookieManager && appIframe[0].contentWindow.BY.cookieManager.overrideInnerDataHostCookie) {
                                                //update cookie to disconnected cookie
                                                //initLoadedCookiesOnIFrame
                                                BY.postMessage.toIFrame(this.iframeId, this.iframeUrl, "overrideInnerDataHostCookie", {});
                                            }
                                        }
                                    }
                                });
                            }

                            break;

                        case "max":
                            // support open image from chat- full screen
                            panel.find('.cb_divChatIframe').addClass('cb_allScreen');
                            panel.find('.cb_imgClose').hide();
                            break

                        case "min":
                            // close the image
                            panel.find('.cb_divChatIframe').removeClass('cb_allScreen');
                            panel.find('.cb_imgClose').show();
                            break;
                        case "modalOpen": {
                            panel.find('.cb_top_buttons').hide();
                            break;
                        }
                        case "modalClose": {
                            panel.find('.cb_top_buttons').show();
                            break;
                        }
                        case "clientStorageUpdate":
                            if (content.updateStorage) {
                                var stateCookieValue = BY.cookieManager.getStateCookieValue(BY.streamId);
                                if (stateCookieValue && stateCookieValue != "" && content.streamId) {
                                    BY.cookieManager.setStateCookie(content.streamId, stateCookieValue, (1 / 24 / 12));
                                    BY.cookieManager.setStateCookie(BY.streamId, "");
                                }

                                var unreadMessages = JSON.parse(localStorage.getItem("unread_messages_" + BY.streamId) || "[]");
                                if ((Array.isArray(unreadMessages))) {
                                    localStorage.setItem("unread_messages_" + content.streamId, JSON.stringify(unreadMessages));
                                    localStorage.removeItem("unread_messages_" + BY.streamId);
                                }
                            }
                            instance.streamId = BY.streamId = content.streamId;
                            break;

                        default:
                            break;
                    }
                };

                //initializing the chat instance, adjusting the css classes in the body and registering to the message-event handler before executing the callback method
                instance.appFunction = that;
                that._appBaseInit(options, instance, function () {
                    //adjusting the css classes in the body
                    BY.addClassToBody(".cb_allScreen {\n height:100vh !important; width:100vw !important;margin:0 !important;max-width:1000px !important;\n}");
                    BY.addClassToBody(".cb_divChatIframe .cb_imgClose span:before,\n" +
                        ".cb_divChatIframe .btnUnConfirmClose span:before,\n" +
                        ".cb_divChatIframe .btnConfirmClose span:before\n" +
                        "{\n content:none !important; \n}");
                    BY.addClassToBody(".close-launcher { color: " + (instance.closeIconsColor ? instance.closeIconsColor : "#fff") + " !important;}");

                    //registering to the message-event handler with the chat instance
                    BY.cookieManager.registerWindowMessagesEvent(instance);

                    //executing the callback method if it exists
                    if (onChatInitializedCallback) {
                        onChatInitializedCallback();
                    }
                });
            });

        },

        contactUs: function (options, onContactUsInitializedCallback) {
            var that = this;
            BY.initJquery(options, function () {
                var instance = {};
                instance.urlUniqueName = 'contact_us';
                var appScriptRunId = BY._getAppInstanceRunId("ifrContactUs");
                instance.id = instance.iframeId = "ifrContactUs" + appScriptRunId;
                instance.panelIdToHide = "divPreContactUsButton" + appScriptRunId;
                instance.panelIdToShow = "divContactUsIframe" + appScriptRunId;
                instance.panelClass = "cb_divContactUsIframe";
                instance.iframeName = "by_iframe";
                instance.supportConfirmClose = false;
                instance.closeIconsColor = "#fff";
                instance.launcherType = "icon";
                instance.icon = "commbox";
                instance.keepAppOpen = false;
                instance.onclickFunction = function () {
                    BY._slideOutPreButton(instance.id);
                }
                if (options.defaultModuleId) {
                    instance.defaultModuleId = options.defaultModuleId;
                }

                if (options.language) {
                    // language(for messages/ accessability...) override by install code
                    instance.language = options.language;
                    BY.defaultLanguage = options.language;
                }

                instance.isStateSupported = function (state) {
                    return (state != '0');
                }

                instance.appFunction = that;
                that._appBaseInit(options, instance, function () {
                    //registering to the message-event handler with the contactUs instance
                    BY.cookieManager.registerWindowMessagesEvent(instance);

                    //executing the callback method if it exists
                    if (onContactUsInitializedCallback) {
                        onContactUsInitializedCallback();
                    }
                });
            });
        },
        getContactUsSelectedMode: function (url) {
            if (url.indexOf("#mode=chat") > -1) {
                return "chat";
            }
            if (url.indexOf("#mode=sms") > -1) {
                return "sms";
            }
            if (url.indexOf("#mode=email") > -1) {
                return "mail";
            }
            if (url.indexOf("#mode=facebook") > -1) {
                return "facebook";
            }
            if (url.indexOf("#mode=whatsapp") > -1) {
                return "whatsapp";
            }

            return null;
        },
        navigator: function (options, onNavigatorInitializedCallback) {
            var that = this;
            BY.initJquery(options, function () {
                var instance = {};
                var instance = BY.navigator;
                instance.urlUniqueName = 'interactive_navigator';
                var appScriptRunId = BY._getAppInstanceRunId("ifrInteractiveNavigator");
                instance.id = instance.iframeId = "ifrInteractiveNavigator" + appScriptRunId;
                instance.panelIdToHide = "divPreInteractiveNavigatorButton" + appScriptRunId;
                instance.panelIdToShow = "divInteractiveNavigatorIframe" + appScriptRunId;
                instance.panelClass = "cb_divInteractiveNavigatorIframe";
                instance.iframeName = "by_iframe_navigator";
                instance.closeIconsColor = "#fff";
                instance.keepAppOpen = false;
                instance.launcherType = "icon";
                instance.icon = "commbox";
                instance.preButtonAriaLabel = "Navigator Application";
                instance.vAlign = "middle";
                instance.supportConfirmClose = false;
                instance.h = "100%";
                instance.isStateSupported = function (state) {
                    return (state && state != '0');
                }
                instance.onclickFunction = function () {
                    // reset navigator on luancher button click
                    BY.show({
                        appName: 'navigator', nodeId: 'node_0', appId: instance.id
                    });
                }

                if (options.language) {
                    // language(for messages/ accessability...) override by install code
                    instance.language = options.language;
                    BY.defaultLanguage = options.language;
                }

                instance.appFunction = that;
                that._appBaseInit(options, instance, function () {
                    //registering to the message-event handler with the navigator instance
                    BY.cookieManager.registerWindowMessagesEvent(instance);

                    //executing the callback method if it exists
                    if (onNavigatorInitializedCallback) {
                        onNavigatorInitializedCallback();
                    }
                });
            });
        },

        dataEntry: {
            DROPDOWN_UNIQUE_SEPARATOR: "^dropdown_seperator^",
            OPTION_KEY_VALUE_SEPARATOR: "^value_separator^",
            renderHtmlForm: function (jsonFields, elm, attributes) {
                var html = "";
                var that = this;
                jQuery.each(jsonFields, function (i, item) {
                    var inputOptions = {};
                    var v = {};
                    v.settingName = item.Name;
                    v.validation = item.Validation;
                    v.type = item.Type;
                    v.dataLabel = item.Label;
                    v.dataInputCss = "userField BY_input theme_main_border_secondary_color"
                    v.dataLabelCss = "formLabel BY_label divAppFormInputField";
                    v.dataLabelUniqueName = item.Name;
                    v.isMandatory = item.IsMandatory;
                    if ((item.Type == "checkbox" || item.Type == "bool") && (item.DefaultValue === "" || item.DefaultValue == null || item.DefaultValue == undefined)) {
                        item.DefaultValue = "0";
                    }
                    if (item.Type == "dropdown" || item.Type == "combobox") {
                        v.dataWithDefaultValue = true;
                        inputOptions.validationDelimeter = that.DROPDOWN_UNIQUE_SEPARATOR;
                    }
                    v.defaultValue = item.DefaultValue;
                    html += addFormInput((item.DefaultValue != null && item.DefaultValue != undefined && item.DefaultValue !== "") ? item.DefaultValue : "", null, v, attributes, inputOptions);
                });
                jQuery(elm).append(html);
                BY_FormInput.renderAll();
            },

            renderHtmlButton: function (obj) {
                if (!obj.title) {
                    obj.title = "";
                }
                var tabIndex = (obj.tabIndex ? " tabindex=\"" + obj.tabIndex : "");

                jQuery(".dataEntryButton").remove();
                obj.wrapperElm.append(
                    "<div class='dataEntryButton'>" +
                    "<button type=\"button\" id=\"" + obj.id + "\" class=\"pull-right inputButton\" " + tabIndex + "\" name=\"'" + obj.title + " \" title=\"" + obj.title + "\" aria-label=\"" + obj.title + "\">" +
                    "<span class=\"mainThemeColor icon-circle-" + (obj.direction == "ltr" ? "right" : "left") + "\"></span>" +
                    "</button>" +
                    "</div>"
                );
                obj.wrapperElm.find("button.inputButton").click(function () {
                    eval(obj.onClick);
                });
            },

            getContentFields: function (options) {
                var that = this;
                var dataEntryInputsWrapperElements = options.dataEntryInputsWrapperElements;
                var dataEntrySingleElement = options.dataEntrySingleElement;
                var seperator = "=";

                var contentFields = [];
                // todo: send form input if only 1 data entry

                var isFormValid = true;
                if (dataEntryInputsWrapperElements.length != 0) {
                    jQuery.each(dataEntryInputsWrapperElements, function () {
                        if (!jQuery(this).data().validate()) {
                            isFormValid = false;
                        }

                        var value = jQuery(this).data().getValue();
                        if (value != null && value != undefined) {
                            if (typeof (value) == "object") {
                                value = JSON.stringify(value);
                            }
                            else {
                                value = value.toString();
                            }
                        }

                        var labelValues = "";

                        if (jQuery(this).data().type == "multiselect" || jQuery(this).data().type == "dropdown" || jQuery(this).data().type == "combobox") {
                            var valStr = jQuery(this).data().getValue();
                            var values = [valStr];
                            if (jQuery(this).data().type != "dropdown") {
                                values = jQuery(this).data().getValue().split(",");
                            }

                            var validationSeperated;
                            if (jQuery(this).data().type == "dropdown" || jQuery(this).data().type == "combobox") {
                                validationSeperated = jQuery(this).data().validation.split(that.DROPDOWN_UNIQUE_SEPARATOR);
                            } else {
                                validationSeperated = jQuery(this).data().validation.split("(,)");
                            }
                            if (validationSeperated.length > 0 && validationSeperated[0].indexOf(that.OPTION_KEY_VALUE_SEPARATOR) != -1) {
                                seperator = that.OPTION_KEY_VALUE_SEPARATOR;
                            }


                            for (var i = 0; i < values.length; i++) {
                                for (var x = 0; x < validationSeperated.length; x++) {
                                    var valuePair = validationSeperated[x].split(seperator);
                                    if (values[i] == valuePair[0]) {
                                        labelValues += valuePair[1] + ", ";
                                    }
                                }
                            }

                            labelValues = labelValues.substring(0, labelValues.length - 2);
                        }

                        contentFields.push({
                            "uniqueName": jQuery(this).data().labelUniquename,
                            "value": value,
                            "label": jQuery(this).data().label,
                            "type": jQuery(this).data().type,
                            "labelValues": labelValues
                        });
                    });

                } else {

                    if (dataEntrySingleElement != undefined && dataEntrySingleElement != null) {
                        jQuery.each(dataEntrySingleElement, function () {
                            if (!jQuery(this).data().validate()) {
                                isFormValid = false;
                            }
                            if (jQuery(this).data().labelUniquename == null || jQuery(this).data().labelUniquename == undefined) {

                                var labelValues = "";

                                if (jQuery(this).data().type == "multiselect" || jQuery(this).data().type == "dropdown" || jQuery(this).data().type == "combobox") {
                                    var values = jQuery(this).data().getValue().split(",");

                                    var validationSeperated;
                                    if (jQuery(this).data().type == "dropdown" || jQuery(this).data().type == "combobox") {
                                        validationSeperated = jQuery(this).data().validation.split(",");
                                    } else {
                                        validationSeperated = jQuery(this).data().validation.split("(,)");
                                    }

                                    if (validationSeperated.length > 0 && validationSeperated[0].indexOf(that.OPTION_KEY_VALUE_SEPARATOR) != -1) {
                                        seperator = that.OPTION_KEY_VALUE_SEPARATOR;
                                    }

                                    if (validationSeperated.length > 0 && validationSeperated[0].indexOf(that.OPTION_KEY_VALUE_SEPARATOR) != -1) {
                                        seperator = that.OPTION_KEY_VALUE_SEPARATOR;
                                    }

                                    for (var i = 0; i < values.length; i++) {
                                        for (var x = 0; x < validationSeperated.length; x++) {
                                            var valuePair = validationSeperated[x].split(seperator);
                                            if (values[i] == valuePair[0]) {
                                                labelValues += valuePair[1] + ", ";
                                            }
                                        }
                                    }

                                    labelValues = labelValues.substring(0, labelValues.length - 2);
                                }

                                contentFields.push({
                                    "uniqueName": jQuery(this).data().options.attributes.dataName,
                                    "value": jQuery(this).data().getValue(),
                                    "label": jQuery(this).data().options.attributes.dataLabel,
                                    "type": jQuery(this).data().type,
                                    "labelValues": labelValues
                                });
                            }
                        });
                    }
                }

                if (isFormValid == false) {
                    return [];
                } else {
                    return contentFields;
                }
            }
        },



        getInsatnceIframePrefixByAppName: function (appName) {
            switch (appName) {
                case "chat":
                    appName = "ifrChat";
                    break;
                case "navigator":
                    appName = "ifrInteractiveNavigator";
                    break;
                case "contactUs":
                    appName = "ifrContactUs";
                    break;
            }
            return appName;
        },

        getModuleNameByAppName: function (appName) {
            switch (appName) {
                case "chat":
                    appName = "chat";
                    break;
                case "navigator":
                    appName = "interactive_navigator";
                    break;
                case "contactUs":
                    appName = "contact_us";
                    break;
            }
            return appName;
        },

        setStreamId: function (instanceName, streamId, callback, subStreamId, instanceId) {
            //instanceName can be 'navigator', 'chat', 'contactUs'
            if (!instanceId) {
                instanceId = BY.getInsatnceIframePrefixByAppName(instanceName);
            }
            var instance = BY.instances[instanceId];
            if (subStreamId != undefined && subStreamId != null && subStreamId != "") {
                BY.options.subStreamId = subStreamId;
            }

            //if we move to other app we should load the new settings of the app
            if ((instance == undefined || BY._streamState == "0") && BY.options != "") {
                BY.options.streamId = streamId;
                switch (instanceName) {
                    case "chat":
                        instance.appFunction(BY.options, function () {
                            s1();
                        });
                        break;
                    case "navigator":
                        instance.appFunction(BY.options, function () {
                            s1();
                        });
                        break;
                    case "contactUs":
                        instance.appFunction(BY.options, function () {
                            s1();
                        });
                        break;
                }
            }
            else {
                s1();
            }

            function s1() {
                instance = BY.instances[instanceId];
                instance.iframeUrl = instance.iframeUrl.replace(instance.streamId, streamId);
                instance.streamId = streamId;
                BY.streamId = streamId;
                if (callback) {
                    callback(instance);
                }
            }

            instance = BY.instances[instanceId];

            jQuery("#" + instance.iframeId).attr("src", instance.iframeUrl);
        },

        bubbles: {
            hasStaticMessages: false,
            fireMessage: false,
            init: function (instance) {
                if (instance.bubbleMessagesInterval) {
                    if (instance.showTimeout != null && instance.showTimeout != undefined && instance.showTimeout > 0) {
                        if (instance.bubbleMessagesInterval < instance.showTimeout) {
                            instance.bubbleMessagesInterval = instance.showTimeout + 100;
                        }
                    }
                    if (instance.bubbleMessagesInterval < 2000) {
                        instance.bubbleMessagesInterval = 2000;
                    }
                }
            },
            renderBubbleMessages: function (instance) {
                var dock = instance.dock;
                var vAlign = instance.vAlign;

                var that = this;
                if (instance.bubbleMessages == null || instance.bubbleMessages == undefined || instance.bubbleMessages.length == 0) {
                    return "";
                }

                var html = "";
                if (jQuery('#cb_divLauncherMessages_' + instance.id).length == 0) {
                    jQuery('#' + instance.panelIdToHide).append("<div class='cb_divLauncherMessages' id='cb_divLauncherMessages_" + instance.id + "' ></div>");
                }

                //support the old version of bubble messages that based on the embed code and sent as an Array
                var bubbleMessages = (instance.bubbleMessages.constructor === Array ? instance.bubbleMessages : instance.bubbleMessages.split("|^SEPERATOR^|"));
                for (var i = 0; i < bubbleMessages.length; i++) {
                    html += "<div class='divPreBtnMessage divPreBtnMessage_" + instance.id + " divPreBtnMessage_" + instance.id + "_" + i + " cb_preview_messages' style='display:none;'>" +
                         bubbleMessages[i] +
                        "</div>" +
                        "</div>";
                }
                jQuery("#cb_divLauncherMessages_" + instance.id).append(html);
                if (instance.bubbleMessagesInterval == undefined || instance.bubbleMessagesInterval == null || instance.bubbleMessagesInterval.toString().length == 0) {
                    instance.bubbleMessagesInterval = 7000;
                }
                var index = 0;
                var preButtonImgWidth = null;
                var timeoutShowMessages = null;

                function showMessage() {
                    if (instance.isOpen)
                        return;

                    if (index == 0) {
                        var side = (dock == "left" ? "left" : "right");
                        jQuery('#cb_divLauncherMessages_' + instance.id).css(side, "2em").css("bottom", (jQuery('#' + instance.panelIdToHide).outerHeight() + 30) + "px");
                        //style='" + (dock == "left" ? "left" : "right") + ":2em;bottom:" + (jQuery('#' + instance.panelIdToHide).outerHeight() + 30) + "px'
                    }

                    var divPreBtnMessage = jQuery(".divPreBtnMessage_" + instance.id + "_" + index);
                    if (divPreBtnMessage.length == 0)
                        return;
                    divPreBtnMessage.fadeIn('200', function () {
                        divPreBtnMessage[0].addEventListener("webkitAnimationEnd", function () {
                            this.remove();
                        });
                        divPreBtnMessage[0].addEventListener("animationend", function () {
                            this.remove();
                        });
                    });

                    index++;
                    if (index > bubbleMessages.length) {
                        clearTimeout(timeoutShowMessages);
                        timeoutShowMessages = null;
                        return;
                    } else {
                        //play sound message
                        if (instance.bubbleMessagesSound) {
                            var playPromise = document.getElementById("audioNotification").play();
                            // In browsers that don’t yet support this functionality,
                            // playPromise won’t be defined.
                            if (playPromise !== undefined) {
                                playPromise.then(function () {
                                    // Automatic playback started!
                                }).catch(function (error) {
                                    // Automatic playback failed.
                                    // Show a UI element to let the user manually start playback.
                                });
                            }
                        }

                        setTimeout(function () {
                            //hide message
                            //jQuery(".divPreBtnMessage_" + instance.id).fadeOut();

                            timeoutShowMessages = setTimeout(function () {
                                showMessage();
                            }, instance.bubbleMessagesInterval);

                        }, instance.bubbleMessagesInterval + (bubbleMessages[index - 1].length * 100));
                    }
                }

                timeoutShowMessages = setTimeout(function () {
                    showMessage();
                }, instance.bubbleMessagesInterval);

                return;
            },
            stop: function (instanceId) {
                var instance = BY.instances[instanceId];
                jQuery('.divPreBtnMessage_' + instance.id).remove();
            }
        },

        // set accessibility settings to iframe and childs iframes
        toggleAccessibilityView: function (childIframe, childMode) {
            var accessibilityIcon = jQuery("#accessibilityIcon");
            var accessibilityView = childIframe == undefined ? jQuery(".accessibilityView") : jQuery(childIframe).contents().find(".accessibilityView");
            var body = childIframe == undefined ? jQuery("body") : jQuery(childIframe).contents().find("body");

            if ((accessibilityIcon.hasClass("accessibilityIconActive") && childMode == undefined) || childMode == "inactive") {
                body.removeClass("accessibilityMode");
                accessibilityView.hide();
                if (childIframe == undefined) {// accessibility icon visible only in main iframe
                    accessibilityIcon.removeClass("accessibilityIconActive").attr("aria-label", CB.text("1|Form Labels|Accassibility view")).attr("title", CB.text("1|Form Labels|Accassibility view"));
                }
                this.renderTabIndex(true);

                var iframes = childIframe == undefined ? jQuery("[name=by_iframe]") : jQuery(childIframe).contents().find("iframe");
                for (var i = 0; i < iframes.length; i++) {
                    BY.toggleAccessibilityView(iframes[i], "inactive");
                }
            } else if ((!accessibilityIcon.hasClass("accessibilityIconActive") && childMode == undefined) || childMode == "active") {
                body.addClass("accessibilityMode");
                accessibilityView.show();
                if (jQuery('#imgModule_10').hasClass('selected')) {
                    jQuery('label[for="ddlStreams"]').hide();
                }
                if (childIframe == undefined) {// accessibility icon visible only in main iframe
                    accessibilityIcon.addClass("accessibilityIconActive").attr("aria-label", CB.text("1|Form Labels|Cancel accessibility view")).attr("title", CB.text("1|Form Labels|Cancel accessibility view"));
                }
                this.renderTabIndex(false);

                var iframes = childIframe == undefined ? jQuery("[name=by_iframe]") : jQuery(childIframe).contents().find("iframe");
                for (var i = 0; i < iframes.length; i++) {
                    BY.toggleAccessibilityView(iframes[i], "active");
                }
            }
        },

        renderTabIndex: function (accessibilityModeOff) {
            if (accessibilityModeOff) {
                var elementArr = jQuery("body").find(".accessibilityTabIndex");
                if (elementArr != null && elementArr.length > 0) {
                    jQuery.each(elementArr, function (index, value) {
                        jQuery(value).removeAttr("tabindex");
                    });
                }
            } else {
                var elementArr = jQuery("body").find(".accessibilityTabIndex");
                if (elementArr != null && elementArr.length > 0) {
                    var tabindex = 2000;
                    jQuery.each(elementArr, function (index, value) {
                        jQuery(value).attr("tabindex", tabindex++);
                    });
                }
            }
        },

        isStreamActive: function (streamId, callback, statusId) {
            var statusIdParam = statusId ? "?osid=" + statusId : "";
            var requestUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + "state/" + streamId + statusIdParam;
            BY.basic_ajax({
                url: requestUrl,
                async: true,
                type: 'get',
                data: {},
                cache: false,
                dataType: 'jsonp',
                crossDomain: true,
                success: function (data) {
                    if (callback) {
                        callback(data);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) { }
            });
        },

        getForwardButtonData: function (streamId, moduleId, supportedStateIds, callback) {
            BY.isStreamActive(streamId, function (data) {
                if (data && data.state != null && data.state != undefined && supportedStateIds.indexOf(data.state.toString()) > -1) {
                    // stream is active!
                    //allow app button
                    callback({
                        state: data.state,
                        showButton: true
                    });
                } else {

                    //stream is not active

                    callback({
                        state: data.state,
                        showButton: false
                    });
                }
            });
        },

        initLauncher: function (streamId, callback) {
            //REMARK:  using 'jQuery.ajax' since there is no access to BY_app in 'app.js' from the host-site
            var writeAggr = false;
            if (!BY.cookieManager.getLauncherAggrRequestCookie(streamId)) {
                writeAggr = true;
                // save in cookie for 15 minutes
                BY.cookieManager.setLauncherAggrRequestCookie(streamId);
            }

            var requestUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + "launcher/" + streamId + "?writeAggr=" + (writeAggr ? 1 : 0);
            BY.basic_ajax({
                url: requestUrl,
                async: true,
                type: 'get',
                data: {},
                cache: false,
                dataType: 'jsonp',
                crossDomain: true,
                success: function (data) {
                    BY.launcher = data;
                    if (callback) {
                        callback(data);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("err");
                }
            });
        },

        removeHashFromUrl: function (url) {
            return url.split('#')[0];
        },
        getIframeHash: function (iframeUrl, newHashKeyValue, removeCloseWindowStateHash, arrHashToRemove) {
            if (removeCloseWindowStateHash) {
                iframeUrl = iframeUrl.replace("#closeWindowState=waitingForResponse", "").replace("#closeWindowState=cancel", "").replace("#closeWindowState=close", "").replace("#closeWindowState=confirmClose", "");
            }
            if (arrHashToRemove) {
                for (var i = 0; i < arrHashToRemove.length; i++) {
                    iframeUrl = iframeUrl.replace("#" + arrHashToRemove[i], "");
                }
            }
            if (newHashKeyValue) {
                //remove old hash and add new to prevent duplicate hash
                return iframeUrl.replace("#" + newHashKeyValue, "") + "#" + newHashKeyValue;
            }
            else {
                return iframeUrl;
            }
        },

        closeAppFrame: function (state, instanceId, cookieState) {
            var instance = BY.instances[instanceId];
            if (state == "cancel") {
                var panel = jQuery('#' + instance.panelIdToShow);
                panel.find(".cb_overlayConfirmClose").hide();
                return;
            }

            var that = this;
            var _onCloseIframe = function () {
                var panelIdToShow = instance.panelIdToShow;
                var panel;
                if (panelIdToShow) {
                    panel = jQuery('#' + panelIdToShow);
                    // add class for animation
                    if (instance.isMiddleLauncher || instance.initialState == "hidden") {
                        panel.fadeTo(200, 0, function () {
                            panel.hide();
                            that._toggleCloseLauncher(instance, true);
                        });
                    }
                    else {
                        if (BY.ieVersion()) {
                            panel.hide();
                        }
                        panel.removeClass('commbox_app');
                        setTimeout(function () {
                            panel.hide();
                        }, 100);
                        that._toggleCloseLauncher(instance, false);
                    }
                }

                instance.isOpen = false;
                instance.isBusy = false;
                that._slideInPreButton(instance.id, true, cookieState);
                panel.find(".cb_overlayConfirmClose").hide();
                jQuery("#btnImgPreButton" + instance.id + "").trigger('focus');
                if (BY_isMobile() && jQuery("meta[name='viewport']").length > 0) {
                    jQuery("body").removeClass("BYOpenFullScreen");
                }
            }
            if (state == "close") {
                // onclick close is overrided by app.
                var Iframe = jQuery("#" + instance.iframeId);

                //logout from confirmation window : 2=Exit and log off
                if (BY.launcher.settings.show_exit_chat_confirmation == "2") {
                    Iframe.attr('src', BY.getIframeHash(Iframe.attr('src'), "function=logout", false, []));
                }
                // add to iframe url paramter #closeWindowState=close    
                Iframe.attr('src', BY.getIframeHash(Iframe.attr('src'), "closeWindowState=close", true, []));
                setTimeout(function () {
                    _onCloseIframe();
                }, 300);
            } else if (state == "minimize") {
                _onCloseIframe();
            }
        },

        //get system userId and insert/update user
        getSetUser: function (callback, user, loginType) {
            BY.ajaxPost({
                url: '/apjax.axd',
                async: true,
                type: 'POST',
                dataType: 'json',
                data: {
                    ac: 5,
                    sid: BY.streamId,
                    si: user.streamProviderId,
                    at: user.accessToken,
                    fname: user.firstName,
                    lname: user.lastName,
                    streamType: user.streamProviderType,
                    loginType: loginType //1 facebookLogin, 2 getLoginStatus
                },
                success: function (userRes) {
                    if (!userRes.error) {
                        user.id = userRes.id;
                        user.firstName = userRes.firstName;
                        user.lastName = userRes.lastName;
                        user.isConnected = userRes.isConnected;
                        if (userRes.phone && userRes.phone.length > 4) {
                            user.phone = userRes.phone;
                        }
                        if (userRes.email && userRes.email.length > 3) {
                            user.email = userRes.email;
                        }
                        callback(user);
                    }
                },
                error: function (status) {
                    callback({
                        status: "unsupported",
                        user: null
                    });
                }
            });
        },

        notifyUser: {
            isConnected: true,
            isInitDisconectEvents: false,
            startText: null,
            //init events to know when user disconnect from app
            init: function (streamId, objectId) {
                BY.objectId = objectId;
                BY.streamId = streamId;

                //REMARK:  using the specified 'onUserDisconnectedCallback' to synchronize between the actions when logging-out
                var onDisconnectUser = function (onUserDisconnectedCallback) {
                    //disconnecting if this user is connected.
                    if (BY.notifyUser.isConnected) {
                        BY.notifyUser.connect(streamId, objectId, false, onUserDisconnectedCallback);
                    }
                    else if (onUserDisconnectedCallback) {
                        onUserDisconnectedCallback();
                    }
                }

                if (BY.notifyUser.isInitDisconectEvents == false) {
                    BY.notifyUser.isInitDisconectEvents = true;

                    //user close window/tab/refresh
                    BY.registerToWindowUnloadEvent(onDisconnectUser);

                    var intervalHasFocus = null;
                    try {
                        if (BY_isMobile()) {
                            intervalHasFocus = setInterval(function () {
                                if (document.hasFocus()) {
                                    if (BY.notifyUser.isConnected != true) {
                                        BY.notifyUser.connect(streamId, objectId, true);
                                    }
                                } else if (BY.notifyUser.isConnected == true) {
                                    if (typeof BY_WebRTC === "undefined") {
                                        onDisconnectUser();
                                    }
                                }
                            }, 3000);
                        }
                    } catch (ex) {
                        clearInterval(intervalHasFocus);
                        intervalHasFocus = null;
                        console.log(ex);
                    }

                }
            },

            connect: function (streamId, objectId, isConnected, callback) {
                BY.notifyUser.isConnected = isConnected;
                BY.ajaxPost({
                    url: '/apjax.axd',
                    async: true,
                    cache: false,
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        ac: 7,
                        sid: streamId,
                        oid: objectId,
                        ic: isConnected
                    },
                    success: function (data) {
                        if (callback) {
                            callback();
                        }
                    },
                    error: function (data) {

                    }
                });
            },

            unregisterRealtimeEvents: function (objectId) {
                nowManager.unregisterGroupEvent({
                    groupType: 'object',
                    groupId: objectId,
                    eventType: 'typingMessage'
                });
            },

            onTypingMessage: function (textarea, streamId, objectId) {
                if (BY.notifyUser.startText == null) {
                    BY.notifyUser.startText = textarea.attr("placeholder");
                }

                nowManager.registerGroupEvents([{
                    groupType: 'object',
                    groupId: objectId,
                    eventType: 'typingMessage'
                }], BY.notifyUser.realtimeUserTypingMessage_EventHandler);

                BY.notifyUser.onTypingMessage.timeOutUserTypingMessage = "firstTime";

                var _onMessageTyped = function () {
                    var includeParticipants = false;
                    if (typeof isConversationIncludeExternalParticipants !== 'undefined' && isConversationIncludeExternalParticipants) {
                        includeParticipants = (typeof isConversationIncludeExternalParticipants !== 'undefined' && isConversationIncludeExternalParticipants);
                    }

                    BY.ajaxPost({
                        url: '/apjax.axd',
                        async: true,
                        cache: false,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            ac: 8,
                            sid: streamId,
                            oid: objectId,
                            includePrtaicipants: (includeParticipants ? "1" : "0")
                        },
                        success: function (data) {

                        },
                        error: function (data) {

                        }
                    });
                }

                textarea.off('keydown.typingMessage');
                textarea.on('keydown.typingMessage', function () {
                    if (jQuery.trim(jQuery(this).val()) == "" || BY.notifyUser.startText == jQuery(this).val())
                        return;
                    if (BY.notifyUser.onTypingMessage.timeOutUserTypingMessage == "firstTime" || BY.notifyUser.onTypingMessage.timeOutUserTypingMessage == null) {
                        BY.notifyUser.onTypingMessage.timeOutUserTypingMessage = true;
                        setTimeout(function () {
                            BY.notifyUser.onTypingMessage.timeOutUserTypingMessage = null;
                        }, 4000);
                        _onMessageTyped();
                    }
                });
            },

            realtimeUserTypingMessage_EventHandler: function (data) {
                if (data.userId != undefined && data.userId == BY.user.id) {
                    return;
                }

                startUserTyping(jQuery('.divTyping'), function () {
                    jQuery('#div_wave_typing_box').remove();
                    jQuery('.estimated-waiting-time-text').show();
                });
                jQuery('.estimated-waiting-time-text').hide();
                var elem = jQuery('#content');
                if (elem[0].scrollHeight - elem.scrollTop() == Math.round(elem.outerHeight())) {
                    jQuery("#divChatObjectWrapper").data().scrollBottom(500)
                }

                var divMessage = jQuery("#divMessages");
                jQuery("#div_wave_typing_box").remove();
                divMessage.append('<div id="div_wave_typing_box" class="divManagerResponse pull-left divTyping">' +
                    '<div id="wave">' +
                    '<span class="dot"></span>' +
                    '<span class="dot"></span>' +
                    '<span class="dot"></span>' +
                    '</div>' +
                    '</div>');
            }
        },

        realTimePulse: {
            timeoutRealTimeAuthentication: null,
            /* when user send message check if realtime return message */
            start: function (timeout, failedCallback) {
                if (timeout == null || timeout == undefined) {
                    timeout = 5000;
                }
                if (BY.realTimePulse.timeoutRealTimeAuthentication == null) {
                    BY.realTimePulse.timeoutRealTimeAuthentication = setTimeout(function () {
                        BY.realTimePulse.timeoutRealTimeAuthentication = null;

                        if (failedCallback) {
                            failedCallback("realtimeDisconnected");
                        }
                    }, timeout);
                }
            },

            finish: function () {
                clearTimeout(BY.realTimePulse.timeoutRealTimeAuthentication);
                BY.realTimePulse.timeoutRealTimeAuthentication = null;
            }
        },

        Now: {
            init: function (callback) {
                try {
                    nowManager.onConnect.push(function (e) {
                        BY.realTimePulse.finish(500);
                        if (callback) {
                            callback({
                                realTimeCallBack: "realtimeConnected"
                            });
                        }
                    });
                    nowManager.onReconnect.push(function (e) {
                        BY.realTimePulse.finish(500);
                    });
                    nowManager.onDisconnect.push(function () {
                        BY.realTimePulse.start(500);
                        if (callback) {
                            callback({
                                realTimeCallBack: "realtimeDisconnected"
                            });
                        }
                    });
                    nowManager.onError.push(function (e) {
                        BY.realTimePulse.start(500);
                        if (callback) {
                            callback({
                                realTimeCallBack: "realtimeDisconnected"
                            });
                        }
                    });
                    nowManager.onReconnectFailed.push(function () {
                        BY.realTimePulse.start(500);
                        if (callback) {
                            callback({
                                realTimeCallBack: "realtimeDisconnected"
                            });
                        }
                    });

                } catch (ex) {
                    nowManagerLoaded = false;
                    if (callback) {
                        callback({
                            realTimeCallBack: "realtimeDisconnected"
                        });
                    }
                }
            }
        },

        session: {
            cookieName: "",
            arrEvents: [],
            queueWriteTimeOut: null,
            _write: function (isAsync, onWritingCompletedCallback) {
                var onCompletion = function () {
                    if (onWritingCompletedCallback) {
                        onWritingCompletedCallback();
                    }
                };

                if (BY.session.arrEvents.length == 0) {
                    onCompletion();
                    return;
                }

                if (BY.session.sessionStreamId == null || BY.session.sessionStreamId == undefined || jQuery.trim(BY.session.sessionStreamId).length < 5) {
                    // no sessionId break!
                    onCompletion();
                    return;
                }

                // isAsync=false used when we want to write session event and the user closed the window 
                if (isAsync == null || isAsync == undefined) {
                    isAsync = true;
                }

                var requestUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + 'apjax.axd';

                var sessionValue = "";
                if (!this.cookieName) {
                    this.cookieName = "";
                }
                else if (this.cookieName !== "") {
                    sessionValue = BY.cookieManager.getSessionCookieValue(this.cookieName);
                }
                else {
                    sessionValue = "";
                }

                BY.basic_ajax({
                    url: requestUrl,
                    async: isAsync,
                    cache: false,
                    type: 'GET',
                    dataType: 'jsonp',
                    crossDomain: true,
                    data: {
                        ac: 9,
                        sid: BY.streamId,
                        browser_name: BY.getBrowserName(),
                        sessionStreamId: BY.session.sessionStreamId,
                        sessionValue: sessionValue,
                        sessionName: this.cookieName,
                        events: JSON.stringify(BY.session.arrEvents),
                        isMobile: (BY_isMobile() ? 1 : 0)
                    },
                    success: function (data) {
                        BY.session.arrEvents = [];
                        if (data.sessionValue != null && data.sessionValue != "") {
                            BY.cookieManager.setSessionCookie(BY.session.cookieName, data.sessionValue, (1 / 24 / 4)); //(1 / 24 / 4) = 15 minutes in days
                        }
                        onCompletion();
                    },
                    error: function (data) {
                        BY.session.arrEvents = [];
                        onCompletion();
                    }
                });
            },
            addEvent: function (appStreamId, content, label, writeTime, isAsync, onSessionEventAddingCompletedCallback) {
                if (BY.session.sessionStreamId == null || BY.session.sessionStreamId == undefined || jQuery.trim(BY.session.sessionStreamId).length < 5) {
                    // no sessionId break!
                    return;
                }

                if (writeTime == null || writeTime == undefined) {
                    writeTime = 15000;
                }

                function _writeSession(onSessionWritingCompletedCallback) {
                    BY.session.queueWriteTimeOut = null;
                    BY.session._write(isAsync, onSessionWritingCompletedCallback);
                }

                var now = new Date();
                var now_utc = now.getUTCFullYear() + " " + (now.getUTCMonth() + 1) + " " + now.getUTCDate() + " " + now.getUTCHours() + ":" + now.getUTCMinutes() + ":" + now.getUTCSeconds().toString();
                BY.session.arrEvents.push({
                    "streamId": BY.session.sessionStreamId,
                    "appStreamId": appStreamId,
                    "content": content,
                    "label": label,
                    "type": 0,
                    "createdTime": now_utc
                });

                if (writeTime == 0) {
                    _writeSession(onSessionEventAddingCompletedCallback);
                } else if (BY.session.queueWriteTimeOut == null) {
                    BY.session.queueWriteTimeOut = setTimeout(function () {
                        _writeSession(onSessionEventAddingCompletedCallback);
                    }, writeTime);
                }

                //user close window/tab/refresh
                if (BY.session.isOnBeforeUnloadInit == null || BY.session.isOnBeforeUnloadInit == undefined) {
                    BY.session.isOnBeforeUnloadInit = true;
                    // regeister to event that will call(immediately) to write event when user close/refresh window
                    BY.registerToWindowUnloadEvent(_writeSession);
                }
            }
        },

        GetLoaderSVG: function (color) {
            return '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" class="cb_svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 297.6 294.685" style="enable-background:new 0 0 297.6 294.685;" xml:space="preserve"><g class="cb_squere"><polygon class="cb_top" style="fill:#EAEAEA;" points="0,0 151.1,143.257 297.6,0"></polygon><polygon class="cb_bottom" style="fill:#EAEAEA;" points="0,294.685 151.1,143.257 297.6,294.685"></polygon><polygon class="cb_left" style="fill:#AAAAAA;" points="0,0 151.1,143.257 0,294.685 	"></polygon><polygon class="cb_right" style="fill:#AAAAAA;" points="297.6,0 151.1,143.257 297.6,294.685 	"></polygon></g><g class="cb-main-elem"><g class="cb_polykryg"><path class="cb_polykrygone" style="fill:#292F3C;" d="M152.4,145.9c-0.2-10.8-2.2-20.2-3.2-23.3c-10.2-27.2-29.1-42.5-57.8-47c-2.4-0.4-4.8-0.4-7.2-0.5c-1.2,0-1.7,0.2-1.7,1.6c0.1,10.9,0.1,21.8,0,32.6c0,1.8,1.1,1.6,2.1,1.7c11.2,0.8,20.3,5.6,26.9,14.6c8.4,11.5,9.9,24.2,3.8,37.1c-6.1,13-16.7,20-31.1,21c-1.9,0.1-2,0.8-2,2.3c0,10.6,0.1,21.3,0,31.9c0,2.3,0.7,2.6,2.7,2.5c29-1,55.1-20.2,64.5-47.7c3.9-17.2,3-23.5,2.9-26.5"></path><path class="cb_polykrygtwo" style="fill:#292F3C;" d="M149.6,145.9c0.2-10.8,2.2-20.2,3.2-23.3c10.2-27.2,29.1-42.5,57.8-47c2.4-0.4,4.8-0.4,7.2-0.5c1.2,0,1.7,0.2,1.7,1.6c-0.1,10.9-0.1,21.8,0,32.6c0,1.8-1.1,1.6-2.1,1.7c-11.2,0.8-20.3,5.6-26.9,14.6c-8.4,11.5-9.9,24.2-3.8,37.1c6.1,13,16.7,20,31.1,21c1.9,0.1,2,0.8,2,2.3c0,10.6-0.1,21.3,0,31.9c0,2.3-0.7,2.6-2.7,2.5c-29-1-55.1-20.2-64.5-47.7c-3.9-17.2-3-23.5-2.9-26.5"></path></g><path class="cb_dot" style="fill:' + color + ';" d="M121.5,46.2c0-15.8,12.9-28.6,29-28.5c15.6,0,28.4,13,28.4,28.7c0,15.6-13,28.7-28.7,28.7C134.4,75.1,121.5,62.1,121.5,46.2z"></path></g></svg>';
        },
        GetIconSVG: function (type) {
            var iconSVG = "";
            switch (type) {
                case "commbox":
                    iconSVG = '<svg width="35" height="35" viewBox="0 0 1125 1000" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><path d="M562.187 338.084C632.535 338.084 689.562 281.056 689.562 210.709C689.562 140.362 632.535 83.334 562.187 83.334C491.84 83.334 434.812 140.362 434.812 210.709C434.812 281.056 491.84 338.084 562.187 338.084Z" fill="#ffffff"/><path d="M240.477 911.824C283 912.328 325.206 904.449 364.685 888.64C404.164 872.832 440.144 849.399 470.565 819.686C500.99 789.974 525.265 754.557 541.998 715.461C558.736 676.37 567.611 634.361 568.111 591.836C568.615 549.311 560.736 507.107 544.927 467.628C529.115 428.149 505.686 392.17 475.973 361.747C446.257 331.323 410.843 307.05 371.749 290.313C332.654 273.576 290.646 264.703 248.122 264.201L246.167 429.761C266.949 430.007 287.479 434.345 306.585 442.524C325.692 450.703 342.999 462.565 357.521 477.432C372.042 492.303 383.493 509.886 391.219 529.178C398.945 548.474 402.796 569.099 402.55 589.882C402.305 610.665 397.969 631.195 389.789 650.299C381.61 669.407 369.747 686.715 354.879 701.236C340.01 715.757 322.427 727.207 303.133 734.932C283.839 742.661 263.213 746.511 242.431 746.265L240.477 911.824Z" fill="#ffffff"/><path d="M888.209 269.004C845.679 269.004 803.571 277.38 764.279 293.655C724.992 309.929 689.292 333.782 659.221 363.853C629.15 393.924 605.296 429.623 589.021 468.914C572.75 508.202 564.371 550.31 564.371 592.839C564.371 635.364 572.75 677.477 589.021 716.764C605.296 756.056 629.15 791.752 659.221 821.823C689.292 851.893 724.992 875.748 764.279 892.023C803.571 908.298 845.679 916.673 888.209 916.673V751.102C867.425 751.102 846.842 747.006 827.642 739.056C808.442 731.102 790.996 719.443 776.3 704.748C761.6 690.052 749.946 672.606 741.992 653.402C734.038 634.202 729.946 613.623 729.946 592.839C729.946 572.056 734.038 551.477 741.992 532.273C749.946 513.073 761.6 495.627 776.3 480.931C790.996 466.235 808.442 454.577 827.642 446.623C846.842 438.668 867.425 434.577 888.209 434.577V269.004Z" fill="#ffffff"/></svg>';
                    break;
                case "headphones-mic":
                    iconSVG = '<svg width="30" height="30" viewBox="0 0 1062 1000" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path d="M282.093 410.17C230.628 410.17 188.762 449.596 188.762 498.061V736.342C188.762 784.807 230.628 824.232 282.093 824.232C333.559 824.232 375.425 784.807 375.425 736.342V498.061C375.425 449.596 333.559 410.17 282.093 410.17Z" fill="#ffffff"/><path d="M126.471 498.045C126.471 489.594 127.655 481.43 129.122 473.369C91.6273 484.781 64.25 517.578 64.25 556.639V677.732C64.25 716.793 91.6273 749.59 129.122 761.002C127.655 752.941 126.471 744.777 126.471 736.326V498.045Z" fill="#ffffff"/><path d="M779.795 410.17C728.329 410.17 686.463 449.596 686.463 498.061V736.342C686.463 784.807 728.329 824.232 779.795 824.232C789.149 824.232 798.009 822.537 806.533 820.115C794.952 856.266 759.687 882.826 717.573 882.826H618.511C605.625 848.799 571.416 824.232 530.91 824.232C479.445 824.232 437.578 863.658 437.578 912.123C437.578 960.588 479.445 1000.01 530.91 1000.01C571.416 1000.01 605.625 975.447 618.511 941.42H717.573C803.341 941.42 873.126 875.703 873.126 794.936V736.342V498.061C873.126 449.596 831.26 410.17 779.795 410.17Z" fill="#ffffff"/><path d="M932.695 473.369C934.162 481.43 935.346 489.594 935.346 498.045V736.326C935.346 744.777 934.162 752.941 932.695 761.002C970.19 749.59 997.567 716.793 997.567 677.732V556.639C997.567 517.578 970.19 484.781 932.695 473.369Z" fill="#ffffff"/><path d="M530.909 0C273.579 0 64.25 197.125 64.25 439.453V440.201C82.7857 426.986 104.231 417.316 127.896 412.986C142.437 215.334 317.395 58.5938 530.909 58.5938C744.423 58.5938 919.38 215.334 933.921 412.984C957.584 417.314 979.03 426.986 997.567 440.199V439.453C997.567 197.125 788.239 0 530.909 0Z" fill="#ffffff"/></g><defs><clipPath id="clip0"><rect width="1061.91" height="1000" fill="#ffffff"/></clipPath></defs></svg>';
                    break;
                case "robot":
                    iconSVG = '<svg width="40" height="40" viewBox="0 0 990 1000" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0)"><path d="M734.959 588.629H254.473C227.029 588.629 204.77 611.117 204.77 638.863C204.77 666.608 227.029 689.096 254.473 689.096H734.959C762.402 689.096 784.662 666.608 784.662 638.863C784.662 611.117 762.402 588.629 734.959 588.629ZM342.139 651.713C342.139 659.452 335.926 665.732 328.268 665.732H302.839C295.181 665.732 288.968 659.452 288.968 651.713V626.012C288.968 618.273 295.181 611.993 302.839 611.993H328.268C335.926 611.993 342.139 618.273 342.139 626.012V651.713ZM700.463 651.713C700.463 659.452 694.25 665.732 686.592 665.732H661.163C653.505 665.732 647.292 659.452 647.292 651.713V626.012C647.292 618.273 653.505 611.993 661.163 611.993H686.592C694.25 611.993 700.463 618.273 700.463 626.012V651.713Z" fill="#ffffff"/><path d="M124.276 698.428C117.214 674.689 113.511 650.065 113.277 625.277V574.87C113.548 559.09 115.173 543.364 118.117 527.867H83.4855C37.4488 527.867 0 566.619 0 613.148C0 659.676 37.4488 698.428 83.4855 698.428H124.276Z" fill="#ffffff"/><path d="M905.954 527.867H871.323C874.267 543.364 875.892 559.09 876.163 574.87V625.277C875.928 650.065 872.226 674.689 865.164 698.428H905.954C951.991 698.428 989.44 659.676 989.44 613.148C989.44 566.619 951.991 527.867 905.954 527.867Z" fill="#ffffff"/><path d="M846.089 575.147C846.089 450.969 746.484 350.301 623.618 350.301H363.472C240.605 350.301 141 450.969 141 575.147V625.445C141 749.633 240.605 850.301 363.472 850.301H623.618C746.484 850.301 846.089 749.633 846.089 625.445V575.147ZM734.944 717.123H254.457C211.69 717.123 177.013 682.076 177.013 638.852C177.013 595.619 211.69 560.581 254.457 560.581H734.944C777.711 560.581 812.388 595.619 812.388 638.852C812.388 682.076 777.711 717.123 734.944 717.123Z" fill="#ffffff"/><path d="M818.191 215.221C817.875 246.188 839.268 273.057 869.258 279.382V513.867H896.999V279.382C927.007 273.067 948.427 246.207 948.156 215.221C948.156 178.951 919.06 149.545 883.173 149.545C847.287 149.545 818.191 178.951 818.191 215.221Z" fill="#ffffff"/></g><defs><clipPath id="clip0"><rect width="989.437" height="1000" fill="#ffffff"/></clipPath></defs></svg>';
                    break;
                case "chat-launcher":
                    iconSVG = '<svg width="30" height="30" viewBox="0 0 973 1000" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><path d="M488.935 0C488.67 0 488.14 0 487.345 0C219.064 0 0.886719 220.506 0.886719 491.651C0.886719 602.305 38.2658 709.745 106.661 796.286L35.8799 962.671C30.0477 976.335 36.4101 992.143 49.6651 997.769C54.4368 999.913 59.7388 1000.45 64.7757 999.645L324.308 953.561C376.268 972.584 430.878 982.229 486.019 981.961C754.3 981.961 972.477 761.456 972.477 490.311C973.007 219.97 756.421 0.267929 488.935 0ZM322.453 392.785H465.606C480.187 392.785 492.116 404.841 492.116 419.578C492.116 434.314 480.187 446.37 465.606 446.37H322.453C307.872 446.37 295.943 434.314 295.943 419.578C295.943 404.841 307.872 392.785 322.453 392.785ZM651.176 580.335H322.453C307.872 580.335 295.943 568.278 295.943 553.542C295.943 538.806 307.872 526.749 322.453 526.749H651.176C665.757 526.749 677.686 538.806 677.686 553.542C677.686 568.278 665.757 580.335 651.176 580.335Z" fill="#ffffff"/></svg>';
                    break;
                case "question-mark":
                    iconSVG = '<svg width="30" height="30" viewBox="0 0 604 1000" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><path d="M301.758 1000C365.795 1000 417.708 947.533 417.708 882.812C417.708 818.092 365.795 765.625 301.758 765.625C237.721 765.625 185.809 818.092 185.809 882.812C185.809 947.533 237.721 1000 301.758 1000Z" fill="#ffffff"/><path d="M301.731 0C135.5 0 0.261719 136.682 0.261719 304.688V333.984H232.161V304.688C232.161 265.916 263.369 234.375 301.731 234.375C340.093 234.375 371.301 265.916 371.301 304.688C371.301 325.348 362.328 344.902 346.681 358.342L185.781 496.598V707.031H417.68V604.965L496.866 536.924C564.442 478.889 603.2 394.244 603.2 304.688C603.2 136.682 467.962 0 301.731 0V0Z" fill="#ffffff"/></svg>                ';
                    break;
                case "checkmark-circle":
                    iconSVG = '<svg width="20" height="20" viewBox="0 0 512 512" fill="#ffffff" xmlns="http://www.w3.org/2000/svg"><path d="M369.164 174.77C376.977 182.582 376.977 195.246 369.164 203.055L234.992 337.23C227.18 345.039 214.52 345.039 206.707 337.23L142.836 273.355C135.023 265.547 135.023 252.883 142.836 245.074C150.645 237.262 163.309 237.262 171.117 245.074L220.848 294.805L340.879 174.77C348.691 166.961 361.355 166.961 369.164 174.77ZM512 256C512 397.504 397.484 512 256 512C114.496 512 0 397.484 0 256C0 114.496 114.516 0 256 0C397.504 0 512 114.516 512 256ZM472 256C472 136.605 375.379 40 256 40C136.605 40 40 136.621 40 256C40 375.395 136.621 472 256 472C375.395 472 472 375.379 472 256Z" fill="#ffffff"/></svg>';
                    break;
                case "question-mark-circular":
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 1024 1024"><g id="icomoon-ignore"></g><path fill="#ffffff" d="M946.081 254.995c-45.302-78.439-106.752-140.545-184.364-186.328-77.627-45.781-162.367-68.667-254.287-68.667-91.91 0-176.676 22.886-254.289 68.667-77.617 45.776-139.067 107.882-184.369 186.328-45.305 78.451-67.949 164.122-67.949 257.006 0 92.889 22.651 178.546 67.942 257.001 45.299 78.439 106.75 140.545 184.367 186.333 77.622 45.779 162.382 68.664 254.289 68.664s176.676-22.885 254.293-68.664c77.613-45.772 139.060-107.894 184.358-186.333 45.29-78.449 67.932-164.118 67.932-257.001 0.003-92.893-22.642-178.566-67.923-257.006zM591.869 832.002c0 6.216-1.992 11.333-5.944 15.325-3.937 3.996-8.999 5.994-15.15 5.994h-126.663c-6.154 0-11.214-1.999-15.172-5.994-3.96-3.996-5.938-9.11-5.938-15.325v-128.014c0-6.217 1.975-11.333 5.938-15.325 3.958-3.988 9.017-5.985 15.172-5.985h126.663c6.151 0 11.213 1.997 15.15 5.985 3.953 3.995 5.944 9.108 5.944 15.325v128.014zM752.482 437.997c-5.503 16.445-11.653 29.898-18.469 40.337-6.814 10.445-16.605 21.114-29.363 31.998-12.73 10.888-22.852 18.671-30.346 23.345-7.463 4.659-18.248 11.006-32.304 18.996-14.516 8.437-26.489 19.442-35.938 33.004-9.457 13.553-14.183 24.548-14.183 32.985 0 6.235-1.992 11.346-5.947 15.344-3.943 3.996-9.003 5.991-15.156 5.991h-126.655c-6.154 0-11.215-1.996-15.173-5.991-3.962-3.998-5.933-9.108-5.933-15.344v-24.002c0-29.777 11.536-57.679 34.627-83.67 23.090-26.003 48.485-45.226 76.194-57.672 21.094-9.774 36.052-19.778 44.845-29.998 8.807-10.221 13.203-23.79 13.203-40.67 0-14.671-8.252-27.78-24.746-39.343-16.494-11.552-35.28-17.328-56.395-17.328-22.873 0-41.776 5.335-56.732 16.006-14.516 10.66-33.419 31.108-56.73 61.326-3.958 5.337-9.456 8.011-16.494 8.011-5.277 0-9.457-1.33-12.532-3.991l-87.065-66.671c-10.113-8.002-11.871-17.33-5.282-27.999 56.295-94.668 137.866-142.002 244.722-142.002 38.267 0 75.651 9.114 112.148 27.339 36.495 18.216 66.953 43.997 91.367 77.336 24.383 33.325 36.608 69.554 36.608 108.666-0.033 19.554-2.791 37.546-8.272 53.997z"></path></svg>              ';
                    break;
                case 'sms':
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 1024 1024"><path fill="#ffffff" d="M105.987 761.212h376.125l320.265 262.788v-262.788h115.653c58.353 0 105.808-48.293 105.808-107.68v-545.85c0-59.387-47.455-107.682-105.808-107.682h-812.044c-58.355 0-105.808 48.296-105.808 107.682v545.848c0 59.387 47.454 107.682 105.808 107.682zM760.517 405.77c-41.174-13.869-57.074-36.269-56.668-59.917 0-37.082 31.8-65.197 81.098-65.197 23.245 0 44.017 5.279 56.261 11.402l-10.993 42.797c-8.967-4.906-26.083-11.434-43.205-11.434-15.089 0-23.647 6.123-23.647 16.307 0 9.372 7.746 14.277 32.205 22.836 37.895 13.027 53.797 32.208 54.206 61.542 0 37.082-29.338 64.384-86.411 64.384-26.083 0-49.33-5.686-64.385-13.838l10.997-44.423c11.402 6.935 35.052 15.089 53.388 15.089 18.747 0 26.492-6.528 26.492-16.712 0-10.216-6.122-15.090-29.338-22.838zM410.479 285.124l2.843 26.897h1.219c8.558-12.62 26.084-31.363 60.322-31.363 25.679 0 46.048 13.027 54.607 33.802h0.813c7.341-10.184 16.307-18.338 25.679-24.023 11.028-6.528 23.241-9.777 37.925-9.777 38.3 0 67.259 26.898 67.259 86.378v117.399h-60.322v-108.401c0-28.959-9.403-45.672-29.365-45.672-14.245 0-24.461 9.777-28.522 21.618-1.625 4.466-2.436 10.997-2.436 15.9v116.555h-60.323v-111.68c0-25.275-8.967-42.392-28.554-42.392-15.871 0-25.274 12.246-28.928 22.431-2.030 4.874-2.436 10.59-2.436 15.495v116.149h-60.323v-135.735c0-24.835-0.813-46.048-1.625-63.573l52.167-0.007zM233.226 405.77c-41.174-13.869-57.074-36.269-56.669-59.917 0-37.082 31.803-65.197 81.099-65.197 23.243 0 44.049 5.279 56.261 11.402l-10.997 42.797c-8.966-4.906-26.084-11.434-43.204-11.434-15.090 0-23.649 6.123-23.649 16.307 0 9.372 7.746 14.277 32.207 22.836 37.895 13.027 53.794 32.208 54.202 61.542 0 37.082-29.332 64.384-86.409 64.384-26.085 0-49.328-5.686-64.384-13.838l10.997-44.423c11.402 6.935 35.051 15.089 53.388 15.089 18.744 0 26.492-6.528 26.492-16.712 0-10.216-6.124-15.090-29.335-22.838z"></path></svg>'
                    break;
                case 'chat':
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 996 1024"><path fill="#ffffff" d="M500.669 0c-0.271 0-0.814 0-1.628 0-274.72 0-498.133 225.798-498.133 503.451 0 113.31 38.276 223.328 108.313 311.946l-72.48 170.378c-5.972 13.992 0.543 30.179 14.116 35.94 4.886 2.195 10.315 2.745 15.473 1.921l265.761-47.19c53.207 19.48 109.128 29.356 165.592 29.082 274.72 0 498.133-225.797 498.133-503.45 0.543-276.829-221.241-501.804-495.147-502.078zM330.192 402.212h146.589c14.931 0 27.146 12.345 27.146 27.436s-12.215 27.435-27.146 27.435h-146.589c-14.931 0-27.146-12.345-27.146-27.435 0-15.091 12.215-27.436 27.146-27.436zM666.804 594.263h-336.612c-14.931 0-27.146-12.346-27.146-27.436s12.215-27.436 27.146-27.436h336.612c14.931 0 27.146 12.346 27.146 27.436s-12.215 27.436-27.146 27.436z"></path></svg>'
                    break;
                case 'whatsapp':
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 1024 1024"><path fill="#ffffff" d="M852.539 145.312C758.984 51.5625 634.57 0 501.953 0C228.906 0 6.64063 222.266 6.64063 495.508C6.64063 582.812 29.4922 668.164 72.8516 743.164L2.53906 1000L265.234 931.055C337.695 970.508 419.141 991.406 501.953 991.406H502.148C775.195 991.406 997.656 769.141 997.656 495.898C997.656 363.477 946.094 239.062 852.539 145.312ZM502.148 907.812C428.125 907.812 355.664 887.891 292.383 850.391L277.344 841.406L121.484 882.227L163.086 730.273L153.32 714.648C111.914 649.219 90.2344 573.438 90.2344 495.508C90.2344 268.359 275 83.5938 502.344 83.5938C612.305 83.5938 715.82 126.562 793.555 204.297C871.289 282.227 914.062 385.547 914.062 495.703C913.867 723.047 729.102 907.812 502.148 907.812ZM727.93 599.219C715.625 592.969 654.688 563.086 643.359 558.984C632.031 554.883 623.828 552.734 615.43 565.234C607.227 577.539 583.398 605.469 576.172 613.867C568.945 622.07 561.719 623.242 549.414 616.992C537.109 610.742 497.07 597.656 449.805 555.469C413.086 522.656 388.086 482.031 380.859 469.727C373.633 457.422 380.078 450.586 386.328 444.531C391.992 439.062 398.633 430.078 404.883 422.852C411.133 415.625 413.086 410.547 417.188 402.148C421.289 393.945 419.336 386.719 416.211 380.469C413.086 374.219 388.281 313.281 378.125 288.477C368.164 264.258 357.812 267.578 350.195 267.188C342.969 266.797 334.766 266.797 326.562 266.797C318.359 266.797 304.883 269.922 293.555 282.227C282.227 294.531 250.195 324.609 250.195 385.547C250.195 446.484 294.531 505.273 300.781 513.672C307.031 521.875 388.086 647.07 512.305 700.586C541.797 713.281 564.844 720.898 582.812 726.758C612.5 736.133 639.453 734.766 660.742 731.641C684.57 728.125 733.984 701.758 744.336 672.852C754.688 643.945 754.688 619.141 751.562 614.062C748.633 608.594 740.43 605.469 727.93 599.219Z"></path></svg>'
                    break;
                case "mail":
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 512 512"><path fill="#ffffff" d="M493.721 73.143h-475.427l237.714 195.804 240.401-195.255c-0.877-0.257-1.777-0.441-2.688-0.549z"></path><path fill="#ffffff" d="M267.538 306.761c-6.737 5.517-16.43 5.517-23.167 0l-244.37-201.326v315.136c0 10.098 8.187 18.286 18.286 18.286h475.428c10.098 0 18.286-8.188 18.286-18.286v-312.43l-244.463 198.619z"></path></svg>'
                    break;
                case "fbmessenger":
                    iconSVG = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 1024 1024"><path fill="#ffffff" d="M512 0c-282.752 0-512 212.224-512 474.048 0 149.184 74.432 282.242 190.784 369.151v180.802l174.335-95.678c46.528 12.866 95.808 19.836 146.88 19.836 282.756 0 512-212.224 512-474.046 0-261.824-229.244-474.112-512-474.112zM562.88 638.4l-130.368-139.072-254.4 139.072 279.872-297.088 133.568 139.072 251.2-139.072-279.872 297.088z"></path></svg>'
                    break;
            }
            return iconSVG;

        },
        addThemeColorClasses: function (themeColor) {
            if (themeColor == null || themeColor == undefined || themeColor.length < 3 || themeColor == "null") {
                themeColor = "#0396da";
            }

            BY.addClassToBody(".mainThemeColor { color: " + themeColor + "; }");
            BY.addClassToBody(".mainThemeColorBG { background-color: " + themeColor + "; }");
            BY.addClassToBody(".cb-main-theme-border-width { border-width: 1px !important; } .cb-main-theme-border-style { border-style: solid !important; } .mainThemeColorBorder { border-color: " + themeColor + " !important; }");
            BY.addClassToBody("input.BY_input:focus, textarea.BY_input:focus .BY_input_style:focus { border-color:" + themeColor + " !important; }");
            BY.addClassToBody(".by_button:focus, .by_button:hover { color:" + themeColor + "; }");
            BY.addClassToBody(".cb_overlayConfirmClose button:focus{ color:" + themeColor + " !important; }");

            var contrastHexColor = getTextHexColorForBackgroundHexColor && getTextHexColorForBackgroundHexColor(themeColor);
            if (contrastHexColor) {
                var colorFocus = contrastHexColor;
                if (contrastHexColor == "#fff") {
                    colorFocus = "#000";
                }
                else if (contrastHexColor == "#000") {
                    colorFocus = "#fff";
                }
                BY.addClassToBody(".cb-contrast-theme-color { color: " + contrastHexColor + "; }");
                BY.addClassToBody(".cb-change-main-to-contrast-color { color: " + themeColor + "; } .cb-change-main-to-contrast-color:focus, .cb-change-main-to-contrast-color:hover { color: " + colorFocus + "; }");
                BY.addClassToBody(".cb-change-main-to-contrast-bg-color { background-color: " + themeColor + "; } .cb-change-main-to-contrast-bg-color:focus, .cb-change-main-to-contrast-bg-color:hover { background-color: " + contrastHexColor + "; }");
                BY.addClassToBody(".cb-change-main-to-contrast-border-color { border-color: " + themeColor + "; } .cb-change-main-to-contrast-border-color:focus, .cb-change-main-to-contrast-border-color:hover { border-color: " + contrastHexColor + "; }");

                BY.addClassToBody(".cb-change-contrast-to-main-color { color: " + contrastHexColor + "; } .cb-change-contrast-to-main-color:focus, .cb-change-contrast-to-main-color:hover { color: " + themeColor + "; }");
                BY.addClassToBody(".cb-change-contrast-to-main-bg-color { background-color: " + contrastHexColor + "; } .cb-change-contrast-to-main-bg-color:focus, .cb-change-contrast-to-main-bg-color:hover { background-color: " + themeColor + "; }");
                BY.addClassToBody(".cb-change-contrast-to-main-border-color { border-color: " + contrastHexColor + "; } .cb-change-contrast-to-main-border-color:focus, .cb-change-contrast-to-main-border-color:hover { border-color: " + themeColor + "; }");
            }
        },
        getBrowserName: function () {
            this.browserName = null;

            if (this.browserName != null) {
                return this.browserName;
            }

            // Opera 8.0+
            if ((!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) {
                this.browserName = "Opera";
                return this.browserName;
            }

            // Firefox 1.0+
            if (typeof InstallTrigger !== 'undefined') {
                this.browserName = "Firefox";
                return this.browserName;
            }

            // Safari 3.0+ "[object HTMLElementConstructor]" 
            if (/constructor/i.test(window.HTMLElement) || (function (p) {
                return p.toString() === "[object SafariRemoteNotification]";
            })(!window['safari'] || safari.pushNotification)) {
                this.browserName = "Safari";
                return this.browserName;
            }

            // Internet Explorer 6-11
            var isIE = /*@cc_on!@*/ false || !!document.documentMode;
            if (isIE) {
                this.browserName = "Explorer";
                return this.browserName;
            }

            // Edge 20+
            if (!isIE && !!window.StyleMedia) {
                this.browserName = "Edge";
                return this.browserName;
            }

            // Chrome 1+
            if (!!window.chrome && !!window.chrome.webstore) {
                this.browserName = "Chrome";
                return this.browserName;
            }

            this.browserName = "Unknown";

            return this.browserName;
        },

        setTrigger: function (triggers) {
            if (triggers && triggers.constructor == Array) {
                jQuery.each(triggers, function (i, newTrigger) {
                    if (newTrigger.hasOwnProperty("module") && newTrigger.hasOwnProperty("name") && newTrigger.hasOwnProperty("value")) {
                        if (BY._triggers.length > 0) {
                            jQuery.each(BY._triggers, function (i, currentTrigger) {
                                if (newTrigger.module == currentTrigger.module && newTrigger.name == currentTrigger.name) {
                                    currentTrigger.value = newTrigger.value;
                                } else {
                                    BY._triggers.push(newTrigger);
                                }
                                return false;
                            });

                        } else {
                            BY._triggers.push(newTrigger);
                        }
                    }
                });
            }
        },

        launchApp: function (instanceId) {
            var instance = BY.instances[instanceId];
            if (jQuery('#btnImgPreButton_' + instanceId).find('#cb_launcher').attr('data-state') == "open") {
                BY.closeApp(instanceId);
            } else {
                BY.bubbles.stop(instance.id);
                BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Pre button click', 'OK');
                instance.onclickFunction();
            }
        },

        slideUpStreamsContactUs: function (instanceId) {
            var instance = BY.instances[instanceId];
            BY._stopShakePreButton(instanceId);
            BY.bubbles.stop(instanceId);
            var divWrappersupportedStreams = jQuery('#divWrappersupportedStreams_' + instanceId);
            divWrappersupportedStreams.addClass("is-showing-options");
            jQuery('#' + instance.panelIdToHide).addClass('cb-close-launcher' + (instance.isMiddleLauncher ? ' middle-to-bottom' : '')).css({ "border-radius": "40px" }).removeClass('bottom-to-middle');
            if (!BY.addEventClose) {
                BY.addEventClose = true;
                jQuery('.cb_imgClose , .close-launcher').click(function () {
                    if (!BY.isOpen) {
                        jQuery('#' + instance.panelIdToHide).removeClass('cb-close-launcher middle-to-bottom').addClass((instance.isMiddleLauncher ? ' bottom-to-middle' : ''));
                        divWrappersupportedStreams.removeClass("is-showing-options");
                        BY._toggleCloseLauncher(instance, false);
                    }
                    else {
                        divWrappersupportedStreams.attr({ "data-selected-module": "" });
                        BY.closeApp(jQuery(this).attr("data-instanceId"));
                        BY._toggleCloseLauncher(instance, false);
                        BY.isOpen = false;
                    }
                });
            }

            if (instance.defaultModuleId) {
                var moduleImg = jQuery("#divWrappersupportedStreams_ifrContactUs #imgModule_" + instance.defaultModuleId);
                if (moduleImg.length > 0) {
                    moduleImg.closest("button").click();
                    jQuery('#divWrappersupportedStreams_' + instanceId).attr({ "data-selected-module": instance.defaultModuleId });
                }
            }
        },

        closeApp: function (instanceId) {
            instance = BY.instances[instanceId];
            if (BY.launcher.settings.show_exit_chat_confirmation &&
                BY.launcher.settings.show_exit_chat_confirmation != "0" &&
                BY.launcher.settings.show_exit_chat_confirmation != "-1") { // support confirmation dialog 
                jQuery("#" + instance.panelIdToHide).trigger('focus');
                //loop focus between 2 buttons

                var panel = jQuery('#' + instance.panelIdToShow);
                panel.find(".btnUnConfirmClose").on('blur', function () {
                    panel.find(".btnConfirmClose").trigger('focus');
                });
                panel.find(".btnConfirmClose").on('blur', function () {
                    panel.find(".btnUnConfirmClose").trigger('focus');
                });

                if (instance.supportConfirmClose == true) {
                    var appIframe = jQuery("#" + instance.iframeId);
                    if (appIframe.length > 0 && appIframe.is(":visible")) {
                        var panel = jQuery('#' + instance.panelIdToShow);
                        panel.find(".cb_overlayConfirmClose").show();
                    } else {
                        BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Close', 'OK');
                        BY.closeAppFrame("close", instance.id, "minimized");
                    }
                } else {
                    //add class to mark the top buttons better
                    BY.addClassToBody(".BY_TopButton:focus{text-shadow: 2px 3px 0px black; -webkit-text-stroke-width: medium;}");
                    BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Close', 'OK');
                    BY.closeAppFrame("close", instance.id, "minimized");
                }
            } else {
                BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Close', 'OK');
                BY.closeAppFrame("close", instance.id, "minimized");
            }

            if (BY.session.sessionStreamId && BY.session.sessionStreamId.length > 5) {
                var sessionContent = {
                    "sessionType": 1
                }
                sessionContent.originUrl = window.location.href;
                BY.session.addEvent(BY.streamId, sessionContent, "close", 0, true);
            }
        },

        inactivityLogoutDetails: {
            objectId: null
        },

        /* private methods */

        //onWindowUnloadMethodsCompleted - the method which is executed after all the methods in BY.arrOnDisconnect were executed
        //REMARK:  using the specified 'onWindowUnloadCallback' to synchronize between the actions when logging-out
        _onWindowUnload: function (onWindowUnloadMethodsCompleted) {
            var countDisconnectionMethods = BY.arrOnDisconnect && BY.arrOnDisconnect.length;
            if (!countDisconnectionMethods || BY.isOnDisconnectTrigger == true) {
                if (onWindowUnloadMethodsCompleted) {
                    onWindowUnloadMethodsCompleted();
                }
                return;
            }

            var completedMethodsCounter = 0;
            for (var i = 0; i < countDisconnectionMethods; i++) {
                BY.arrOnDisconnect[i](function () {
                    completedMethodsCounter++;
                    if (completedMethodsCounter == countDisconnectionMethods && onWindowUnloadMethodsCompleted) {
                        onWindowUnloadMethodsCompleted();
                    }
                });
            }
        },

        _appBaseInit: function (options, instance, callbackfunc) {
            BY._instanceId = instance.id;
            BY.options = options;
            if (BY.instances == undefined) {
                BY.instances = {};
            }

            //save app instance in BY.instances object.
            if (BY.instances[instance.id] == undefined) {
                BY.instances[instance.id] = instance;
            }

            BY.onMessageEvent = function (actionName, content) {
                var panel = jQuery('#' + instance.panelIdToShow);
                var isMessageEventTriger = false;
                switch (actionName) {
                    case "logout":
                        isMessageEventTriger = true;
                        //handle iframe logout, for now we reload all iframe to update cookies
                        if (content && content.iframeId) {
                            jQuery.each(BY.instances, function () {
                                if (!BY_isNullOrEmpty(content.iframeId) && !BY_isNullOrEmpty(this.iframeId)) {
                                    if (this.iframeId != content.iframeId && content && content.innerCookieToUpdateInAllIframe) {
                                        var appIframe = jQuery("#" + this.iframeId);
                                        if (appIframe.length > 0 && appIframe[0] && appIframe[0].contentWindow) {
                                            BY.postMessage.toIFrame(this.iframeId, this.iframeUrl, "overrideInnerDataHostCookie", {});
                                        }
                                    }
                                }
                            });
                        }

                        break;
                }
                if (isMessageEventTriger && instance.onMessageEvent) {
                    instance.onMessageEvent(actionName, content);
                }

            }


            this._getBaseDomain(options);
            BY._appendCssExtentions();
            var that = this;

            if (options.streamId) {
                instance.streamId = options.streamId;
                BY.streamId = options.streamId;
            } else {
                throw {

                    type: "error",
                    message: "missing stream id"
                };
            }

            if (options.externalLoginUrl && options.externalLoginUrl.length > 0) {
                // override login url with external login page. the customer login page will be open and after user finish login ->
                // the external page will redirect him back(change the iframe url) with ticket parameter (ta=...)
                instance.iframeUrl = options.externalLoginUrl;
                var parentUrl = window.location.href.replace(/\//g, '~~').replace(/:/g, "^dots^").replace(/\?/g, "^qm^").replace(/&/g, "^amp^").replace(/\+/g, "^plus^").replace(/%2b/ig, "^plus^").replace(/#/g, "^hash^");

                instance.queryParams = "";
                BY.calc.queryString.addQueryParam(instance, BY.consts.originUrl, parentUrl);
                //BY.calc.queryString.addQueryParam(instance, "is_CB_frame", "1");

                if (instance.queryParams && instance.queryParams.length > 0) {
                    instance.iframeUrl += "&iframeId=" + instance.iframeId;
                }

            } else {

                if (options.subStreamId && options.subStreamId > 0) {
                    instance.subStreamId = options.subStreamId;
                    BY.subStreamId = options.subStreamId;
                }

                if (options.trackerStreamId && options.trackerStreamId != "0" && jQuery.trim(options.trackerStreamId).length > 5) {
                    BY.session.sessionStreamId = options.trackerStreamId; //for users we show trackerStreamId. for us is sessionStreamId
                }
                else {
                    BY.session.sessionStreamId = null;
                }
                //adding the origin url as a parameter to the query string
                var parentUrl = window.location.href.replace(/\//g, '~~').replace(/:/g, "^dots^").replace(/\?/g, "^qm^").replace(/&/g, "^amp^").replace(/\+/g, "^plus^").replace(/%2b/ig, "^plus^").replace(/#/g, "^hash^").replace(/=/g, "^equal^");
                var theoriginurl = "/theoriginurl" + parentUrl;
                if (parentUrl.length > 100) {
                    theoriginurl = "";
                }

                instance.queryParams = "";

                //TODO:  decide what to do if (parentUrl.length > 100) ?  should we avoid adding it from the queryParams? take only the domain as the param value? or ignore the situation?

                // if (parentUrl.length > 100) {
                BY.calc.queryString.addQueryParam(instance, BY.consts.originUrl, parentUrl);
                // }
                instance.iframeUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" + BY._baseDomain : BY._baseDomain) + instance.urlUniqueName + "/" + BY.streamId;

                if (options.ta && jQuery.trim(options.ta).length > 0) {
                    BY.calc.queryString.addQueryParam(instance, "ta", options.ta);
                    instance.ta = options.ta;
                }

                if (options.supportCNAME != null && options.supportCNAME != undefined) {
                    instance.supportCNAME = options.supportCNAME;
                }
                if (BY.session.sessionStreamId && BY.session.sessionStreamId.length > 5) {
                    BY.calc.queryString.addQueryParam(instance, "sessionStreamId", BY.session.sessionStreamId);
                }
                // this is only for chat....
                if (options.initialText && jQuery.trim(options.initialText).length > 0) {
                    BY.calc.queryString.addQueryParam(instance, "initialText", encodeURIComponent(JSON.stringify(options.initialText)));
                }
                // this is only for chat....
                if (BY.subStreamId && BY.subStreamId > 0) {
                    BY.calc.queryString.addQueryParam(instance, "substreamid", BY.subStreamId);
                }

                // this is only for chat....
                if (options.debuggerScriptVersion) {
                    BY.calc.queryString.addQueryParam(instance, "debuggerScriptVersion", options.debuggerScriptVersion);
                }

                // this is only for chat....
                if (options.serverScriptId) {
                    BY.calc.queryString.addQueryParam(instance, "serverScriptId", options.serverScriptId);
                }
                // this is only for contactUs...
                if (instance.hasOwnProperty("defaultModuleId")) {
                    BY.calc.queryString.addQueryParam(instance, "defaultModuleId", instance.defaultModuleId);
                }

                // this is only for navigator...
                if (options.nodeId && jQuery.trim(options.nodeId).length > 0) {
                    BY.calc.queryString.addQueryParam(instance, "nodeId", options.nodeId);
                }
                // this is only for navigator...
                if (options.data && jQuery.trim(options.data).length > 0) {
                    BY.calc.queryString.addQueryParam(instance, "data", encodeURIComponent(JSON.stringify(options.data)));
                }

                // all CB frames get 'is_CB_frame' parameter to control 'accessiblity icon' and 'powered by' duplicates.
                ///BY.calc.queryString.addQueryParam(instance, "is_CB_frame", "1");

                if (instance.queryParams && instance.queryParams.length > 0) {
                    instance.iframeUrl += "/?" + instance.queryParams; //=" + options.ta;
                    instance.iframeUrl += "&iframeId=" + instance.iframeId;
                }
                else {
                    instance.iframeUrl += "/?&iframeId=" + instance.iframeId;
                }

            }

            //override diviframe style
            if (options.appWrapperStyle != null && options.appWrapperStyle != undefined && jQuery.trim(options.appWrapperStyle).length > 0) {
                instance.appWrapperStyle = options.appWrapperStyle;
            } else {
                instance.appWrapperStyle = "";
            }

            if (options.triggers && options.triggers.length > 0) {
                BY.setTrigger(options.triggers);
            }

            this.initLauncher(options.streamId, function () {
                //run over the rules every 1 sec
                if (BY.launcher.rules && BY.launcher.rules.length > 0) {
                    if (BY._intervalHandler != null) {
                        clearInterval(BY._intervalHandler);
                        BY._intervalHandler = null;
                    }
                }
                var callback = null;
                var launcherSettings = BY.launcher.settings;
                BY._streamState = JSON.parse(BY.launcher.StreamState).state;

                // hides the pre button.
                if (BY.launcher && BY.launcher.forceHideOfChatPreButton && BY.launcher.forceHideOfChatPreButton == "1") {
                    BY._streamState = "3";
                }

                instance.language = BY.defaultLanguage = BY.launcher.language;
                var launcherDir = instance.language == "he" || instance.language == "ar" ? "rtl" : "ltr";

                if (options.onLoad) {
                    callback = options.onLoad;
                }

                if (BY._streamState == '0') {
                    instance.isBusy = false;
                    instance.isOpen = false;
                    if (callback) {
                        callback();
                    }
                    //execute rules
                    BY._rulesAnalyzaer(instance);
                    BY._intervalHandler = setInterval(function () {
                        BY._rulesAnalyzaer(instance)
                    }, 1000);
                    return;
                }

                instance.imgStyle = "";
                instance.animateDistance = 0; // the space from right/top/bottom/left-
                instance.panelSizeToShow = 100;
                instance.shakeButton = false;
                instance.vAlign = instance.vAlign ? instance.vAlign : "";
                instance.topPanelControlsColor = null;
                instance.hasButtonToHideLauncher = launcherSettings.show_x_for_hiding_launcher == "1";

                //width
                if (options.width && options.width != "") {
                    instance.w = options.width;
                } else if (launcherSettings.launcher_width && launcherSettings.launcher_width != "") {
                    instance.w = launcherSettings.launcher_width;
                } else {
                    instance.w = 376;
                }

                //check minwidth smaller than 300
                try {
                    if (instance.w && instance.w.indexOf("px") > -1) {
                        var tempWidth = parseInt(instance.w, 10);
                        if (tempWidth < 300) {
                            instance.w = "300px";
                        }
                    }
                } catch (ex) {

                }

                //height 
                if (options.height && options.height != "") {
                    instance.h = options.height;
                } else if (launcherSettings.launcher_height && launcherSettings.launcher_height != "") {
                    instance.h = launcherSettings.launcher_height;
                } else if (instance.h == null || instance.h == undefined || instance.h == "") {
                    instance.h = 700;
                }

                //show timeout   
                if (options.showTimeout && options.showTimeout != "") {
                    instance.showTimeout = options.showTimeout;
                } else if (launcherSettings.launcher_show_timeout && launcherSettings.launcher_show_timeout != "") {
                    instance.showTimeout = launcherSettings.launcher_show_timeout * 1000;
                } else {
                    instance.showTimeout = 0;
                }


                //initial state  
                if (options.initialState && options.initialState != "") {
                    instance.initialState = options.initialState;
                } else if (launcherSettings.launcher_initial_state && launcherSettings.launcher_initial_state != "") {
                    instance.initialState = launcherSettings.launcher_initial_state;
                } else {
                    instance.initialState = "preButton";
                }

                //vertical align
                if (options.preButton && options.preButton.vAlign && options.preButton.vAlign != "") {
                    instance.vAlign = options.preButton.vAlign;
                } else if (launcherSettings.launcher_vertical_align && launcherSettings.launcher_vertical_align != "") {
                    instance.vAlign = launcherSettings.launcher_vertical_align;
                } else if (instance.vAlign != "") {
                    instance.vAlign = instance.vAlign;
                } else {
                    instance.vAlign = "bottom";
                }

                //Created in order to enable 100% height of the launcher in case of middle launcher
                instance.isMiddleLauncher = (instance.vAlign == "middle");

                //animate distance
                if (options.animateDistance != undefined && options.animateDistance != null) {
                    instance.animateDistance = options.animateDistance;
                }

                //dock           
                if (options.dock && options.dock != "") {
                    instance.dock = options.dock;
                } else if (launcherSettings.launcher_dock && launcherSettings.launcher_dock != "" && launcherSettings.launcher_dock != -1) {
                    instance.dock = launcherSettings.launcher_dock;
                } else {
                    instance.dock = "left";
                }

                instance.animatePosition = instance.dock;

                //animate position
                ////if (options.animatePosition != undefined && options.animatePosition != null) {
                ////    instance.animatePosition = options.animatePosition;
                ////}

                //theme color    
                if (options.themeColor && options.themeColor != "") {
                    instance.themeColor = options.themeColor;
                } else if (launcherSettings.theme_color && launcherSettings.theme_color != "") {
                    instance.themeColor = launcherSettings.theme_color;
                } else {
                    instance.themeColor = "#0396da";
                }

                instance.backgroundColor = instance.themeColor;

                if (!BY_isNullOrEmpty(launcherSettings.launcher_design)) {
                    try {
                        var launcherdesign = JSON.parse(launcherSettings.launcher_design);
                        instance.launcherType = launcherdesign.type;
                        switch (launcherdesign.type) {
                            case "icon":
                                launcherSettings.icon = launcherdesign.logoName;
                                launcherSettings.iconText = launcherdesign.logoText;
                                instance.backgroundColor = launcherdesign.backgroundColor;
                                break;
                            case "logo":
                                instance.backgroundColor = "";
                                launcherSettings.launcher_mobile_image_url = launcherdesign.launcher_mobile_image_url;
                                launcherSettings.launcher_image_url = launcherdesign.launcher_image_url;
                                if ((BY_isMobile() && BY_isNullOrEmpty(launcherSettings.launcher_mobile_image_url)) || (!BY_isMobile() && BY_isNullOrEmpty(launcherSettings.launcher_image_url))) {
                                    instance.launcherType = "icon";
                                    instance.backgroundColor = instance.themeColor;
                                }
                                break;
                        }

                    }
                    catch (e) { }
                }

                ///** add brand theme **/
                if (instance.isThemeColorAdded != true) {
                    instance.isThemeColorAdded = true;
                    BY.addThemeColorClasses(instance.themeColor);
                }

                //Top Panel Controls Color
                if (options.topPanelControlsColor && jQuery.trim(options.topPanelControlsColor).length > 1) {
                    instance.closeIconsColor = options.topPanelControlsColor; // override colors for top panel buttons and texts.
                } else if (launcherSettings.theme_color_x_close && launcherSettings.theme_color_x_close != "") {
                    instance.closeIconsColor = launcherSettings.theme_color_x_close;
                }

                //validate height
                if (!instance.h) {
                    instance.h = "70%";
                } else if (instance.h.toString().indexOf("%") == "-1" && instance.h.toString().indexOf("px") == "-1") {
                    instance.h = instance.h.toString() + "px";
                }

                //old chat installation was not supported in width. and thare is installaition that send width 70%.(70% is too big for chat)
                if (instance.w == "70%") {
                    instance.w = "400px";
                } else if (instance.w.toString().indexOf("%") == "-1" && instance.w.toString().indexOf("px") == "-1") {
                    instance.w = instance.w.toString() + "px";
                }

                var curWidth = instance.w;
                var curHeight = instance.h;
                if (curWidth != null && curWidth != undefined) {
                    curWidth = curWidth.toLowerCase().replace("%", "").replace("px", "");
                }
                if (curHeight != null && curHeight != undefined) {
                    curHeight = curHeight.toLowerCase().replace("%", "").replace("px", "");
                }

                var left = (screen.width / 2) - (curWidth / 2);
                var top = (screen.height / 2) - (curHeight / 2);

                var openAllOverPage = false;
                if ((BY_isMobile() && jQuery("meta[name='viewport']").length > 0)) {
                    //this is mobile and current page contain viewport meta tag.
                    instance.w = "100%";
                    instance.h = "100%";
                    left = 0;
                    top = 0;
                    instance.openAllOverPage = openAllOverPage = true;
                }

                if (curHeight > window.innerHeight) {
                    instance.isFullHeight = true;
                }

                instance.left = left;
                instance.top = top;

                var launcherMode = (options.mode ? options.mode : launcherSettings.launcher_mode);

                if (launcherMode && launcherMode == "popup" || (BY_isMobile() && openAllOverPage == false)) {
                    var windowOpenParams = "'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=" + instance.w + ",height=" + instance.h + ",top=" + top + ",left=" + left + "').focus()";
                    if (launcherMode != 'popup') {
                        windowOpenParams = "'_blank'," + windowOpenParams;
                    }
                    instance.onclickFunction = function () {
                        window.open(instance.iframeUrl, instance.urlUniqueName, windowOpenParams);
                    }
                }

                instance.preButton = "";
                if (instance.initialState && (instance.initialState == "hidden")) {
                    instance.preButton = "";
                }
                else {
                    //support imageUrl from options.preButton.imageUrl and options.imageUrl
                    if (options.preButton && options.preButton.imageUrl && options.preButton.imageUrl != "") {
                        instance.imageUrl = options.preButton.imageUrl;
                        if (instance.imageUrl && instance.imageUrl.indexOf("http://") == 0) {
                            instance.imageUrl = instance.imageUrl.replace("http:", "");
                        }
                    } else if (options.imageUrl && options.imageUrl != "") {
                        instance.imageUrl = options.imageUrl;
                        if (instance.imageUrl && instance.imageUrl.indexOf("http://") == 0) {
                            instance.imageUrl = instance.imageUrl.replace("http:", "");
                        }
                    } else if (launcherSettings && instance.launcherType == "logo") {
                        if (BY_isMobile() && launcherSettings.launcher_mobile_image_url && launcherSettings.launcher_mobile_image_url != "") {
                            if (launcherSettings.launcher_mobile_image_url.indexOf("http") == 0) {
                                instance.imageUrl = launcherSettings.launcher_mobile_image_url;
                            }
                            else {
                                instance.imageUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + "/media" + launcherSettings.launcher_mobile_image_url;
                            }
                        } else if (launcherSettings.launcher_image_url && launcherSettings.launcher_image_url != "") {
                            if (launcherSettings.launcher_image_url.indexOf("http") == 0) {
                                instance.imageUrl = launcherSettings.launcher_image_url;
                            }
                            else {
                                instance.imageUrl = (BY._baseDomain.indexOf("https:") == -1 ? "https:" : "") + BY._baseDomain + "/media" + launcherSettings.launcher_image_url;
                            }
                        }

                    } else if (launcherSettings && launcherSettings.hasOwnProperty("icon") && instance.launcherType == "icon") {
                        instance.icon = launcherSettings.icon;
                        if (launcherSettings.iconText && !BY_isNullOrEmpty(launcherSettings.iconText.trim())) {
                            instance.iconText = launcherSettings.iconText.trim();
                        }
                    }


                    if (options.preButton && options.preButton.forceSecureUrl && options.preButton.forceSecureUrl == true) {
                        if (instance.imageUrl.indexOf("http://") == 0) {
                            //replace http:// in https://
                            instance.imageUrl = instance.imageUrl.replace("http://", "https://");
                        } else if (instance.imageUrl.indexOf("https://") == -1) {
                            instance.imageUrl = "https://" + instance.imageUrl;
                            instance.imageUrl = instance.imageUrl.replace("////", "//").replace("///", "//");
                        }
                    }

                    //image alt       
                    if (options.preButton && options.preButton.imageAlt && options.preButton.imageAlt != "") {
                        instance.imageAlt = options.preButton.imageAlt;
                    } else if (launcherSettings.launcher_image_alt_text && launcherSettings.launcher_image_alt_text != "") {
                        instance.imageAlt = launcherSettings.launcher_image_alt_text;
                    } else {
                        instance.imageAlt = "";
                    }

                    //launcher shake
                    if (options.preButton && options.preButton.shake && options.preButton.shake != "") {
                        instance.shakeButton = options.preButton.shake;
                    } else if (launcherSettings.launcher_shake && launcherSettings.launcher_shake != 0 && launcherSettings.launcher_shake != "") {
                        instance.shakeButton = (launcherSettings.launcher_shake ? true : false);
                    } else {
                        instance.shakeButton = false;
                    }

                    //launcher shake interval
                    if (instance.shakeButton) {
                        if (options.preButton && options.preButton.shake && options.preButton.shake != "") {
                            instance.shakeInterval = options.preButton.shake;
                        } else if (launcherSettings.launcher_shake_interval && launcherSettings.launcher_shake_interval != "") {
                            instance.shakeInterval = launcherSettings.launcher_shake_interval * 1000;
                        } else {
                            instance.shakeInterval = null;
                        }
                    }
                    //bubble messages     
                    if (options.preButton && options.preButton.bubbleMessages && options.preButton.bubbleMessages != "") {
                        instance.bubbleMessages = options.preButton.bubbleMessages;
                        BY.bubbles.hasStaticMessages = true;
                    } else if (launcherSettings.launcher_bubble_messages && launcherSettings.launcher_bubble_messages != "") {
                        instance.bubbleMessages = launcherSettings.launcher_bubble_messages;
                        BY.bubbles.hasStaticMessages = true;
                        //launcherSettings.launcher_bubble_messages && launcherSettings.launcher_bubble_messages != ""
                    } else {
                        instance.bubbleMessages = "";
                    }

                    if (instance.bubbleMessages != "") {
                        //bubble messages interval  
                        if (options.preButton && options.preButton.bubbleMessagesInterval && options.preButton.bubbleMessagesInterval != "") {
                            instance.bubbleMessagesInterval = options.preButton.bubbleMessagesInterval;
                        }
                        else if (launcherSettings.launcher_bubble_messages_interval && launcherSettings.launcher_bubble_messages_interval != "") {
                            instance.bubbleMessagesInterval = launcherSettings.launcher_bubble_messages_interval;
                        }
                        else {
                            instance.bubbleMessagesInterval = 6000;
                        }
                        //bubble messages sound on off
                        if (options.preButton && typeof (options.preButton.bubbleMessagesSound) !== "undefined") {
                            instance.bubbleMessagesSound = options.preButton.bubbleMessagesSound;
                        }
                        else if (launcherSettings.launcher_bubble_messages_sound_enable && launcherSettings.launcher_bubble_messages_sound_enable != "") {
                            instance.bubbleMessagesSound = launcherSettings.launcher_bubble_messages_sound_enable == "1";
                        }
                        else {
                            instance.bubbleMessagesSound = true;
                        }
                        BY.bubbles.init(instance);
                    }


                    if (options.preButton && options.preButton.style) {
                        instance.imgStyle = options.preButton.style;
                    }
                    var alignMiddle = {
                        val: false
                    };

                    if (instance.vAlign != "") {
                        instance.vAlign = BY._getVeritcalAlign(instance, alignMiddle);
                    }
                    // take the size of the iframe depends on the size the iframe animate 
                    if (instance.animatePosition == "right" || instance.animatePosition == "left") {
                        instance.panelSizeToShow = instance.w;
                    }
                    if (instance.animatePosition == "top" || instance.animatePosition == "bottom") {
                        instance.panelSizeToShow = instance.h;
                    }

                    // load default launcher

                    var launcherDesign = "";

                    if (instance.launcherType && instance.launcherType == "icon" && BY_isNullOrEmpty(instance.iconText)) {
                        launcherDesign = "cb-launcher-circle";
                    }
                    else {
                        launcherDesign = "cb-launcher-ellipse mainThemeColorBG";
                    }
                    var onClick = function () {
                        BY.launchApp(instance.id);
                    };
                    if (instance.iframeId == "ifrContactUs" && launcherSettings.show_modules_outside && launcherSettings.show_modules_outside == "1" && instance.initialState != "hidden") { /// contact us    
                        instance.showSupportedStreams = true;

                        if (BY.launcher.supportedStreams && BY.launcher.supportedStreams.length == 1) {
                            onClick = BY._getOnClickContactUsStream(true, true, " + BY.launcher.supportedStreams[0] + ", instance);
                        }
                        else {
                            onClick = function () {
                                BY.slideUpStreamsContactUs(instance.id);
                            };
                            instance.preButton = BY._getContactUsStreamsButtons(instance);
                        }
                    }

                    instance.preButton += "<div id='" + instance.panelIdToHide + "' data-launcher-type='" + (instance.launcherType ? instance.launcherType : "") + "' class='by_button cb_launcher_container " + launcherDesign + "' style='background-color:" + instance.backgroundColor + ";" + (instance.dock == "left" ? "left:1.2em; direction:ltr;" : "right:1.2em; direction:rtl;") + "' data-launcher-position='" + (instance.isMiddleLauncher ? "middle" : "bottom") + "'>";
                    if (instance.hasButtonToHideLauncher) {
                        instance.preButton += "<span class='remove-launcher cb-close-icon-btn' style='" + (instance.launcherType && instance.launcherType == "logo" ? (instance.dock == "right" ? "left:-.7em;" : "right:-.7em;") : (instance.dock == "right" ? "left:0;" : "right:0;")) + "'>✕</span>";
                    }
                    instance.preButton += " <button class='cb-pre-button' id='btnImgPreButton_" + instance.id + "' aria-label='" + instance.imageAlt + "' title='" + instance.imageAlt + "'  style='" + (instance.launcherType && instance.launcherType == "logo" ? "justify-content: flex-end;" : "") + (BY_isMobile() ? "outline: none;" : "") + "flex-flow: " + (instance.dock == "right" ? "row-reverse" : "row") + "' aria-haspopup='true'>";

                    if (instance.launcherType && instance.launcherType == "logo") {
                        instance.preButton += "<div id='imgLauncherWrapper' ><img id='imgPreButton_" + instance.id + "' class='cb_preButtonImg' alt='" + instance.imageAlt + "'  " + (instance.imgStyle && instance.imgStyle.length == 0 ? "" : " style='" + instance.imgStyle + "' ") + " src='" + instance.imageUrl + "'/></div>";
                    } else if (instance.launcherType && instance.launcherType == "icon") {
                        instance.preButton += "<span class='launcher-icon' >" + BY.GetIconSVG(instance.icon) + "</span> " + (instance.iconText ? "<span class='launcher-text' style=' direction:" + launcherDir + "';>" + instance.iconText + "</span>" : "") + "";
                    }
                    instance.preButton += "</button><button class='close-launcher' tabindex='1' type='button' data-instanceId='" + instance.id + "' ><span>✕</span></button>" +

                    "<audio id='audioNotification' preload='metadata'>" +
                    "<source src='" + (BY._baseDomain.indexOf("https:") == -1 ? "https:" + BY._baseDomain : BY._baseDomain) + "Images/Audio/newmessage.mp3' type='audio/mpeg' />" +
                    "</audio>";
                }

                function _BY_renderTopButtons(cssClass, icon, alt, tabIndex) {
                    var topButtonsSide = ((instance.language == "he" || instance.language == "ar") ? "left" : "right");
                    return "<div class='cb_top_buttons' style='" + topButtonsSide + ":0;z-index: 100;'>" +
                        "<button tabindex='" + tabIndex + "' type='button' data-instanceId='" + instance.id + "' class='" + cssClass + " BY_TopButton' style='color:" +
                        (instance.closeIconsColor ? instance.closeIconsColor : "#fff") +
                        " !important;' title='" +
                        (cssClass == "cb_imgClose" ? BY.launcher.texts.closeWindow : BY.launcher.texts.minimizeWindow) + "' aria-label='" +
                        (cssClass == "cb_imgClose" ? BY.launcher.texts.closeWindow : BY.launcher.texts.minimizeWindow) + "'>" +
                        icon +
                        "</button>" +
                        "</div>";
                }
                if (instance.iframeId == "ifrChat") {
                    instance.preButtonAriaLabel = BY.launcher.texts.chatWithRepresentative;
                }
                else if (instance.iframeId == "ifrContactUs") {
                    instance.preButtonAriaLabel = BY.launcher.contactUsApp;
                }
                var spaceFromBottom = 105;
                var spaceFromTop = 14;

                var areYouSureText = (BY.launcher.settings.show_exit_chat_confirmation == "1" ? BY.launcher.texts.AreYouSure : BY.launcher.texts.areYouSureWithSignOut);
                var AppBox = "<div tabindex='-1' id='" + instance.panelIdToShow + "' data-launcher-position='" + (instance.isMiddleLauncher ? "middle" : "bottom") + "' data-device='" + (BY_isMobile() ? "mobile" : "desktop") + "' class='by_iframeDragabale cb_iframe_container " + instance.panelClass + " " + (instance.initialState == "hidden" || instance.preButton == "" ? "cb_custom_launcher" : "cb_default_launcher cb_launcher_transform_" + instance.dock) +
                    "' title='" + BY.launcher.BumpyardIframe + "'  style='margin-bottom: 70px; margin" + (openAllOverPage == true ? ":0" : instance.initialState == "hidden" && instance.isFullHeight ? ":40px 40px 0px;" : (instance.isMiddleLauncher ? ":40px 20px 0 20px" : (instance.dock == "right" ? "-right:20px;" : "-left:20px;"))) + "; bottom:0px;" +
                    "height:" + instance.h + " !important;" +
                                (openAllOverPage == true || instance.initialState == "hidden" ? "max-height:100% !important" : "max-height: " + (window.innerHeight - spaceFromBottom - spaceFromTop) + "px !important") + ";width:" + instance.w + ";" +
                    (openAllOverPage == true ? "max-width:100%;" : "max-width:85%;max-width:calc(100% - 10px);") + (instance.dock == "left" ? "left:1em;" : "right:1em;") + instance.appWrapperStyle + "'>" +
                    _BY_renderTopButtons("cb_imgClose", "<span style='color:" + (instance.closeIconsColor ? instance.closeIconsColor : "#fff") + " !important'>✕</span>", BY.launcher.texts.closeWindow, 3) +
                    (instance.supportConfirmClose == true ?
                        "<div class='cb_overlayConfirmClose'>" +
                        "<fieldset>" +
                        "<legend style='direction:" + launcherDir + ";' aria-label= '" + areYouSureText + "'>" + areYouSureText + "</legend>" +
                        "<div class=\"divInputClose\">" +
                            "<button type=\"button\" class=\"mainThemeColorBG btnConfirmClose\" style=\"background-color:  " + instance.themeColor + ";\" tabindex=\"150\"><span class=\"spnName\">" + BY.launcher.texts.yes + "</span></button>" +
                        "</div>" +
                        "<div class=\"divInputClose\"><button type=\"button\" class=\"mainThemeColorBG btnUnConfirmClose\" style=\"background-color:  " + instance.themeColor + ";\"  tabindex=\"151\"><span class=\"spnName\">" + BY.launcher.texts.No + "</span></button></div>" +
                        "</fieldset>" +
                        "</div>" : "")

                    + '<div class="cb_div_imgLoader" style="display:none"><div id="commbox_splash">' + BY.GetLoaderSVG(instance.themeColor) + '</div></div>'

                    + "<iframe tabindex='4' class='cb_app_iframe' allow='geolocation; microphone; camera' id='" + instance.iframeId + "' name='" + instance.iframeName + "' title= '" + (instance.preButtonAriaLabel ? instance.preButtonAriaLabel : "") + "' src=''></iframe>"
                + "</div>";

                setTimeout(function () {
                    var preButtonWrapper = "cb_pre_button_wrapper_" + instance.id;
                    if (instance.preButton.length > 0) {
                        jQuery('body').append("<div id='" + preButtonWrapper + "'>" + instance.preButton + "</div>");
                    }
                    jQuery('body').append(AppBox);
                    if (BY_isMobile() && instance.launcherType == "logo") {
                        jQuery('.cb_preButtonImg').one("load", function () {
                            jQuery('.cb_launcher_container .remove-launcher').css("opacity", 1)
                        });
                    }

                    var appBox = jQuery("#" + instance.panelIdToShow);


                    /////////// binding buttons click events ///////////

                    if (instance.preButton.length > 0) {

                        var preButtonWrapper = jQuery("#" + preButtonWrapper);
                        var closeBtn = preButtonWrapper.find(".cb-close-icon-btn");
                        //add buttons click events
                        if (closeBtn.length > 0) {
                            closeBtn.off()
                            closeBtn.click(function () {
                                event.stopPropagation();
                                jQuery("#" + instance.panelIdToHide).hide();
                            });
                        }
                        var preButton = preButtonWrapper.find(".cb-pre-button");
                        if (preButton.length > 0) {
                            preButton.click(function () {
                                onClick();
                            });
                        }

                        if (instance.contactUsData) {
                            preButtonWrapper.find(".cb_contact_us_module_btn").click(function (elm) {
                                var moduleId = jQuery(this).attr("data-module-id");
                                instance.contactUsData[moduleId].onclick();
                            });
                        }
                    }

                    var btnConfirmClose = appBox.find(".btnConfirmClose");
                    if (btnConfirmClose.length > 0) {
                        btnConfirmClose.click(function () {
                            BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Minimize', 'OK');
                            BY.googleAnalytics.pushEvent('event', instance.urlUniqueName, 'Close', 'OK');
                            BY.closeAppFrame('close', instance.id, 'minimized');
                        });
                    }


                    var btnUnConfirmClose = appBox.find(".btnUnConfirmClose");
                    if (btnUnConfirmClose.length > 0) {
                        btnUnConfirmClose.click(function () {
                            BY.closeAppFrame('cancel', instance.id);
                        });
                    }

                    /////////// end binding buttons click events ///////////
                    try {
                        //Fix blurry text. if appBox Height is 501px and translate y is 50% than we will get blurry text, that is because we land on a .5 pixel value.
                        // what we will do is to set the height value to 500px.
                        if (appBox.length > 0 && appBox.outerHeight() % 2 != 0) {
                            var height = appBox.css("height");

                            if (height.indexOf("px") > -1) {
                                var height = height.replace("px", "");
                                appBox.css("height", (height - 1) + "px");
                            } else if (height.indexOf("%") > -1) {
                                var height = height.replace("%", "");
                                appBox.css("height", "calc(" + height + "% - 1px)");
                            }
                        }
                    } catch (ex) {

                    }
                    //check if app was opened.
                    var stateCookieValue = BY.cookieManager.getStateCookieValue(instance.streamId);
                    if (stateCookieValue != "" && stateCookieValue == "opened" && instance.keepAppOpen == true && !BY_isMobile()) {
                        // keep app open
                        instance.stateCookieValue = "opened";
                        instance.showTimeout = 0;
                        BY.bubbles.stop(instance.id);
                        BY._stopShakePreButton(instance.id);
                    }
                    // 1 = Available 2 = OverLoaded 
                    if (instance.isStateSupported(BY._streamState)) {
                        if (instance.initialState == "opened" || instance.stateCookieValue == "opened") {
                            //slide app without button
                            //todo yechiel: change the timeout with other async method
                            setTimeout(function () {
                                if (instance.showSupportedStreams) {
                                    BY.slideUpStreamsContactUs(instance.id);
                                }
                                else {
                                    BY._slideOutPreButton(instance.id);
                                    BY.bubbles.stop(instance.id);
                                    BY._stopShakePreButton(instance.id);
                                }
                            }, 150);
                        }
                    else if (instance.animatePosition && instance.initialState == "preButton") {
                        // slide button
                        BY._slideInPreButton(instance.id, false, stateCookieValue);    
                        }
                    }
                    else {
                        // 3 = UnAvailable => when unavailable we don't show preButton
                        jQuery("#" + instance.panelIdToHide).remove();
                    }

                    instance.isBusy = false;

                    if (callback) {
                        callback();
                    }
                    if (callbackfunc) {
                        callbackfunc();
                    }

                    //execute rules
                    BY._rulesAnalyzaer(instance);
                    BY._intervalHandler = setInterval(function () {
                        BY._rulesAnalyzaer(instance)
                    }, 1000);
                    if (BY.bubbles.hasStaticMessages) {
                        BY.bubbles.renderBubbleMessages(instance);
                    }
                }, instance.showTimeout);
            });
        },

        _getVeritcalAlign: function (instance, alignMiddle) {
            var vAlign = instance.vAlign;
            var animatePosition = instance.animatePosition;

            var imageWidth = jQuery('#' + instance.panelIdToHide).width();
            if (vAlign && vAlign.length > 0) {
                switch (vAlign) {
                    case "middle":
                        {
                            alignMiddle.val = true;
                            if (!imageWidth)
                                imageWidth = 100;
                            vAlign = "bottom:calc(50% - " + imageWidth / 2 + "px);";
                            break;
                        }
                    case "bottom":
                        {
                            vAlign = "bottom:0;";
                            break;
                        }
                    default:
                        {
                            vAlign = "bottom:0;";
                            break;
                        }
                }

            } else {
                vAlign = "bottom:0;";
            }
            return vAlign;
        },
        _getOnClickContactUsStream: function (hasOneMessengerStream, hasOneWaStream, currentStream, instance) {
            var onClickFunction = null;
            var link = "";

            switch (currentStream.moduleId) {
                case 3:
                case 38:
                    if (hasOneMessengerStream) {
                        link = "http://m.me/" + currentStream.streamProviderId;
                    }
                    break;
                case 13:
                    if (hasOneWaStream) {
                        link = "https://wa.me/" + currentStream.streamProviderId;
                    }
                    break;
            }

            if (link) {
                onClickFunction = function () {
                    window.open(link)
                };
            }
            else {
                onClickFunction = function () {
                    BY._appendSelectedModuleId(currentStream.moduleId, instance.id);
                }
            }

            return onClickFunction;

        },
        _getContactUsStreamsButtons: function (instance) {
            var supportedStreams = BY.launcher.supportedStreams;
            var html = '<div id="divWrappersupportedStreams_' + instance.id + '" class="' + (instance.isMiddleLauncher ? "supported-streams-middle-launcher" : "") + '" style="' + (instance.dock == "left" ? "left:1em" : "right:1em") + '">';
            var icons = {
                15: "sms", 14: "whatsapp", 11: "chat", 10: "mail", 24: "fbmessenger"
            };
            var hasOneWaStream = supportedStreams.filter(function (stream) { return stream.moduleId == 13 }).length == 1;
            var hasOneMessengerStream = supportedStreams.filter(function (stream) { return stream.moduleId == 38 }).length == 1;


            instance.contactUsData = {};
            instance.contactUsData.hasOneMessengerStream = hasOneMessengerStream;
            instance.contactUsData.hasOneWaStream = hasOneWaStream;
            var modules = [];
            for (var i = 0; i < supportedStreams.length; i++) {
                var currentStream = supportedStreams[i];

                if (modules.indexOf(currentStream.moduleId) > -1 || currentStream.moduleId == 3) {
                    continue;
                }

                modules.push(currentStream.moduleId);
                instance.contactUsData[currentStream.moduleId] = {};
                instance.contactUsData[currentStream.moduleId].onclick = BY._getOnClickContactUsStream(hasOneMessengerStream, hasOneWaStream, currentStream, instance);

                html += '<div class="divModuleImg f_l_a" ><button class="cb_contact_us_module_btn" data-module-id="' + currentStream.moduleId + '">'
                            + '<div id="imgModule_' + currentStream.type + '" class="moduleImg imgModule_' + currentStream.type + '">' + BY.GetIconSVG(icons[currentStream.type]) + '</div></button>'
                        + '</div>';

            }
            html += "</div>";

            instance.contactUsData.modules = modules;
            return html;

        },

        _appendSelectedModuleId: function (moduleId, instanceId) {
            var instance = BY.instances[instanceId];
            instance.iframeUrlChanged;
            instance.iframeUrl = instance.iframeUrl.replace(/&modid=[0-9]+/g, "") + "&modid=" + moduleId;
            jQuery('#divWrappersupportedStreams_' + instanceId).attr({ "data-selected-module": moduleId });
            BY.isOpen = true;
            instance.isBusy = false;
            instance.isOpen = false;
            BY.launchApp(instanceId);
        },

        _appendCssExtentions: function () {
            var cssId = 'cb_extentions'; // you could encode the css path itself to generate id..
            if (!document.getElementById(cssId)) {
                var head = document.getElementsByTagName('head')[0];
                var link = document.createElement('link');
                link.id = cssId;
                link.rel = 'stylesheet';
                link.type = 'text/css';
                link.href = (BY._baseDomain.indexOf("https:") == -1 ? "https:" + BY._baseDomain : BY._baseDomain) + '/Styles/cb_extentions.css';
                link.media = 'all';
                head.appendChild(link);
            }
        },

        _showUserConnected: function (showUser) {
            var divUserConnected = jQuery("#divUserConnected");
            var divUserName = jQuery("#divUserName");
            var divDisconnectButton = jQuery("#divDisconnectButton");
            if (divUserConnected.length > 0) {
                if (showUser) {
                    if (BY.user) {
                        var connectedName = "";
                        if (BY.user.firstName && BY.user.firstName.length > 0) {
                            connectedName = BY.user.firstName;
                        }
                        if (BY.user.lastName && BY.user.lastName.length > 0) {
                            if (connectedName.length > 0) {
                                connectedName += " ";
                            }
                            connectedName += BY.user.lastName;
                        }
                        if (connectedName.length == 0) {
                            // user without name, try to take email or phone.
                            if (BY.user.email && BY.user.email.length > 0) {
                                connectedName = BY.user.email;
                            } else if (BY.user.phone && BY.user.phone.length > 0) {
                                connectedName = BY.user.phone;
                            }
                        }
                        if (connectedName && connectedName.length > 0) {
                            divUserName.html("<div><span title='" + connectedName + "'>" + connectedName + "</span></div>");
                            divUserName.removeClass("hide").show();
                            jQuery("#divUserName + .menuSeperator").removeClass("hide");
                        }

                        divUserConnected.show();
                        divDisconnectButton.removeClass("hide").show();

                    } else {
                        divUserName.hide();
                        jQuery(".a_l").hide();
                    }

                } else {
                    divDisconnectButton.hide();
                    divUserName.hide();
                    divUserConnected.hide();
                }
            }
        },

        //slide out pre button and slide in panel(iframe)
        _slideOutPreButton: function (instanceId, callback) {
            var instance = BY.instances[instanceId];
            if (instance.isBusy == true || instance.isOpen == true) {
                if (callback) {
                    callback();
                }
                return;
            }

            var appIframe = jQuery("#" + instance.iframeId);
            if (instance.iframeUrlChanged == true) {
                appIframe.attr("src", "");
            }
            else {
                // reopen chat- clear old close value
                // when we remove the hash and there's no more hash items in the URL it causes an unnecessary iframe load
                // so that, we pass the "1"(random character) for the newHashKeyValue parameter 
                if (!BY_isNullOrEmpty(appIframe.src)) {
                    appIframe.attr('src', BY.getIframeHash(appIframe.attr('src'), "1", false, ["closeWindowState=close"]));
                }
            }

            var iframeId = instance.iframeId;
            var removeTimeout = 1000;
            var panelIdToHide = instance.panelIdToHide;
            var animatePosition = instance.animatePosition;
            var animateDistance = instance.animateDistance;
            var imageWidth = jQuery('#' + instance.panelIdToHide).width();
            var panelIdToShow = instance.panelIdToShow;
            var panelSizeToShow = instance.panelSizeToShow;
            var preButton = jQuery("#btnImgPreButton_" + iframeId);
            preButton.attr("tabIndex", "-1");

            // relevence only for chat
            localStorage.removeItem("unread_messages_" + instance.streamId);
            preButton.find('.cb_nodification_badge').hide().attr("data-messages", 0);

            BY.cookieManager.setStateCookie(instance.streamId, "opened", (1 / 24 / 12)); //set cookie for 5 minutes  
            instance.isOpen = true;
            instance.isBusy = true;
            this._stopShakePreButton(instance.id);
            var that = this;

            var panel;
            if (panelIdToShow) {
                panel = jQuery('#' + panelIdToShow);
            }

            var iframe = jQuery("#" + iframeId);
            var iframeUrlChanged = (iframe.attr("src").split('#')[0] != instance.iframeUrl.split('#')[0]);

            if (iframeUrlChanged) {
                panel.find(".cb_div_imgLoader").show();
            }

            setTimeout(function () {
                if (iframeUrlChanged) {
                    //check this to avoid duplicate reload of the same iframe
                    iframe.attr("src", instance.iframeUrl);
                    //check if jQuery support on, thare is old jQuery plugins in sites that not support "on"
                    if (iframe.on) {
                        iframe.on("load", function () {
                            panel.find(".cb_div_imgLoader").fadeOut();
                            instance.isBusy = false;
                            if (callback) {
                                callback();
                            }
                        });
                    } else {
                        iframe.load(function () {
                            panel.find(".cb_div_imgLoader").fadeOut();
                            instance.isBusy = false;
                            if (callback) {
                                callback();
                            }
                        });
                    }
                } else {
                    // scroll bottom
                    panel.find(".cb_div_imgLoader").fadeOut();
                    instance.isBusy = false;
                    if (callback) {
                        callback();
                    }
                }

            }, removeTimeout);

            jQuery('#' + panelIdToHide).addClass('cb-close-launcher ' + (instance.isMiddleLauncher ? 'middle-to-bottom' : '')).css({
                "border-radius": (instance.dock == "left" ? " 4px 30px 30px 30px" : " 30px 4px 30px 30px")
            }).removeClass('bottom-to-middle');
            if (panelIdToShow && (!panel || panel.length == 0 || panel.length > 0)) { //&& !panel.is(":visible")
                //add event to close panel if user click on close button
                if (!BY.addEventClose) {
                    BY.addEventClose = true;

                    if (jQuery(document).on) {
                        jQuery(document).on("click", '.cb_imgClose , .close-launcher', function () {
                            BY.closeApp(jQuery(this).attr("data-instanceId"));
                            if (instance.showSupportedStreams) {
                                BY.addEventClose = false;
                            }
                        });
                    } else {
                        jQuery('.cb_imgClose , .close-launcher').click(function () {
                            BY.closeApp(jQuery(this).attr("data-instanceId"));
                            if (instance.showSupportedStreams) {
                                BY.addEventClose = false;
                            }
                        });
                    }
                }
                if (animatePosition == undefined) {
                    animatePosition = "bottom";
                }

                if (instance.initialState == "hidden" || instance.isMiddleLauncher) {
                    panel.css(animatePosition, -panel.width()).css("opacity", "0.3");
                }

                if (instance.openAllOverPage && instance.openAllOverPage == true) {
                    if (BY_isMobile() && jQuery("meta[name='viewport']").length > 0) {
                        //this is mobile and current page contain viewport meta tag.
                        // add body scrollbar visibility hidden
                        if (!BY.isBYOpenFullScreenAdded) {
                            BY.isBYOpenFullScreenAdded = true;
                            //create the class for host body
                            BY.addClassToBody(".BYOpenFullScreen{ overflow:hidden !important; }");
                        }

                        jQuery("body").addClass("BYOpenFullScreen");

                    }
                }

                if (instance.initialState == "hidden" || instance.isMiddleLauncher) {

                    panel.fadeTo(500, 1);
                }

                panel.css(animatePosition, '0em');

                if (BY_isMobile() || (instance.initialState == "hidden" && instance.isFullHeight)) {
                    panel.css('bottom', '0');
                    if (BY_isMobile()) {
                        panel.addClass('commbox_app');
                    }
                }
                else if (instance.showSupportedStreams) {
                    panel.css({ 'bottom': '30px', 'margin': "0 97px" }).addClass('contact_us_modules_outsides_app');
                }
                else {
                    panel.css({ 'bottom': '105px', 'margin': "0 20px" });
                    panel.addClass('commbox_app');
                }

                //TODO:  need to find a better solution than using 'setTimeout'

                // add class for animation
                setTimeout(function () {
                    panel.show();
                }, 100);
            }
        },

        _toggleCloseLauncher: function (instance, isDelayed) {
            var divWrappersupportedStreams = jQuery("#divWrappersupportedStreams_" + instance.id);
            if (divWrappersupportedStreams.length == 0 || !divWrappersupportedStreams.hasClass("is-showing-options")) {
                jQuery('#' + instance.panelIdToHide).removeClass('cb-close-launcher middle-to-bottom').css({ "border-radius": "40px", 'bottom': '' }).addClass((instance.isMiddleLauncher ? 'bottom-to-middle' : ''));
            }
            else if (isDelayed || BY.isOpen) {
                jQuery('#' + instance.panelIdToHide).addClass('cb-close-launcher').css({ "border-radius": "40px" });
            }
        },

        _slideInPreButton: function (instanceId, focusLauncher, cookieState) {
            var instance = BY.instances[instanceId];
            if (instance.isOpen == true)
                return;

            var iframeId = instance.iframeId;
            var panelId = instance.panelIdToHide;
            var animatePosition = instance.animatePosition;
            var imageWidth = jQuery('#' + instance.panelIdToHide).width();
            var animateDistance = instance.animateDistance;

            var preButton = jQuery("#btnImgPreButton_" + iframeId);
            preButton.removeAttr("tabIndex");

            instance.isOpen = false;
            instance.isBusy = true;
            BY.cookieManager.setStateCookie(instance.streamId, cookieState || "");

            if (cookieState == "minimized" && iframeId && jQuery("#" + iframeId).attr("src") == "") {
                setTimeout(function () {
                    jQuery("#" + iframeId).attr("src", instance.iframeUrl);

                    //showing the the notification messages when the chat is closed
                    if (instance.showNotifications) {
                        instance.showNotifications();
                    }
                }, 1000);
            }

            setTimeout(function () {
                instance.isBusy = false;
                BY._shakePreButton(instance.id);
                if (focusLauncher) {
                    jQuery("#btnImgPreButton_" + iframeId).trigger('focus');
                }

            }, 1000);
        },

        _shakePreButton: function (instanceId) {
            var instance = BY.instances[instanceId];
            var panelId = instance.panelIdToHide;
            var shakeButton = instance.shakeButton;
            var shakeInterval = instance.shakeInterval;

            if (instance.isAlreadyShaked == true) {
                return;
            }

            if (shakeButton && shakeButton == true) {
                var divPreButton = jQuery('#' + panelId);

                var intervalTime = 4000;
                if (shakeInterval && shakeInterval.toString().length > 0 && parseInt(shakeInterval) > 1000) {
                    intervalTime = parseInt(shakeInterval);
                }

                var maxNumShakes = 3;
                instance.intervalPreButton = setInterval(function () {
                    if (!divPreButton.hasClass('cb_bounce')) {
                        divPreButton.addClass('cb_bounce');
                    } else {
                        divPreButton.replaceWith(divPreButton.clone(true));
                    }
                    maxNumShakes--;
                    if (maxNumShakes == 0) {
                        BY._stopShakePreButton(instance.id);
                    }

                }, intervalTime);
            }
        },

        _stopShakePreButton: function (instanceId) {
            var instance = BY.instances[instanceId];
            instance.isAlreadyShaked = true;
            instance.shakeButton = false;
            var panelId = instance.panelIdToHide;
            var divPreButton = jQuery('#' + panelId);
            divPreButton.removeClass('cb_bounce');

            if (instance.intervalPreButton != null) {
                clearInterval(instance.intervalPreButton);
                instance.intervalPreButton = null;
            }
        },


        //if user logged to facebook/bumpyard..
        //recursive function => check all providers..
        _getLoginStatus: function (callback, indexProviders, options) {
            // callback function for the recursive getLoginStatus for each provider
            var onCallback = function (response) {
                if (BY._counterProviders > 0) {
                    BY._counterProviders--;
                }

                if (response.status == 'connected') {
                    BY._showUserConnected(true);
                    callback(response);
                } else {
                    BY._getLoginStatus(callback, ++indexProviders, options);
                }
            }

            // recursive call: exit condition
            if (indexProviders >= this._supportedProviders.length) {
                BY._showUserConnected(false);
                callback({
                    status: "disconnected",
                    user: null
                });
            } else {
                switch (this._supportedProviders[indexProviders]) {
                    case "facebook":
                        BY_FacebookConnect.getLoginStatus(onCallback, options);
                        break;
                    case "bumpyard":
                        BY_BumpyardConnect.getLoginStatus(onCallback, options);
                        break;
                    case "google":
                        BY_GoogleConnect.getLoginStatus(onCallback, options);
                        break;
                    case "twitter":
                        BY_TwitterConnect.getLoginStatus(onCallback, options);
                        break;
                    default:
                        {
                            if (BY._counterProviders > 0) {
                                BY._counterProviders--;
                            }
                            BY._getLoginStatus(callback, ++indexProviders, options);
                        }
                }
            }
        },

        //recursive function => logout user from all providers
        _logout: function (callback, indexProviders) {
            if (indexProviders >= this._supportedProviders.length) {
                callback({
                    status: "disconnected"
                });
            } else {

                switch (this._supportedProviders[indexProviders]) {
                    case "facebook":
                        {
                            BY_FacebookConnect.logout(function (response) {
                                BY._counterProviders--;
                                BY._logout(callback, ++indexProviders);
                            });
                        }
                        break;
                    case "bumpyard":
                        {
                            BY_BumpyardConnect.logout(function (response) {
                                BY._counterProviders--;
                                BY._logout(callback, ++indexProviders);
                            });
                            break;
                        }
                    case "google":
                        {
                            BY_GoogleConnect.logout(function (response) {
                                BY._counterProviders--;
                                BY._logout(callback, ++indexProviders);
                            });
                            break;
                        }
                    case "twitter":
                        {
                            BY_TwitterConnect.logout(function (response) {
                                BY._counterProviders--;
                                BY._logout(callback, ++indexProviders);
                            });
                            break;
                        }
                    default:
                        {
                            BY._counterProviders--;
                            BY._logout(callback, ++indexProviders);
                        }
                }
            }
        },

        _callbackIfAllProvidersInitialized: function (callback) {
            var allProvidersInitialized = true;
            for (var i = 0; i < BY._supportedProviders.length; i++) {
                if (BY._initializedProvidersBooleanArray[BY._supportedProviders[i]] == false) {
                    allProvidersInitialized = false;
                }
            }
            if (allProvidersInitialized) {
                callback({
                    initStatus: "ok"
                });
            }
        },

        // load the baseDomain parameter from the script tag if it is in absolute path otherwise from the options
        _getBaseDomain: function (options) {
            var connectScript = jQuery("#connectScript");
            var baseDoaminSrc = "";
            if (connectScript && connectScript.length > 0) {
                baseDoaminSrc = connectScript.attr("src");
                baseDoaminSrc = baseDoaminSrc.replace("bumpyardpro.com", "commbox.io"); // always commbox.io
                if (baseDoaminSrc.indexOf("http:") > -1 || baseDoaminSrc.indexOf("https:") > -1) {
                    baseDoaminSrc = baseDoaminSrc.replace("http:", "").replace("https:", "");
                    baseDoaminSrc = baseDoaminSrc.substring(0, baseDoaminSrc.toLowerCase().indexOf("script"));
                    this._baseDomain = baseDoaminSrc;
                } else {
                    if (baseDoaminSrc && baseDoaminSrc.length > 0 && baseDoaminSrc.indexOf("//") == 0 && baseDoaminSrc.toString().toLowerCase().indexOf("/scripts") > 0) {
                        baseDoaminSrc = baseDoaminSrc.substring(0, baseDoaminSrc.toLowerCase().indexOf("script"));
                        this._baseDomain = baseDoaminSrc;
                    } else {
                        baseDoaminSrc = "";
                    }
                }
            }

            if (baseDoaminSrc == "") {
                if (options.baseDomain) {
                    if (options.appsSubDomain && options.appsSubDomain != "") {
                        this._baseDomain = "//" + options.appsSubDomain + "." + options.baseDomain;
                    } else {
                        this._baseDomain = "//" + BY._appsSubDomain + "." + options.baseDomain;
                    }
                }
            }
        },

        _rulesAnalyzaer: function (instance) {
            if (BY.launcher.rules) {
                if (BY.launcher.rules.length > 0) {
                    var rules = BY.launcher.rules.reverse();
                    for (i = rules.length - 1; i >= 0; i -= 1) {
                        var rule = rules[i];
                        if (rule != null) {
                            /****************************************FILTERS****************************************/
                            var ruleIsValid = true;
                            //stream state
                            if (rule.Filters.StreamState) {
                                if (BY._streamState == rule.Filters.StreamState) {
                                    ruleIsValid = true;
                                } else {
                                    ruleIsValid = false;
                                }
                            }

                            //time pass
                            if (ruleIsValid && rule.Filters.TimePass && rule.Filters.TimePass != "") {
                                if ((new Date().getTime() - BY._appLoadTime.getTime()) / 1000 > rule.Filters.TimePass) {
                                    ruleIsValid = true;
                                } else {
                                    ruleIsValid = false;
                                }
                            }

                            //custom triggers
                            if (ruleIsValid && rule.Filters.CustomTrigger && rule.Filters.CustomTrigger.length > 0) {
                                ruleIsValid = false;
                                jQuery.each(rule.Filters.CustomTrigger, function (i, customTrigger) {
                                    if (ruleIsValid) {
                                        return false;
                                    }

                                    jQuery.each(BY._triggers, function (i, pulledTrigger) {
                                        if (customTrigger.module && customTrigger.module == pulledTrigger.module.toLowerCase() && customTrigger.name && customTrigger.name == pulledTrigger.name.toLowerCase() && customTrigger.value && customTrigger.value == pulledTrigger.value.toLowerCase()) {
                                            ruleIsValid = true;
                                            return false;
                                        }
                                    });
                                });
                            }
                            //url
                            if (ruleIsValid && rule.Filters.Url && rule.Filters.Url.length > 0) {
                                ruleIsValid = false;
                                var currentUrl = (window.location != window.parent.location) ? document.referrer.toLowerCase() : parent.document.location.href.toLowerCase();

                                jQuery.each(rule.Filters.Url, function (i, url) {
                                    switch (parseInt(url.type)) {
                                        case BY._urlTypesEnum.matches:
                                            if (url.value == currentUrl) {
                                                ruleIsValid = true;
                                                return false;
                                            }
                                            break;
                                        case BY._urlTypesEnum.contains:
                                            if (~currentUrl.indexOf(url.value)) {
                                                ruleIsValid = true;
                                                return false;
                                            }
                                            break;
                                        case BY._urlTypesEnum.regex:
                                            var regex = new RegExp(url.value);
                                            if (currentUrl.match(regex)) {
                                                ruleIsValid = true;
                                                return false;
                                            }
                                            break;
                                    }
                                });

                            }
                            //active in streams
                            if (ruleIsValid && rule.Filters.Streams && rule.Filters.Streams.length > 0) {
                                var that = this;
                                ruleIsValid = false;
                                jQuery.each(rule.Filters.Streams, function (i, ssid) {
                                    if (ssid == BY.options.streamId) {
                                        ruleIsValid = true;
                                        return false;
                                    }
                                });
                            }
                            /****************************************ACTIONS    ****************************************/
                            var stateCookieValue = BY.cookieManager.getStateCookieValue(instance.streamId);
                            if (ruleIsValid && rule.Actions) {
                                var waitingTime = 0;
                                //Move To Stream
                                if (rule.Actions.MoveToStream && rule.Actions.MoveToStream != "") {
                                    waitingTime = 3000;
                                    var appName = "";
                                    var streamId = "";
                                    switch (rule.Actions.MoveToStream.Item3) {
                                        case 9:
                                            appName = "chat"
                                            break;
                                        case 25:
                                            appName = "navigator"
                                            break;
                                        case 21:
                                            appName = "contactUs"
                                            break;
                                    }
                                    var streamId = "";
                                    var subStreamId = "";
                                    //sub stream id
                                    if (rule.Actions.MoveToStream.Item2 && rule.Actions.MoveToStream.Item2 != "") {
                                        subStreamId = rule.Actions.MoveToStream.Item2;
                                    }
                                    //stream id
                                    if (rule.Actions.MoveToStream.Item1 && rule.Actions.MoveToStream.Item1 != "") {
                                        streamId = rule.Actions.MoveToStream.Item1;
                                    }
                                    if (appName != "" && streamId != "" && instance.streamId != streamId) {
                                        if (BY._intervalHandler != null) {
                                            clearInterval(BY._intervalHandler);
                                            BY._intervalHandler = null;
                                        }
                                        if (instance.name != appName) {
                                            BY._removeInstance(instance.id);
                                        }
                                        if (BY._streamState == 0) {
                                            //makes problems when the stream is not active
                                        }

                                        BY.setStreamId(appName, streamId, false, subStreamId, instance.id);
                                    }
                                }
                                //"mve to stream" is an async operation, so we use setTimeout method(in this case, callback is too complicated)
                                setTimeout(function () {
                                    if (!instance.isOpen) {
                                        // auto reply
                                        if (rule.Actions.AutoReply && rule.Actions.AutoReply != "") {
                                            // rules messages override others
                                            if (BY.bubbles.hasStaticMessages) {
                                                instance.bubbleMessages = [rule.Actions.AutoReply];
                                                BY.bubbles.hasStaticMessages = false;
                                            } else {
                                                if (instance.bubbleMessages == undefined || instance.bubbleMessages == "") {
                                                    instance.bubbleMessages = [];
                                                }
                                                instance.bubbleMessages.push(rule.Actions.AutoReply);
                                            }
                                            BY.bubbles.fireMessage = true;
                                        }
                                        //Launch app
                                        if (rule.Actions.LaunchApp && rule.Actions.LaunchApp == "1") {
                                            BY.bubbles.stop(instance.id);
                                            BY.bubbles.fireMessage = false;
                                            if (!instance.isOpen) {
                                                BY.show({ appId: instance.id });
                                            }
                                        }
                                        if (BY.bubbles.fireMessage && stateCookieValue != "opened") {
                                            //jQuery('.divPreBtnMessage').remove();
                                            BY.bubbles.renderBubbleMessages(instance);
                                            instance.bubbleMessages = [];
                                            BY.bubbles.fireMessage = false;
                                        }
                                    }
                                    BY.launcher.rules.splice(i, 1);
                                }, waitingTime);
                            }
                        }
                    }

                } else {
                    clearInterval(BY._intervalHandler);
                }
            }
        },

        _removeInstance: function (instanceid) {
            if (instanceid) {
                var instance = BY.instances[instanceid];
                if (instance) {
                    jQuery("#" + instance.panelIdToHide).remove();
                }
            }

        },

        _setAccessibilityStatus: function () {
            try {
                if (window.parent.location.href.indexOf('is_CB_frame') > -1) {
                    // if parent accessibilityIcon is active set accessiblity active setting to child by running toggleAccessibilityView function.
                    if (jQuery("#accessibilityIcon", parent.document).hasClass("accessibilityIconActive")) {
                        jQuery("#accessibilityIcon").addClass("accessibilityIconActive");
                        BY.toggleAccessibilityView(document, "active")
                    }
                    jQuery("#accessibilityIcon").hide();
                }
            }
            catch (e) {
            }
        },
        preventPoweredByDuplicates: function () {
            try {
                if (window.location.href.indexOf("is_CB_frame=1") > -1) {
                    jQuery("#divPoweredBy").hide().remove();
                }
            }
            catch (e) {
            }
        },

        escapeHtml: function (text) {
            var chr = {
                '"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'
            };
            return text.replace(/[\"&<>]/g, function (a) { return chr[a]; });
        },

        mergeObjects: function () {
            var resObj = {
            };
            for (var i = 0; i < arguments.length; i += 1) {
                var obj = arguments[i],
                    keys = Object.keys(obj);
                for (var j = 0; j < keys.length; j += 1) {
                    resObj[keys[j]] = obj[keys[j]];
                }
            }
            return resObj;
        }
    }
})();

var BY_userLang = navigator.language || navigator.userLanguage;
switch (BY_userLang.split("-")[0]) {
    case "en":
    case "eng":
    case "engs":
        {
            BY.defaultLanguage = "en";
            break;
        }
    case "he":
    case "heb":
    case "engs":
        {
            BY.defaultLanguage = "he";
            break;
        }
    case "ar":
    case "ara":
        {
            BY.defaultLanguage = "ar";
            break;
        }
    case "ru":
    case "rus":
        {
            BY.defaultLanguage = "ru";
            break;
        }
    case "pt":
    case "por":
        {
            BY.defaultLanguage = "pr";
            break;
        }
    case "tr":
    case "tur":
        {
            BY.defaultLanguage = "tr";
            break;
        }
    case "fr":
    case "fra":
    case "fras":
        {
            BY.defaultLanguage = "fr";
            break;
        }
    case "es":
    case "spa":
        {
            BY.defaultLanguage = "es";
            break;
        }
    case "de":
        {

            BY.defaultLanguage = "de";
            break;
        }
    case "fi":
        {
            BY.defaultLanguage = "fi";
            break;
        }
    case "da":
        {
            BY.defaultLanguage = "da";
            break;
        }
    case "it":
        {
            BY.defaultLanguage = "it";
            break;
        }
    case "ja":
        {
            BY.defaultLanguage = "ja";
            break;
        }
    case "no":
        {
            BY.defaultLanguage = "no";
            break;
        }
    case "pl":
        {
            BY.defaultLanguage = "pl";
            break;
        }
    case "sv":
        {
            BY.defaultLanguage = "sv";
            break;
        }
    default:
        {
            BY.defaultLanguage = "en";
        }
}

function getTextHexColorForBackgroundHexColor(backgroundHexColor) {
    var textColor = "#fff";

    if (backgroundHexColor != null && backgroundHexColor != "") {
        var rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(backgroundHexColor);
        rgb = {
            r: parseInt(rgb[1], 16),
            g: parseInt(rgb[2], 16),
            b: parseInt(rgb[3], 16)
        };

        var brightness = Math.round(((parseInt(rgb.r) * 299) +
            (parseInt(rgb.g) * 587) +
            (parseInt(rgb.b) * 114)) / 1000);

        if (brightness > 125) {
            textColor = "#000";
        }
    }

    return textColor;
}
